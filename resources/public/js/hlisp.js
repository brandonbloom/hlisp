var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__8500 = x == null ? null : x;
  if(p[goog.typeOf(x__8500)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__8501__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__8501 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8501__delegate.call(this, array, i, idxs)
    };
    G__8501.cljs$lang$maxFixedArity = 2;
    G__8501.cljs$lang$applyTo = function(arglist__8502) {
      var array = cljs.core.first(arglist__8502);
      var i = cljs.core.first(cljs.core.next(arglist__8502));
      var idxs = cljs.core.rest(cljs.core.next(arglist__8502));
      return G__8501__delegate(array, i, idxs)
    };
    G__8501.cljs$lang$arity$variadic = G__8501__delegate;
    return G__8501
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____8587 = this$;
      if(and__3822__auto____8587) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____8587
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2379__auto____8588 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8589 = cljs.core._invoke[goog.typeOf(x__2379__auto____8588)];
        if(or__3824__auto____8589) {
          return or__3824__auto____8589
        }else {
          var or__3824__auto____8590 = cljs.core._invoke["_"];
          if(or__3824__auto____8590) {
            return or__3824__auto____8590
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____8591 = this$;
      if(and__3822__auto____8591) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____8591
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2379__auto____8592 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8593 = cljs.core._invoke[goog.typeOf(x__2379__auto____8592)];
        if(or__3824__auto____8593) {
          return or__3824__auto____8593
        }else {
          var or__3824__auto____8594 = cljs.core._invoke["_"];
          if(or__3824__auto____8594) {
            return or__3824__auto____8594
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____8595 = this$;
      if(and__3822__auto____8595) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____8595
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2379__auto____8596 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8597 = cljs.core._invoke[goog.typeOf(x__2379__auto____8596)];
        if(or__3824__auto____8597) {
          return or__3824__auto____8597
        }else {
          var or__3824__auto____8598 = cljs.core._invoke["_"];
          if(or__3824__auto____8598) {
            return or__3824__auto____8598
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____8599 = this$;
      if(and__3822__auto____8599) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____8599
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2379__auto____8600 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8601 = cljs.core._invoke[goog.typeOf(x__2379__auto____8600)];
        if(or__3824__auto____8601) {
          return or__3824__auto____8601
        }else {
          var or__3824__auto____8602 = cljs.core._invoke["_"];
          if(or__3824__auto____8602) {
            return or__3824__auto____8602
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____8603 = this$;
      if(and__3822__auto____8603) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____8603
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2379__auto____8604 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8605 = cljs.core._invoke[goog.typeOf(x__2379__auto____8604)];
        if(or__3824__auto____8605) {
          return or__3824__auto____8605
        }else {
          var or__3824__auto____8606 = cljs.core._invoke["_"];
          if(or__3824__auto____8606) {
            return or__3824__auto____8606
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____8607 = this$;
      if(and__3822__auto____8607) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____8607
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2379__auto____8608 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8609 = cljs.core._invoke[goog.typeOf(x__2379__auto____8608)];
        if(or__3824__auto____8609) {
          return or__3824__auto____8609
        }else {
          var or__3824__auto____8610 = cljs.core._invoke["_"];
          if(or__3824__auto____8610) {
            return or__3824__auto____8610
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____8611 = this$;
      if(and__3822__auto____8611) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____8611
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2379__auto____8612 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8613 = cljs.core._invoke[goog.typeOf(x__2379__auto____8612)];
        if(or__3824__auto____8613) {
          return or__3824__auto____8613
        }else {
          var or__3824__auto____8614 = cljs.core._invoke["_"];
          if(or__3824__auto____8614) {
            return or__3824__auto____8614
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____8615 = this$;
      if(and__3822__auto____8615) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____8615
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2379__auto____8616 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8617 = cljs.core._invoke[goog.typeOf(x__2379__auto____8616)];
        if(or__3824__auto____8617) {
          return or__3824__auto____8617
        }else {
          var or__3824__auto____8618 = cljs.core._invoke["_"];
          if(or__3824__auto____8618) {
            return or__3824__auto____8618
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____8619 = this$;
      if(and__3822__auto____8619) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____8619
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2379__auto____8620 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8621 = cljs.core._invoke[goog.typeOf(x__2379__auto____8620)];
        if(or__3824__auto____8621) {
          return or__3824__auto____8621
        }else {
          var or__3824__auto____8622 = cljs.core._invoke["_"];
          if(or__3824__auto____8622) {
            return or__3824__auto____8622
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____8623 = this$;
      if(and__3822__auto____8623) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____8623
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2379__auto____8624 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8625 = cljs.core._invoke[goog.typeOf(x__2379__auto____8624)];
        if(or__3824__auto____8625) {
          return or__3824__auto____8625
        }else {
          var or__3824__auto____8626 = cljs.core._invoke["_"];
          if(or__3824__auto____8626) {
            return or__3824__auto____8626
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____8627 = this$;
      if(and__3822__auto____8627) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____8627
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2379__auto____8628 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8629 = cljs.core._invoke[goog.typeOf(x__2379__auto____8628)];
        if(or__3824__auto____8629) {
          return or__3824__auto____8629
        }else {
          var or__3824__auto____8630 = cljs.core._invoke["_"];
          if(or__3824__auto____8630) {
            return or__3824__auto____8630
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____8631 = this$;
      if(and__3822__auto____8631) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____8631
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2379__auto____8632 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8633 = cljs.core._invoke[goog.typeOf(x__2379__auto____8632)];
        if(or__3824__auto____8633) {
          return or__3824__auto____8633
        }else {
          var or__3824__auto____8634 = cljs.core._invoke["_"];
          if(or__3824__auto____8634) {
            return or__3824__auto____8634
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____8635 = this$;
      if(and__3822__auto____8635) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____8635
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2379__auto____8636 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8637 = cljs.core._invoke[goog.typeOf(x__2379__auto____8636)];
        if(or__3824__auto____8637) {
          return or__3824__auto____8637
        }else {
          var or__3824__auto____8638 = cljs.core._invoke["_"];
          if(or__3824__auto____8638) {
            return or__3824__auto____8638
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____8639 = this$;
      if(and__3822__auto____8639) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____8639
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2379__auto____8640 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8641 = cljs.core._invoke[goog.typeOf(x__2379__auto____8640)];
        if(or__3824__auto____8641) {
          return or__3824__auto____8641
        }else {
          var or__3824__auto____8642 = cljs.core._invoke["_"];
          if(or__3824__auto____8642) {
            return or__3824__auto____8642
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____8643 = this$;
      if(and__3822__auto____8643) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____8643
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2379__auto____8644 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8645 = cljs.core._invoke[goog.typeOf(x__2379__auto____8644)];
        if(or__3824__auto____8645) {
          return or__3824__auto____8645
        }else {
          var or__3824__auto____8646 = cljs.core._invoke["_"];
          if(or__3824__auto____8646) {
            return or__3824__auto____8646
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____8647 = this$;
      if(and__3822__auto____8647) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____8647
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2379__auto____8648 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8649 = cljs.core._invoke[goog.typeOf(x__2379__auto____8648)];
        if(or__3824__auto____8649) {
          return or__3824__auto____8649
        }else {
          var or__3824__auto____8650 = cljs.core._invoke["_"];
          if(or__3824__auto____8650) {
            return or__3824__auto____8650
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____8651 = this$;
      if(and__3822__auto____8651) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____8651
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2379__auto____8652 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8653 = cljs.core._invoke[goog.typeOf(x__2379__auto____8652)];
        if(or__3824__auto____8653) {
          return or__3824__auto____8653
        }else {
          var or__3824__auto____8654 = cljs.core._invoke["_"];
          if(or__3824__auto____8654) {
            return or__3824__auto____8654
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____8655 = this$;
      if(and__3822__auto____8655) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____8655
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2379__auto____8656 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8657 = cljs.core._invoke[goog.typeOf(x__2379__auto____8656)];
        if(or__3824__auto____8657) {
          return or__3824__auto____8657
        }else {
          var or__3824__auto____8658 = cljs.core._invoke["_"];
          if(or__3824__auto____8658) {
            return or__3824__auto____8658
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____8659 = this$;
      if(and__3822__auto____8659) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____8659
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2379__auto____8660 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8661 = cljs.core._invoke[goog.typeOf(x__2379__auto____8660)];
        if(or__3824__auto____8661) {
          return or__3824__auto____8661
        }else {
          var or__3824__auto____8662 = cljs.core._invoke["_"];
          if(or__3824__auto____8662) {
            return or__3824__auto____8662
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____8663 = this$;
      if(and__3822__auto____8663) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____8663
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2379__auto____8664 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8665 = cljs.core._invoke[goog.typeOf(x__2379__auto____8664)];
        if(or__3824__auto____8665) {
          return or__3824__auto____8665
        }else {
          var or__3824__auto____8666 = cljs.core._invoke["_"];
          if(or__3824__auto____8666) {
            return or__3824__auto____8666
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____8667 = this$;
      if(and__3822__auto____8667) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____8667
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2379__auto____8668 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8669 = cljs.core._invoke[goog.typeOf(x__2379__auto____8668)];
        if(or__3824__auto____8669) {
          return or__3824__auto____8669
        }else {
          var or__3824__auto____8670 = cljs.core._invoke["_"];
          if(or__3824__auto____8670) {
            return or__3824__auto____8670
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____8675 = coll;
    if(and__3822__auto____8675) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____8675
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2379__auto____8676 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8677 = cljs.core._count[goog.typeOf(x__2379__auto____8676)];
      if(or__3824__auto____8677) {
        return or__3824__auto____8677
      }else {
        var or__3824__auto____8678 = cljs.core._count["_"];
        if(or__3824__auto____8678) {
          return or__3824__auto____8678
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____8683 = coll;
    if(and__3822__auto____8683) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____8683
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2379__auto____8684 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8685 = cljs.core._empty[goog.typeOf(x__2379__auto____8684)];
      if(or__3824__auto____8685) {
        return or__3824__auto____8685
      }else {
        var or__3824__auto____8686 = cljs.core._empty["_"];
        if(or__3824__auto____8686) {
          return or__3824__auto____8686
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____8691 = coll;
    if(and__3822__auto____8691) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____8691
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2379__auto____8692 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8693 = cljs.core._conj[goog.typeOf(x__2379__auto____8692)];
      if(or__3824__auto____8693) {
        return or__3824__auto____8693
      }else {
        var or__3824__auto____8694 = cljs.core._conj["_"];
        if(or__3824__auto____8694) {
          return or__3824__auto____8694
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____8703 = coll;
      if(and__3822__auto____8703) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____8703
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2379__auto____8704 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8705 = cljs.core._nth[goog.typeOf(x__2379__auto____8704)];
        if(or__3824__auto____8705) {
          return or__3824__auto____8705
        }else {
          var or__3824__auto____8706 = cljs.core._nth["_"];
          if(or__3824__auto____8706) {
            return or__3824__auto____8706
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____8707 = coll;
      if(and__3822__auto____8707) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____8707
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2379__auto____8708 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8709 = cljs.core._nth[goog.typeOf(x__2379__auto____8708)];
        if(or__3824__auto____8709) {
          return or__3824__auto____8709
        }else {
          var or__3824__auto____8710 = cljs.core._nth["_"];
          if(or__3824__auto____8710) {
            return or__3824__auto____8710
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____8715 = coll;
    if(and__3822__auto____8715) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____8715
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2379__auto____8716 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8717 = cljs.core._first[goog.typeOf(x__2379__auto____8716)];
      if(or__3824__auto____8717) {
        return or__3824__auto____8717
      }else {
        var or__3824__auto____8718 = cljs.core._first["_"];
        if(or__3824__auto____8718) {
          return or__3824__auto____8718
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____8723 = coll;
    if(and__3822__auto____8723) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____8723
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2379__auto____8724 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8725 = cljs.core._rest[goog.typeOf(x__2379__auto____8724)];
      if(or__3824__auto____8725) {
        return or__3824__auto____8725
      }else {
        var or__3824__auto____8726 = cljs.core._rest["_"];
        if(or__3824__auto____8726) {
          return or__3824__auto____8726
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____8731 = coll;
    if(and__3822__auto____8731) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____8731
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2379__auto____8732 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8733 = cljs.core._next[goog.typeOf(x__2379__auto____8732)];
      if(or__3824__auto____8733) {
        return or__3824__auto____8733
      }else {
        var or__3824__auto____8734 = cljs.core._next["_"];
        if(or__3824__auto____8734) {
          return or__3824__auto____8734
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____8743 = o;
      if(and__3822__auto____8743) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____8743
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2379__auto____8744 = o == null ? null : o;
      return function() {
        var or__3824__auto____8745 = cljs.core._lookup[goog.typeOf(x__2379__auto____8744)];
        if(or__3824__auto____8745) {
          return or__3824__auto____8745
        }else {
          var or__3824__auto____8746 = cljs.core._lookup["_"];
          if(or__3824__auto____8746) {
            return or__3824__auto____8746
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____8747 = o;
      if(and__3822__auto____8747) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____8747
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2379__auto____8748 = o == null ? null : o;
      return function() {
        var or__3824__auto____8749 = cljs.core._lookup[goog.typeOf(x__2379__auto____8748)];
        if(or__3824__auto____8749) {
          return or__3824__auto____8749
        }else {
          var or__3824__auto____8750 = cljs.core._lookup["_"];
          if(or__3824__auto____8750) {
            return or__3824__auto____8750
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____8755 = coll;
    if(and__3822__auto____8755) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____8755
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2379__auto____8756 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8757 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2379__auto____8756)];
      if(or__3824__auto____8757) {
        return or__3824__auto____8757
      }else {
        var or__3824__auto____8758 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____8758) {
          return or__3824__auto____8758
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____8763 = coll;
    if(and__3822__auto____8763) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____8763
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2379__auto____8764 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8765 = cljs.core._assoc[goog.typeOf(x__2379__auto____8764)];
      if(or__3824__auto____8765) {
        return or__3824__auto____8765
      }else {
        var or__3824__auto____8766 = cljs.core._assoc["_"];
        if(or__3824__auto____8766) {
          return or__3824__auto____8766
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____8771 = coll;
    if(and__3822__auto____8771) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____8771
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2379__auto____8772 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8773 = cljs.core._dissoc[goog.typeOf(x__2379__auto____8772)];
      if(or__3824__auto____8773) {
        return or__3824__auto____8773
      }else {
        var or__3824__auto____8774 = cljs.core._dissoc["_"];
        if(or__3824__auto____8774) {
          return or__3824__auto____8774
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____8779 = coll;
    if(and__3822__auto____8779) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____8779
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2379__auto____8780 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8781 = cljs.core._key[goog.typeOf(x__2379__auto____8780)];
      if(or__3824__auto____8781) {
        return or__3824__auto____8781
      }else {
        var or__3824__auto____8782 = cljs.core._key["_"];
        if(or__3824__auto____8782) {
          return or__3824__auto____8782
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____8787 = coll;
    if(and__3822__auto____8787) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____8787
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2379__auto____8788 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8789 = cljs.core._val[goog.typeOf(x__2379__auto____8788)];
      if(or__3824__auto____8789) {
        return or__3824__auto____8789
      }else {
        var or__3824__auto____8790 = cljs.core._val["_"];
        if(or__3824__auto____8790) {
          return or__3824__auto____8790
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____8795 = coll;
    if(and__3822__auto____8795) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____8795
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2379__auto____8796 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8797 = cljs.core._disjoin[goog.typeOf(x__2379__auto____8796)];
      if(or__3824__auto____8797) {
        return or__3824__auto____8797
      }else {
        var or__3824__auto____8798 = cljs.core._disjoin["_"];
        if(or__3824__auto____8798) {
          return or__3824__auto____8798
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____8803 = coll;
    if(and__3822__auto____8803) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____8803
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2379__auto____8804 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8805 = cljs.core._peek[goog.typeOf(x__2379__auto____8804)];
      if(or__3824__auto____8805) {
        return or__3824__auto____8805
      }else {
        var or__3824__auto____8806 = cljs.core._peek["_"];
        if(or__3824__auto____8806) {
          return or__3824__auto____8806
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____8811 = coll;
    if(and__3822__auto____8811) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____8811
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2379__auto____8812 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8813 = cljs.core._pop[goog.typeOf(x__2379__auto____8812)];
      if(or__3824__auto____8813) {
        return or__3824__auto____8813
      }else {
        var or__3824__auto____8814 = cljs.core._pop["_"];
        if(or__3824__auto____8814) {
          return or__3824__auto____8814
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____8819 = coll;
    if(and__3822__auto____8819) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____8819
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2379__auto____8820 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8821 = cljs.core._assoc_n[goog.typeOf(x__2379__auto____8820)];
      if(or__3824__auto____8821) {
        return or__3824__auto____8821
      }else {
        var or__3824__auto____8822 = cljs.core._assoc_n["_"];
        if(or__3824__auto____8822) {
          return or__3824__auto____8822
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____8827 = o;
    if(and__3822__auto____8827) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____8827
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2379__auto____8828 = o == null ? null : o;
    return function() {
      var or__3824__auto____8829 = cljs.core._deref[goog.typeOf(x__2379__auto____8828)];
      if(or__3824__auto____8829) {
        return or__3824__auto____8829
      }else {
        var or__3824__auto____8830 = cljs.core._deref["_"];
        if(or__3824__auto____8830) {
          return or__3824__auto____8830
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____8835 = o;
    if(and__3822__auto____8835) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____8835
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2379__auto____8836 = o == null ? null : o;
    return function() {
      var or__3824__auto____8837 = cljs.core._deref_with_timeout[goog.typeOf(x__2379__auto____8836)];
      if(or__3824__auto____8837) {
        return or__3824__auto____8837
      }else {
        var or__3824__auto____8838 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____8838) {
          return or__3824__auto____8838
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____8843 = o;
    if(and__3822__auto____8843) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____8843
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2379__auto____8844 = o == null ? null : o;
    return function() {
      var or__3824__auto____8845 = cljs.core._meta[goog.typeOf(x__2379__auto____8844)];
      if(or__3824__auto____8845) {
        return or__3824__auto____8845
      }else {
        var or__3824__auto____8846 = cljs.core._meta["_"];
        if(or__3824__auto____8846) {
          return or__3824__auto____8846
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____8851 = o;
    if(and__3822__auto____8851) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____8851
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2379__auto____8852 = o == null ? null : o;
    return function() {
      var or__3824__auto____8853 = cljs.core._with_meta[goog.typeOf(x__2379__auto____8852)];
      if(or__3824__auto____8853) {
        return or__3824__auto____8853
      }else {
        var or__3824__auto____8854 = cljs.core._with_meta["_"];
        if(or__3824__auto____8854) {
          return or__3824__auto____8854
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____8863 = coll;
      if(and__3822__auto____8863) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____8863
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2379__auto____8864 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8865 = cljs.core._reduce[goog.typeOf(x__2379__auto____8864)];
        if(or__3824__auto____8865) {
          return or__3824__auto____8865
        }else {
          var or__3824__auto____8866 = cljs.core._reduce["_"];
          if(or__3824__auto____8866) {
            return or__3824__auto____8866
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____8867 = coll;
      if(and__3822__auto____8867) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____8867
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2379__auto____8868 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8869 = cljs.core._reduce[goog.typeOf(x__2379__auto____8868)];
        if(or__3824__auto____8869) {
          return or__3824__auto____8869
        }else {
          var or__3824__auto____8870 = cljs.core._reduce["_"];
          if(or__3824__auto____8870) {
            return or__3824__auto____8870
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____8875 = coll;
    if(and__3822__auto____8875) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____8875
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2379__auto____8876 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8877 = cljs.core._kv_reduce[goog.typeOf(x__2379__auto____8876)];
      if(or__3824__auto____8877) {
        return or__3824__auto____8877
      }else {
        var or__3824__auto____8878 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____8878) {
          return or__3824__auto____8878
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____8883 = o;
    if(and__3822__auto____8883) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____8883
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2379__auto____8884 = o == null ? null : o;
    return function() {
      var or__3824__auto____8885 = cljs.core._equiv[goog.typeOf(x__2379__auto____8884)];
      if(or__3824__auto____8885) {
        return or__3824__auto____8885
      }else {
        var or__3824__auto____8886 = cljs.core._equiv["_"];
        if(or__3824__auto____8886) {
          return or__3824__auto____8886
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____8891 = o;
    if(and__3822__auto____8891) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____8891
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2379__auto____8892 = o == null ? null : o;
    return function() {
      var or__3824__auto____8893 = cljs.core._hash[goog.typeOf(x__2379__auto____8892)];
      if(or__3824__auto____8893) {
        return or__3824__auto____8893
      }else {
        var or__3824__auto____8894 = cljs.core._hash["_"];
        if(or__3824__auto____8894) {
          return or__3824__auto____8894
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____8899 = o;
    if(and__3822__auto____8899) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____8899
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2379__auto____8900 = o == null ? null : o;
    return function() {
      var or__3824__auto____8901 = cljs.core._seq[goog.typeOf(x__2379__auto____8900)];
      if(or__3824__auto____8901) {
        return or__3824__auto____8901
      }else {
        var or__3824__auto____8902 = cljs.core._seq["_"];
        if(or__3824__auto____8902) {
          return or__3824__auto____8902
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____8907 = coll;
    if(and__3822__auto____8907) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____8907
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2379__auto____8908 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8909 = cljs.core._rseq[goog.typeOf(x__2379__auto____8908)];
      if(or__3824__auto____8909) {
        return or__3824__auto____8909
      }else {
        var or__3824__auto____8910 = cljs.core._rseq["_"];
        if(or__3824__auto____8910) {
          return or__3824__auto____8910
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8915 = coll;
    if(and__3822__auto____8915) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____8915
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2379__auto____8916 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8917 = cljs.core._sorted_seq[goog.typeOf(x__2379__auto____8916)];
      if(or__3824__auto____8917) {
        return or__3824__auto____8917
      }else {
        var or__3824__auto____8918 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____8918) {
          return or__3824__auto____8918
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8923 = coll;
    if(and__3822__auto____8923) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____8923
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2379__auto____8924 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8925 = cljs.core._sorted_seq_from[goog.typeOf(x__2379__auto____8924)];
      if(or__3824__auto____8925) {
        return or__3824__auto____8925
      }else {
        var or__3824__auto____8926 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____8926) {
          return or__3824__auto____8926
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____8931 = coll;
    if(and__3822__auto____8931) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____8931
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2379__auto____8932 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8933 = cljs.core._entry_key[goog.typeOf(x__2379__auto____8932)];
      if(or__3824__auto____8933) {
        return or__3824__auto____8933
      }else {
        var or__3824__auto____8934 = cljs.core._entry_key["_"];
        if(or__3824__auto____8934) {
          return or__3824__auto____8934
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____8939 = coll;
    if(and__3822__auto____8939) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____8939
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2379__auto____8940 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8941 = cljs.core._comparator[goog.typeOf(x__2379__auto____8940)];
      if(or__3824__auto____8941) {
        return or__3824__auto____8941
      }else {
        var or__3824__auto____8942 = cljs.core._comparator["_"];
        if(or__3824__auto____8942) {
          return or__3824__auto____8942
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____8947 = o;
    if(and__3822__auto____8947) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____8947
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2379__auto____8948 = o == null ? null : o;
    return function() {
      var or__3824__auto____8949 = cljs.core._pr_seq[goog.typeOf(x__2379__auto____8948)];
      if(or__3824__auto____8949) {
        return or__3824__auto____8949
      }else {
        var or__3824__auto____8950 = cljs.core._pr_seq["_"];
        if(or__3824__auto____8950) {
          return or__3824__auto____8950
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____8955 = d;
    if(and__3822__auto____8955) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____8955
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2379__auto____8956 = d == null ? null : d;
    return function() {
      var or__3824__auto____8957 = cljs.core._realized_QMARK_[goog.typeOf(x__2379__auto____8956)];
      if(or__3824__auto____8957) {
        return or__3824__auto____8957
      }else {
        var or__3824__auto____8958 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____8958) {
          return or__3824__auto____8958
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____8963 = this$;
    if(and__3822__auto____8963) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____8963
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2379__auto____8964 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8965 = cljs.core._notify_watches[goog.typeOf(x__2379__auto____8964)];
      if(or__3824__auto____8965) {
        return or__3824__auto____8965
      }else {
        var or__3824__auto____8966 = cljs.core._notify_watches["_"];
        if(or__3824__auto____8966) {
          return or__3824__auto____8966
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____8971 = this$;
    if(and__3822__auto____8971) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____8971
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2379__auto____8972 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8973 = cljs.core._add_watch[goog.typeOf(x__2379__auto____8972)];
      if(or__3824__auto____8973) {
        return or__3824__auto____8973
      }else {
        var or__3824__auto____8974 = cljs.core._add_watch["_"];
        if(or__3824__auto____8974) {
          return or__3824__auto____8974
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____8979 = this$;
    if(and__3822__auto____8979) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____8979
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2379__auto____8980 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8981 = cljs.core._remove_watch[goog.typeOf(x__2379__auto____8980)];
      if(or__3824__auto____8981) {
        return or__3824__auto____8981
      }else {
        var or__3824__auto____8982 = cljs.core._remove_watch["_"];
        if(or__3824__auto____8982) {
          return or__3824__auto____8982
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____8987 = coll;
    if(and__3822__auto____8987) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____8987
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2379__auto____8988 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8989 = cljs.core._as_transient[goog.typeOf(x__2379__auto____8988)];
      if(or__3824__auto____8989) {
        return or__3824__auto____8989
      }else {
        var or__3824__auto____8990 = cljs.core._as_transient["_"];
        if(or__3824__auto____8990) {
          return or__3824__auto____8990
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____8995 = tcoll;
    if(and__3822__auto____8995) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____8995
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2379__auto____8996 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8997 = cljs.core._conj_BANG_[goog.typeOf(x__2379__auto____8996)];
      if(or__3824__auto____8997) {
        return or__3824__auto____8997
      }else {
        var or__3824__auto____8998 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____8998) {
          return or__3824__auto____8998
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____9003 = tcoll;
    if(and__3822__auto____9003) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____9003
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2379__auto____9004 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9005 = cljs.core._persistent_BANG_[goog.typeOf(x__2379__auto____9004)];
      if(or__3824__auto____9005) {
        return or__3824__auto____9005
      }else {
        var or__3824__auto____9006 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____9006) {
          return or__3824__auto____9006
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____9011 = tcoll;
    if(and__3822__auto____9011) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____9011
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2379__auto____9012 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9013 = cljs.core._assoc_BANG_[goog.typeOf(x__2379__auto____9012)];
      if(or__3824__auto____9013) {
        return or__3824__auto____9013
      }else {
        var or__3824__auto____9014 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____9014) {
          return or__3824__auto____9014
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____9019 = tcoll;
    if(and__3822__auto____9019) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____9019
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2379__auto____9020 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9021 = cljs.core._dissoc_BANG_[goog.typeOf(x__2379__auto____9020)];
      if(or__3824__auto____9021) {
        return or__3824__auto____9021
      }else {
        var or__3824__auto____9022 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____9022) {
          return or__3824__auto____9022
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____9027 = tcoll;
    if(and__3822__auto____9027) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____9027
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2379__auto____9028 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9029 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2379__auto____9028)];
      if(or__3824__auto____9029) {
        return or__3824__auto____9029
      }else {
        var or__3824__auto____9030 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____9030) {
          return or__3824__auto____9030
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____9035 = tcoll;
    if(and__3822__auto____9035) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____9035
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2379__auto____9036 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9037 = cljs.core._pop_BANG_[goog.typeOf(x__2379__auto____9036)];
      if(or__3824__auto____9037) {
        return or__3824__auto____9037
      }else {
        var or__3824__auto____9038 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____9038) {
          return or__3824__auto____9038
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____9043 = tcoll;
    if(and__3822__auto____9043) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____9043
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2379__auto____9044 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9045 = cljs.core._disjoin_BANG_[goog.typeOf(x__2379__auto____9044)];
      if(or__3824__auto____9045) {
        return or__3824__auto____9045
      }else {
        var or__3824__auto____9046 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____9046) {
          return or__3824__auto____9046
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____9051 = x;
    if(and__3822__auto____9051) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____9051
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2379__auto____9052 = x == null ? null : x;
    return function() {
      var or__3824__auto____9053 = cljs.core._compare[goog.typeOf(x__2379__auto____9052)];
      if(or__3824__auto____9053) {
        return or__3824__auto____9053
      }else {
        var or__3824__auto____9054 = cljs.core._compare["_"];
        if(or__3824__auto____9054) {
          return or__3824__auto____9054
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____9059 = coll;
    if(and__3822__auto____9059) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____9059
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2379__auto____9060 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9061 = cljs.core._drop_first[goog.typeOf(x__2379__auto____9060)];
      if(or__3824__auto____9061) {
        return or__3824__auto____9061
      }else {
        var or__3824__auto____9062 = cljs.core._drop_first["_"];
        if(or__3824__auto____9062) {
          return or__3824__auto____9062
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____9067 = coll;
    if(and__3822__auto____9067) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____9067
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2379__auto____9068 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9069 = cljs.core._chunked_first[goog.typeOf(x__2379__auto____9068)];
      if(or__3824__auto____9069) {
        return or__3824__auto____9069
      }else {
        var or__3824__auto____9070 = cljs.core._chunked_first["_"];
        if(or__3824__auto____9070) {
          return or__3824__auto____9070
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____9075 = coll;
    if(and__3822__auto____9075) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____9075
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2379__auto____9076 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9077 = cljs.core._chunked_rest[goog.typeOf(x__2379__auto____9076)];
      if(or__3824__auto____9077) {
        return or__3824__auto____9077
      }else {
        var or__3824__auto____9078 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____9078) {
          return or__3824__auto____9078
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____9083 = coll;
    if(and__3822__auto____9083) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____9083
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2379__auto____9084 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9085 = cljs.core._chunked_next[goog.typeOf(x__2379__auto____9084)];
      if(or__3824__auto____9085) {
        return or__3824__auto____9085
      }else {
        var or__3824__auto____9086 = cljs.core._chunked_next["_"];
        if(or__3824__auto____9086) {
          return or__3824__auto____9086
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____9088 = x === y;
    if(or__3824__auto____9088) {
      return or__3824__auto____9088
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__9089__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__9090 = y;
            var G__9091 = cljs.core.first.call(null, more);
            var G__9092 = cljs.core.next.call(null, more);
            x = G__9090;
            y = G__9091;
            more = G__9092;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9089 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9089__delegate.call(this, x, y, more)
    };
    G__9089.cljs$lang$maxFixedArity = 2;
    G__9089.cljs$lang$applyTo = function(arglist__9093) {
      var x = cljs.core.first(arglist__9093);
      var y = cljs.core.first(cljs.core.next(arglist__9093));
      var more = cljs.core.rest(cljs.core.next(arglist__9093));
      return G__9089__delegate(x, y, more)
    };
    G__9089.cljs$lang$arity$variadic = G__9089__delegate;
    return G__9089
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__9094 = null;
  var G__9094__2 = function(o, k) {
    return null
  };
  var G__9094__3 = function(o, k, not_found) {
    return not_found
  };
  G__9094 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9094__2.call(this, o, k);
      case 3:
        return G__9094__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9094
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__9095 = null;
  var G__9095__2 = function(_, f) {
    return f.call(null)
  };
  var G__9095__3 = function(_, f, start) {
    return start
  };
  G__9095 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__9095__2.call(this, _, f);
      case 3:
        return G__9095__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9095
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__9096 = null;
  var G__9096__2 = function(_, n) {
    return null
  };
  var G__9096__3 = function(_, n, not_found) {
    return not_found
  };
  G__9096 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9096__2.call(this, _, n);
      case 3:
        return G__9096__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9096
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____9097 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____9097) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____9097
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__9110 = cljs.core._count.call(null, cicoll);
    if(cnt__9110 === 0) {
      return f.call(null)
    }else {
      var val__9111 = cljs.core._nth.call(null, cicoll, 0);
      var n__9112 = 1;
      while(true) {
        if(n__9112 < cnt__9110) {
          var nval__9113 = f.call(null, val__9111, cljs.core._nth.call(null, cicoll, n__9112));
          if(cljs.core.reduced_QMARK_.call(null, nval__9113)) {
            return cljs.core.deref.call(null, nval__9113)
          }else {
            var G__9122 = nval__9113;
            var G__9123 = n__9112 + 1;
            val__9111 = G__9122;
            n__9112 = G__9123;
            continue
          }
        }else {
          return val__9111
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__9114 = cljs.core._count.call(null, cicoll);
    var val__9115 = val;
    var n__9116 = 0;
    while(true) {
      if(n__9116 < cnt__9114) {
        var nval__9117 = f.call(null, val__9115, cljs.core._nth.call(null, cicoll, n__9116));
        if(cljs.core.reduced_QMARK_.call(null, nval__9117)) {
          return cljs.core.deref.call(null, nval__9117)
        }else {
          var G__9124 = nval__9117;
          var G__9125 = n__9116 + 1;
          val__9115 = G__9124;
          n__9116 = G__9125;
          continue
        }
      }else {
        return val__9115
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__9118 = cljs.core._count.call(null, cicoll);
    var val__9119 = val;
    var n__9120 = idx;
    while(true) {
      if(n__9120 < cnt__9118) {
        var nval__9121 = f.call(null, val__9119, cljs.core._nth.call(null, cicoll, n__9120));
        if(cljs.core.reduced_QMARK_.call(null, nval__9121)) {
          return cljs.core.deref.call(null, nval__9121)
        }else {
          var G__9126 = nval__9121;
          var G__9127 = n__9120 + 1;
          val__9119 = G__9126;
          n__9120 = G__9127;
          continue
        }
      }else {
        return val__9119
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__9140 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__9141 = arr[0];
      var n__9142 = 1;
      while(true) {
        if(n__9142 < cnt__9140) {
          var nval__9143 = f.call(null, val__9141, arr[n__9142]);
          if(cljs.core.reduced_QMARK_.call(null, nval__9143)) {
            return cljs.core.deref.call(null, nval__9143)
          }else {
            var G__9152 = nval__9143;
            var G__9153 = n__9142 + 1;
            val__9141 = G__9152;
            n__9142 = G__9153;
            continue
          }
        }else {
          return val__9141
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__9144 = arr.length;
    var val__9145 = val;
    var n__9146 = 0;
    while(true) {
      if(n__9146 < cnt__9144) {
        var nval__9147 = f.call(null, val__9145, arr[n__9146]);
        if(cljs.core.reduced_QMARK_.call(null, nval__9147)) {
          return cljs.core.deref.call(null, nval__9147)
        }else {
          var G__9154 = nval__9147;
          var G__9155 = n__9146 + 1;
          val__9145 = G__9154;
          n__9146 = G__9155;
          continue
        }
      }else {
        return val__9145
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__9148 = arr.length;
    var val__9149 = val;
    var n__9150 = idx;
    while(true) {
      if(n__9150 < cnt__9148) {
        var nval__9151 = f.call(null, val__9149, arr[n__9150]);
        if(cljs.core.reduced_QMARK_.call(null, nval__9151)) {
          return cljs.core.deref.call(null, nval__9151)
        }else {
          var G__9156 = nval__9151;
          var G__9157 = n__9150 + 1;
          val__9149 = G__9156;
          n__9150 = G__9157;
          continue
        }
      }else {
        return val__9149
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9158 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__9159 = this;
  if(this__9159.i + 1 < this__9159.a.length) {
    return new cljs.core.IndexedSeq(this__9159.a, this__9159.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9160 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9161 = this;
  var c__9162 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__9162 > 0) {
    return new cljs.core.RSeq(coll, c__9162 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__9163 = this;
  var this__9164 = this;
  return cljs.core.pr_str.call(null, this__9164)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9165 = this;
  if(cljs.core.counted_QMARK_.call(null, this__9165.a)) {
    return cljs.core.ci_reduce.call(null, this__9165.a, f, this__9165.a[this__9165.i], this__9165.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__9165.a[this__9165.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9166 = this;
  if(cljs.core.counted_QMARK_.call(null, this__9166.a)) {
    return cljs.core.ci_reduce.call(null, this__9166.a, f, start, this__9166.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9167 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__9168 = this;
  return this__9168.a.length - this__9168.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__9169 = this;
  return this__9169.a[this__9169.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__9170 = this;
  if(this__9170.i + 1 < this__9170.a.length) {
    return new cljs.core.IndexedSeq(this__9170.a, this__9170.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9171 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9172 = this;
  var i__9173 = n + this__9172.i;
  if(i__9173 < this__9172.a.length) {
    return this__9172.a[i__9173]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9174 = this;
  var i__9175 = n + this__9174.i;
  if(i__9175 < this__9174.a.length) {
    return this__9174.a[i__9175]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__9176 = null;
  var G__9176__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__9176__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__9176 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__9176__2.call(this, array, f);
      case 3:
        return G__9176__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9176
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__9177 = null;
  var G__9177__2 = function(array, k) {
    return array[k]
  };
  var G__9177__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__9177 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9177__2.call(this, array, k);
      case 3:
        return G__9177__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9177
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__9178 = null;
  var G__9178__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__9178__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__9178 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9178__2.call(this, array, n);
      case 3:
        return G__9178__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9178
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9179 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9180 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__9181 = this;
  var this__9182 = this;
  return cljs.core.pr_str.call(null, this__9182)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9183 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9184 = this;
  return this__9184.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9185 = this;
  return cljs.core._nth.call(null, this__9185.ci, this__9185.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9186 = this;
  if(this__9186.i > 0) {
    return new cljs.core.RSeq(this__9186.ci, this__9186.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9187 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__9188 = this;
  return new cljs.core.RSeq(this__9188.ci, this__9188.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9189 = this;
  return this__9189.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9193__9194 = coll;
      if(G__9193__9194) {
        if(function() {
          var or__3824__auto____9195 = G__9193__9194.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____9195) {
            return or__3824__auto____9195
          }else {
            return G__9193__9194.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__9193__9194.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__9193__9194)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__9193__9194)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9200__9201 = coll;
      if(G__9200__9201) {
        if(function() {
          var or__3824__auto____9202 = G__9200__9201.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____9202) {
            return or__3824__auto____9202
          }else {
            return G__9200__9201.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9200__9201.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9200__9201)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9200__9201)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__9203 = cljs.core.seq.call(null, coll);
      if(s__9203 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__9203)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__9208__9209 = coll;
      if(G__9208__9209) {
        if(function() {
          var or__3824__auto____9210 = G__9208__9209.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____9210) {
            return or__3824__auto____9210
          }else {
            return G__9208__9209.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9208__9209.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9208__9209)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9208__9209)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__9211 = cljs.core.seq.call(null, coll);
      if(!(s__9211 == null)) {
        return cljs.core._rest.call(null, s__9211)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9215__9216 = coll;
      if(G__9215__9216) {
        if(function() {
          var or__3824__auto____9217 = G__9215__9216.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____9217) {
            return or__3824__auto____9217
          }else {
            return G__9215__9216.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__9215__9216.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__9215__9216)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__9215__9216)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__9219 = cljs.core.next.call(null, s);
    if(!(sn__9219 == null)) {
      var G__9220 = sn__9219;
      s = G__9220;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__9221__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__9222 = conj.call(null, coll, x);
          var G__9223 = cljs.core.first.call(null, xs);
          var G__9224 = cljs.core.next.call(null, xs);
          coll = G__9222;
          x = G__9223;
          xs = G__9224;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__9221 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9221__delegate.call(this, coll, x, xs)
    };
    G__9221.cljs$lang$maxFixedArity = 2;
    G__9221.cljs$lang$applyTo = function(arglist__9225) {
      var coll = cljs.core.first(arglist__9225);
      var x = cljs.core.first(cljs.core.next(arglist__9225));
      var xs = cljs.core.rest(cljs.core.next(arglist__9225));
      return G__9221__delegate(coll, x, xs)
    };
    G__9221.cljs$lang$arity$variadic = G__9221__delegate;
    return G__9221
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__9228 = cljs.core.seq.call(null, coll);
  var acc__9229 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__9228)) {
      return acc__9229 + cljs.core._count.call(null, s__9228)
    }else {
      var G__9230 = cljs.core.next.call(null, s__9228);
      var G__9231 = acc__9229 + 1;
      s__9228 = G__9230;
      acc__9229 = G__9231;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__9238__9239 = coll;
        if(G__9238__9239) {
          if(function() {
            var or__3824__auto____9240 = G__9238__9239.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____9240) {
              return or__3824__auto____9240
            }else {
              return G__9238__9239.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__9238__9239.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9238__9239)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9238__9239)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__9241__9242 = coll;
        if(G__9241__9242) {
          if(function() {
            var or__3824__auto____9243 = G__9241__9242.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____9243) {
              return or__3824__auto____9243
            }else {
              return G__9241__9242.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__9241__9242.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9241__9242)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9241__9242)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__9246__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__9245 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__9247 = ret__9245;
          var G__9248 = cljs.core.first.call(null, kvs);
          var G__9249 = cljs.core.second.call(null, kvs);
          var G__9250 = cljs.core.nnext.call(null, kvs);
          coll = G__9247;
          k = G__9248;
          v = G__9249;
          kvs = G__9250;
          continue
        }else {
          return ret__9245
        }
        break
      }
    };
    var G__9246 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9246__delegate.call(this, coll, k, v, kvs)
    };
    G__9246.cljs$lang$maxFixedArity = 3;
    G__9246.cljs$lang$applyTo = function(arglist__9251) {
      var coll = cljs.core.first(arglist__9251);
      var k = cljs.core.first(cljs.core.next(arglist__9251));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9251)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9251)));
      return G__9246__delegate(coll, k, v, kvs)
    };
    G__9246.cljs$lang$arity$variadic = G__9246__delegate;
    return G__9246
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__9254__delegate = function(coll, k, ks) {
      while(true) {
        var ret__9253 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__9255 = ret__9253;
          var G__9256 = cljs.core.first.call(null, ks);
          var G__9257 = cljs.core.next.call(null, ks);
          coll = G__9255;
          k = G__9256;
          ks = G__9257;
          continue
        }else {
          return ret__9253
        }
        break
      }
    };
    var G__9254 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9254__delegate.call(this, coll, k, ks)
    };
    G__9254.cljs$lang$maxFixedArity = 2;
    G__9254.cljs$lang$applyTo = function(arglist__9258) {
      var coll = cljs.core.first(arglist__9258);
      var k = cljs.core.first(cljs.core.next(arglist__9258));
      var ks = cljs.core.rest(cljs.core.next(arglist__9258));
      return G__9254__delegate(coll, k, ks)
    };
    G__9254.cljs$lang$arity$variadic = G__9254__delegate;
    return G__9254
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__9262__9263 = o;
    if(G__9262__9263) {
      if(function() {
        var or__3824__auto____9264 = G__9262__9263.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____9264) {
          return or__3824__auto____9264
        }else {
          return G__9262__9263.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__9262__9263.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__9262__9263)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__9262__9263)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__9267__delegate = function(coll, k, ks) {
      while(true) {
        var ret__9266 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__9268 = ret__9266;
          var G__9269 = cljs.core.first.call(null, ks);
          var G__9270 = cljs.core.next.call(null, ks);
          coll = G__9268;
          k = G__9269;
          ks = G__9270;
          continue
        }else {
          return ret__9266
        }
        break
      }
    };
    var G__9267 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9267__delegate.call(this, coll, k, ks)
    };
    G__9267.cljs$lang$maxFixedArity = 2;
    G__9267.cljs$lang$applyTo = function(arglist__9271) {
      var coll = cljs.core.first(arglist__9271);
      var k = cljs.core.first(cljs.core.next(arglist__9271));
      var ks = cljs.core.rest(cljs.core.next(arglist__9271));
      return G__9267__delegate(coll, k, ks)
    };
    G__9267.cljs$lang$arity$variadic = G__9267__delegate;
    return G__9267
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__9273 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__9273;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__9273
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__9275 = cljs.core.string_hash_cache[k];
  if(!(h__9275 == null)) {
    return h__9275
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____9277 = goog.isString(o);
      if(and__3822__auto____9277) {
        return check_cache
      }else {
        return and__3822__auto____9277
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__9281__9282 = x;
    if(G__9281__9282) {
      if(function() {
        var or__3824__auto____9283 = G__9281__9282.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____9283) {
          return or__3824__auto____9283
        }else {
          return G__9281__9282.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__9281__9282.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__9281__9282)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__9281__9282)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__9287__9288 = x;
    if(G__9287__9288) {
      if(function() {
        var or__3824__auto____9289 = G__9287__9288.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____9289) {
          return or__3824__auto____9289
        }else {
          return G__9287__9288.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__9287__9288.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__9287__9288)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__9287__9288)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__9293__9294 = x;
  if(G__9293__9294) {
    if(function() {
      var or__3824__auto____9295 = G__9293__9294.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____9295) {
        return or__3824__auto____9295
      }else {
        return G__9293__9294.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__9293__9294.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__9293__9294)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__9293__9294)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__9299__9300 = x;
  if(G__9299__9300) {
    if(function() {
      var or__3824__auto____9301 = G__9299__9300.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____9301) {
        return or__3824__auto____9301
      }else {
        return G__9299__9300.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__9299__9300.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__9299__9300)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__9299__9300)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__9305__9306 = x;
  if(G__9305__9306) {
    if(function() {
      var or__3824__auto____9307 = G__9305__9306.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____9307) {
        return or__3824__auto____9307
      }else {
        return G__9305__9306.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__9305__9306.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__9305__9306)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__9305__9306)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__9311__9312 = x;
  if(G__9311__9312) {
    if(function() {
      var or__3824__auto____9313 = G__9311__9312.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____9313) {
        return or__3824__auto____9313
      }else {
        return G__9311__9312.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__9311__9312.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9311__9312)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9311__9312)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__9317__9318 = x;
  if(G__9317__9318) {
    if(function() {
      var or__3824__auto____9319 = G__9317__9318.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____9319) {
        return or__3824__auto____9319
      }else {
        return G__9317__9318.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__9317__9318.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9317__9318)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9317__9318)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__9323__9324 = x;
    if(G__9323__9324) {
      if(function() {
        var or__3824__auto____9325 = G__9323__9324.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____9325) {
          return or__3824__auto____9325
        }else {
          return G__9323__9324.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__9323__9324.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__9323__9324)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__9323__9324)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__9329__9330 = x;
  if(G__9329__9330) {
    if(function() {
      var or__3824__auto____9331 = G__9329__9330.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____9331) {
        return or__3824__auto____9331
      }else {
        return G__9329__9330.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__9329__9330.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__9329__9330)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__9329__9330)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__9335__9336 = x;
  if(G__9335__9336) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____9337 = null;
      if(cljs.core.truth_(or__3824__auto____9337)) {
        return or__3824__auto____9337
      }else {
        return G__9335__9336.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__9335__9336.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__9335__9336)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__9335__9336)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__9338__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__9338 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__9338__delegate.call(this, keyvals)
    };
    G__9338.cljs$lang$maxFixedArity = 0;
    G__9338.cljs$lang$applyTo = function(arglist__9339) {
      var keyvals = cljs.core.seq(arglist__9339);
      return G__9338__delegate(keyvals)
    };
    G__9338.cljs$lang$arity$variadic = G__9338__delegate;
    return G__9338
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__9341 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__9341.push(key)
  });
  return keys__9341
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__9345 = i;
  var j__9346 = j;
  var len__9347 = len;
  while(true) {
    if(len__9347 === 0) {
      return to
    }else {
      to[j__9346] = from[i__9345];
      var G__9348 = i__9345 + 1;
      var G__9349 = j__9346 + 1;
      var G__9350 = len__9347 - 1;
      i__9345 = G__9348;
      j__9346 = G__9349;
      len__9347 = G__9350;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__9354 = i + (len - 1);
  var j__9355 = j + (len - 1);
  var len__9356 = len;
  while(true) {
    if(len__9356 === 0) {
      return to
    }else {
      to[j__9355] = from[i__9354];
      var G__9357 = i__9354 - 1;
      var G__9358 = j__9355 - 1;
      var G__9359 = len__9356 - 1;
      i__9354 = G__9357;
      j__9355 = G__9358;
      len__9356 = G__9359;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__9363__9364 = s;
    if(G__9363__9364) {
      if(function() {
        var or__3824__auto____9365 = G__9363__9364.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____9365) {
          return or__3824__auto____9365
        }else {
          return G__9363__9364.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__9363__9364.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9363__9364)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9363__9364)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__9369__9370 = s;
  if(G__9369__9370) {
    if(function() {
      var or__3824__auto____9371 = G__9369__9370.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____9371) {
        return or__3824__auto____9371
      }else {
        return G__9369__9370.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__9369__9370.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__9369__9370)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__9369__9370)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____9374 = goog.isString(x);
  if(and__3822__auto____9374) {
    return!function() {
      var or__3824__auto____9375 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____9375) {
        return or__3824__auto____9375
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____9374
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____9377 = goog.isString(x);
  if(and__3822__auto____9377) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____9377
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____9379 = goog.isString(x);
  if(and__3822__auto____9379) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____9379
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____9384 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____9384) {
    return or__3824__auto____9384
  }else {
    var G__9385__9386 = f;
    if(G__9385__9386) {
      if(function() {
        var or__3824__auto____9387 = G__9385__9386.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____9387) {
          return or__3824__auto____9387
        }else {
          return G__9385__9386.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__9385__9386.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__9385__9386)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__9385__9386)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____9389 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____9389) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____9389
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____9392 = coll;
    if(cljs.core.truth_(and__3822__auto____9392)) {
      var and__3822__auto____9393 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____9393) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____9393
      }
    }else {
      return and__3822__auto____9392
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__9402__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__9398 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__9399 = more;
        while(true) {
          var x__9400 = cljs.core.first.call(null, xs__9399);
          var etc__9401 = cljs.core.next.call(null, xs__9399);
          if(cljs.core.truth_(xs__9399)) {
            if(cljs.core.contains_QMARK_.call(null, s__9398, x__9400)) {
              return false
            }else {
              var G__9403 = cljs.core.conj.call(null, s__9398, x__9400);
              var G__9404 = etc__9401;
              s__9398 = G__9403;
              xs__9399 = G__9404;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__9402 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9402__delegate.call(this, x, y, more)
    };
    G__9402.cljs$lang$maxFixedArity = 2;
    G__9402.cljs$lang$applyTo = function(arglist__9405) {
      var x = cljs.core.first(arglist__9405);
      var y = cljs.core.first(cljs.core.next(arglist__9405));
      var more = cljs.core.rest(cljs.core.next(arglist__9405));
      return G__9402__delegate(x, y, more)
    };
    G__9402.cljs$lang$arity$variadic = G__9402__delegate;
    return G__9402
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__9409__9410 = x;
            if(G__9409__9410) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____9411 = null;
                if(cljs.core.truth_(or__3824__auto____9411)) {
                  return or__3824__auto____9411
                }else {
                  return G__9409__9410.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__9409__9410.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__9409__9410)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__9409__9410)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__9416 = cljs.core.count.call(null, xs);
    var yl__9417 = cljs.core.count.call(null, ys);
    if(xl__9416 < yl__9417) {
      return-1
    }else {
      if(xl__9416 > yl__9417) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__9416, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__9418 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____9419 = d__9418 === 0;
        if(and__3822__auto____9419) {
          return n + 1 < len
        }else {
          return and__3822__auto____9419
        }
      }()) {
        var G__9420 = xs;
        var G__9421 = ys;
        var G__9422 = len;
        var G__9423 = n + 1;
        xs = G__9420;
        ys = G__9421;
        len = G__9422;
        n = G__9423;
        continue
      }else {
        return d__9418
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__9425 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__9425)) {
        return r__9425
      }else {
        if(cljs.core.truth_(r__9425)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__9427 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__9427, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__9427)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____9433 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____9433) {
      var s__9434 = temp__3971__auto____9433;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__9434), cljs.core.next.call(null, s__9434))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__9435 = val;
    var coll__9436 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__9436) {
        var nval__9437 = f.call(null, val__9435, cljs.core.first.call(null, coll__9436));
        if(cljs.core.reduced_QMARK_.call(null, nval__9437)) {
          return cljs.core.deref.call(null, nval__9437)
        }else {
          var G__9438 = nval__9437;
          var G__9439 = cljs.core.next.call(null, coll__9436);
          val__9435 = G__9438;
          coll__9436 = G__9439;
          continue
        }
      }else {
        return val__9435
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__9441 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__9441);
  return cljs.core.vec.call(null, a__9441)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__9448__9449 = coll;
      if(G__9448__9449) {
        if(function() {
          var or__3824__auto____9450 = G__9448__9449.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____9450) {
            return or__3824__auto____9450
          }else {
            return G__9448__9449.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__9448__9449.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9448__9449)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9448__9449)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__9451__9452 = coll;
      if(G__9451__9452) {
        if(function() {
          var or__3824__auto____9453 = G__9451__9452.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____9453) {
            return or__3824__auto____9453
          }else {
            return G__9451__9452.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__9451__9452.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9451__9452)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9451__9452)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__9454 = this;
  return this__9454.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__9455__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__9455 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9455__delegate.call(this, x, y, more)
    };
    G__9455.cljs$lang$maxFixedArity = 2;
    G__9455.cljs$lang$applyTo = function(arglist__9456) {
      var x = cljs.core.first(arglist__9456);
      var y = cljs.core.first(cljs.core.next(arglist__9456));
      var more = cljs.core.rest(cljs.core.next(arglist__9456));
      return G__9455__delegate(x, y, more)
    };
    G__9455.cljs$lang$arity$variadic = G__9455__delegate;
    return G__9455
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__9457__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__9457 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9457__delegate.call(this, x, y, more)
    };
    G__9457.cljs$lang$maxFixedArity = 2;
    G__9457.cljs$lang$applyTo = function(arglist__9458) {
      var x = cljs.core.first(arglist__9458);
      var y = cljs.core.first(cljs.core.next(arglist__9458));
      var more = cljs.core.rest(cljs.core.next(arglist__9458));
      return G__9457__delegate(x, y, more)
    };
    G__9457.cljs$lang$arity$variadic = G__9457__delegate;
    return G__9457
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__9459__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__9459 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9459__delegate.call(this, x, y, more)
    };
    G__9459.cljs$lang$maxFixedArity = 2;
    G__9459.cljs$lang$applyTo = function(arglist__9460) {
      var x = cljs.core.first(arglist__9460);
      var y = cljs.core.first(cljs.core.next(arglist__9460));
      var more = cljs.core.rest(cljs.core.next(arglist__9460));
      return G__9459__delegate(x, y, more)
    };
    G__9459.cljs$lang$arity$variadic = G__9459__delegate;
    return G__9459
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__9461__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__9461 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9461__delegate.call(this, x, y, more)
    };
    G__9461.cljs$lang$maxFixedArity = 2;
    G__9461.cljs$lang$applyTo = function(arglist__9462) {
      var x = cljs.core.first(arglist__9462);
      var y = cljs.core.first(cljs.core.next(arglist__9462));
      var more = cljs.core.rest(cljs.core.next(arglist__9462));
      return G__9461__delegate(x, y, more)
    };
    G__9461.cljs$lang$arity$variadic = G__9461__delegate;
    return G__9461
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__9463__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__9464 = y;
            var G__9465 = cljs.core.first.call(null, more);
            var G__9466 = cljs.core.next.call(null, more);
            x = G__9464;
            y = G__9465;
            more = G__9466;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9463 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9463__delegate.call(this, x, y, more)
    };
    G__9463.cljs$lang$maxFixedArity = 2;
    G__9463.cljs$lang$applyTo = function(arglist__9467) {
      var x = cljs.core.first(arglist__9467);
      var y = cljs.core.first(cljs.core.next(arglist__9467));
      var more = cljs.core.rest(cljs.core.next(arglist__9467));
      return G__9463__delegate(x, y, more)
    };
    G__9463.cljs$lang$arity$variadic = G__9463__delegate;
    return G__9463
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__9468__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__9469 = y;
            var G__9470 = cljs.core.first.call(null, more);
            var G__9471 = cljs.core.next.call(null, more);
            x = G__9469;
            y = G__9470;
            more = G__9471;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9468 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9468__delegate.call(this, x, y, more)
    };
    G__9468.cljs$lang$maxFixedArity = 2;
    G__9468.cljs$lang$applyTo = function(arglist__9472) {
      var x = cljs.core.first(arglist__9472);
      var y = cljs.core.first(cljs.core.next(arglist__9472));
      var more = cljs.core.rest(cljs.core.next(arglist__9472));
      return G__9468__delegate(x, y, more)
    };
    G__9468.cljs$lang$arity$variadic = G__9468__delegate;
    return G__9468
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__9473__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__9474 = y;
            var G__9475 = cljs.core.first.call(null, more);
            var G__9476 = cljs.core.next.call(null, more);
            x = G__9474;
            y = G__9475;
            more = G__9476;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9473 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9473__delegate.call(this, x, y, more)
    };
    G__9473.cljs$lang$maxFixedArity = 2;
    G__9473.cljs$lang$applyTo = function(arglist__9477) {
      var x = cljs.core.first(arglist__9477);
      var y = cljs.core.first(cljs.core.next(arglist__9477));
      var more = cljs.core.rest(cljs.core.next(arglist__9477));
      return G__9473__delegate(x, y, more)
    };
    G__9473.cljs$lang$arity$variadic = G__9473__delegate;
    return G__9473
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__9478__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__9479 = y;
            var G__9480 = cljs.core.first.call(null, more);
            var G__9481 = cljs.core.next.call(null, more);
            x = G__9479;
            y = G__9480;
            more = G__9481;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9478 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9478__delegate.call(this, x, y, more)
    };
    G__9478.cljs$lang$maxFixedArity = 2;
    G__9478.cljs$lang$applyTo = function(arglist__9482) {
      var x = cljs.core.first(arglist__9482);
      var y = cljs.core.first(cljs.core.next(arglist__9482));
      var more = cljs.core.rest(cljs.core.next(arglist__9482));
      return G__9478__delegate(x, y, more)
    };
    G__9478.cljs$lang$arity$variadic = G__9478__delegate;
    return G__9478
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__9483__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__9483 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9483__delegate.call(this, x, y, more)
    };
    G__9483.cljs$lang$maxFixedArity = 2;
    G__9483.cljs$lang$applyTo = function(arglist__9484) {
      var x = cljs.core.first(arglist__9484);
      var y = cljs.core.first(cljs.core.next(arglist__9484));
      var more = cljs.core.rest(cljs.core.next(arglist__9484));
      return G__9483__delegate(x, y, more)
    };
    G__9483.cljs$lang$arity$variadic = G__9483__delegate;
    return G__9483
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__9485__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__9485 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9485__delegate.call(this, x, y, more)
    };
    G__9485.cljs$lang$maxFixedArity = 2;
    G__9485.cljs$lang$applyTo = function(arglist__9486) {
      var x = cljs.core.first(arglist__9486);
      var y = cljs.core.first(cljs.core.next(arglist__9486));
      var more = cljs.core.rest(cljs.core.next(arglist__9486));
      return G__9485__delegate(x, y, more)
    };
    G__9485.cljs$lang$arity$variadic = G__9485__delegate;
    return G__9485
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__9488 = n % d;
  return cljs.core.fix.call(null, (n - rem__9488) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__9490 = cljs.core.quot.call(null, n, d);
  return n - d * q__9490
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__9493 = v - (v >> 1 & 1431655765);
  var v__9494 = (v__9493 & 858993459) + (v__9493 >> 2 & 858993459);
  return(v__9494 + (v__9494 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__9495__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__9496 = y;
            var G__9497 = cljs.core.first.call(null, more);
            var G__9498 = cljs.core.next.call(null, more);
            x = G__9496;
            y = G__9497;
            more = G__9498;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9495 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9495__delegate.call(this, x, y, more)
    };
    G__9495.cljs$lang$maxFixedArity = 2;
    G__9495.cljs$lang$applyTo = function(arglist__9499) {
      var x = cljs.core.first(arglist__9499);
      var y = cljs.core.first(cljs.core.next(arglist__9499));
      var more = cljs.core.rest(cljs.core.next(arglist__9499));
      return G__9495__delegate(x, y, more)
    };
    G__9495.cljs$lang$arity$variadic = G__9495__delegate;
    return G__9495
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__9503 = n;
  var xs__9504 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____9505 = xs__9504;
      if(and__3822__auto____9505) {
        return n__9503 > 0
      }else {
        return and__3822__auto____9505
      }
    }())) {
      var G__9506 = n__9503 - 1;
      var G__9507 = cljs.core.next.call(null, xs__9504);
      n__9503 = G__9506;
      xs__9504 = G__9507;
      continue
    }else {
      return xs__9504
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__9508__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__9509 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__9510 = cljs.core.next.call(null, more);
            sb = G__9509;
            more = G__9510;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__9508 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__9508__delegate.call(this, x, ys)
    };
    G__9508.cljs$lang$maxFixedArity = 1;
    G__9508.cljs$lang$applyTo = function(arglist__9511) {
      var x = cljs.core.first(arglist__9511);
      var ys = cljs.core.rest(arglist__9511);
      return G__9508__delegate(x, ys)
    };
    G__9508.cljs$lang$arity$variadic = G__9508__delegate;
    return G__9508
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__9512__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__9513 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__9514 = cljs.core.next.call(null, more);
            sb = G__9513;
            more = G__9514;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__9512 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__9512__delegate.call(this, x, ys)
    };
    G__9512.cljs$lang$maxFixedArity = 1;
    G__9512.cljs$lang$applyTo = function(arglist__9515) {
      var x = cljs.core.first(arglist__9515);
      var ys = cljs.core.rest(arglist__9515);
      return G__9512__delegate(x, ys)
    };
    G__9512.cljs$lang$arity$variadic = G__9512__delegate;
    return G__9512
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__9516) {
    var fmt = cljs.core.first(arglist__9516);
    var args = cljs.core.rest(arglist__9516);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__9519 = cljs.core.seq.call(null, x);
    var ys__9520 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__9519 == null) {
        return ys__9520 == null
      }else {
        if(ys__9520 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__9519), cljs.core.first.call(null, ys__9520))) {
            var G__9521 = cljs.core.next.call(null, xs__9519);
            var G__9522 = cljs.core.next.call(null, ys__9520);
            xs__9519 = G__9521;
            ys__9520 = G__9522;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__9523_SHARP_, p2__9524_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__9523_SHARP_, cljs.core.hash.call(null, p2__9524_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__9528 = 0;
  var s__9529 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__9529) {
      var e__9530 = cljs.core.first.call(null, s__9529);
      var G__9531 = (h__9528 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__9530)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__9530)))) % 4503599627370496;
      var G__9532 = cljs.core.next.call(null, s__9529);
      h__9528 = G__9531;
      s__9529 = G__9532;
      continue
    }else {
      return h__9528
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__9536 = 0;
  var s__9537 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__9537) {
      var e__9538 = cljs.core.first.call(null, s__9537);
      var G__9539 = (h__9536 + cljs.core.hash.call(null, e__9538)) % 4503599627370496;
      var G__9540 = cljs.core.next.call(null, s__9537);
      h__9536 = G__9539;
      s__9537 = G__9540;
      continue
    }else {
      return h__9536
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__9561__9562 = cljs.core.seq.call(null, fn_map);
  if(G__9561__9562) {
    var G__9564__9566 = cljs.core.first.call(null, G__9561__9562);
    var vec__9565__9567 = G__9564__9566;
    var key_name__9568 = cljs.core.nth.call(null, vec__9565__9567, 0, null);
    var f__9569 = cljs.core.nth.call(null, vec__9565__9567, 1, null);
    var G__9561__9570 = G__9561__9562;
    var G__9564__9571 = G__9564__9566;
    var G__9561__9572 = G__9561__9570;
    while(true) {
      var vec__9573__9574 = G__9564__9571;
      var key_name__9575 = cljs.core.nth.call(null, vec__9573__9574, 0, null);
      var f__9576 = cljs.core.nth.call(null, vec__9573__9574, 1, null);
      var G__9561__9577 = G__9561__9572;
      var str_name__9578 = cljs.core.name.call(null, key_name__9575);
      obj[str_name__9578] = f__9576;
      var temp__3974__auto____9579 = cljs.core.next.call(null, G__9561__9577);
      if(temp__3974__auto____9579) {
        var G__9561__9580 = temp__3974__auto____9579;
        var G__9581 = cljs.core.first.call(null, G__9561__9580);
        var G__9582 = G__9561__9580;
        G__9564__9571 = G__9581;
        G__9561__9572 = G__9582;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9583 = this;
  var h__2208__auto____9584 = this__9583.__hash;
  if(!(h__2208__auto____9584 == null)) {
    return h__2208__auto____9584
  }else {
    var h__2208__auto____9585 = cljs.core.hash_coll.call(null, coll);
    this__9583.__hash = h__2208__auto____9585;
    return h__2208__auto____9585
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9586 = this;
  if(this__9586.count === 1) {
    return null
  }else {
    return this__9586.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9587 = this;
  return new cljs.core.List(this__9587.meta, o, coll, this__9587.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__9588 = this;
  var this__9589 = this;
  return cljs.core.pr_str.call(null, this__9589)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9590 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9591 = this;
  return this__9591.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9592 = this;
  return this__9592.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9593 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9594 = this;
  return this__9594.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9595 = this;
  if(this__9595.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__9595.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9596 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9597 = this;
  return new cljs.core.List(meta, this__9597.first, this__9597.rest, this__9597.count, this__9597.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9598 = this;
  return this__9598.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9599 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9600 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9601 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9602 = this;
  return new cljs.core.List(this__9602.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__9603 = this;
  var this__9604 = this;
  return cljs.core.pr_str.call(null, this__9604)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9605 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9606 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9607 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9608 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9609 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9610 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9611 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9612 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9613 = this;
  return this__9613.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9614 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__9618__9619 = coll;
  if(G__9618__9619) {
    if(function() {
      var or__3824__auto____9620 = G__9618__9619.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____9620) {
        return or__3824__auto____9620
      }else {
        return G__9618__9619.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__9618__9619.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__9618__9619)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__9618__9619)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__9621__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__9621 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9621__delegate.call(this, x, y, z, items)
    };
    G__9621.cljs$lang$maxFixedArity = 3;
    G__9621.cljs$lang$applyTo = function(arglist__9622) {
      var x = cljs.core.first(arglist__9622);
      var y = cljs.core.first(cljs.core.next(arglist__9622));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9622)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9622)));
      return G__9621__delegate(x, y, z, items)
    };
    G__9621.cljs$lang$arity$variadic = G__9621__delegate;
    return G__9621
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9623 = this;
  var h__2208__auto____9624 = this__9623.__hash;
  if(!(h__2208__auto____9624 == null)) {
    return h__2208__auto____9624
  }else {
    var h__2208__auto____9625 = cljs.core.hash_coll.call(null, coll);
    this__9623.__hash = h__2208__auto____9625;
    return h__2208__auto____9625
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9626 = this;
  if(this__9626.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__9626.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9627 = this;
  return new cljs.core.Cons(null, o, coll, this__9627.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__9628 = this;
  var this__9629 = this;
  return cljs.core.pr_str.call(null, this__9629)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9630 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9631 = this;
  return this__9631.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9632 = this;
  if(this__9632.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__9632.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9633 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9634 = this;
  return new cljs.core.Cons(meta, this__9634.first, this__9634.rest, this__9634.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9635 = this;
  return this__9635.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9636 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9636.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____9641 = coll == null;
    if(or__3824__auto____9641) {
      return or__3824__auto____9641
    }else {
      var G__9642__9643 = coll;
      if(G__9642__9643) {
        if(function() {
          var or__3824__auto____9644 = G__9642__9643.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____9644) {
            return or__3824__auto____9644
          }else {
            return G__9642__9643.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9642__9643.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9642__9643)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9642__9643)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__9648__9649 = x;
  if(G__9648__9649) {
    if(function() {
      var or__3824__auto____9650 = G__9648__9649.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____9650) {
        return or__3824__auto____9650
      }else {
        return G__9648__9649.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__9648__9649.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__9648__9649)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__9648__9649)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__9651 = null;
  var G__9651__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__9651__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__9651 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__9651__2.call(this, string, f);
      case 3:
        return G__9651__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9651
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__9652 = null;
  var G__9652__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__9652__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__9652 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9652__2.call(this, string, k);
      case 3:
        return G__9652__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9652
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__9653 = null;
  var G__9653__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__9653__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__9653 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9653__2.call(this, string, n);
      case 3:
        return G__9653__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9653
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__9665 = null;
  var G__9665__2 = function(this_sym9656, coll) {
    var this__9658 = this;
    var this_sym9656__9659 = this;
    var ___9660 = this_sym9656__9659;
    if(coll == null) {
      return null
    }else {
      var strobj__9661 = coll.strobj;
      if(strobj__9661 == null) {
        return cljs.core._lookup.call(null, coll, this__9658.k, null)
      }else {
        return strobj__9661[this__9658.k]
      }
    }
  };
  var G__9665__3 = function(this_sym9657, coll, not_found) {
    var this__9658 = this;
    var this_sym9657__9662 = this;
    var ___9663 = this_sym9657__9662;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__9658.k, not_found)
    }
  };
  G__9665 = function(this_sym9657, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9665__2.call(this, this_sym9657, coll);
      case 3:
        return G__9665__3.call(this, this_sym9657, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9665
}();
cljs.core.Keyword.prototype.apply = function(this_sym9654, args9655) {
  var this__9664 = this;
  return this_sym9654.call.apply(this_sym9654, [this_sym9654].concat(args9655.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__9674 = null;
  var G__9674__2 = function(this_sym9668, coll) {
    var this_sym9668__9670 = this;
    var this__9671 = this_sym9668__9670;
    return cljs.core._lookup.call(null, coll, this__9671.toString(), null)
  };
  var G__9674__3 = function(this_sym9669, coll, not_found) {
    var this_sym9669__9672 = this;
    var this__9673 = this_sym9669__9672;
    return cljs.core._lookup.call(null, coll, this__9673.toString(), not_found)
  };
  G__9674 = function(this_sym9669, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9674__2.call(this, this_sym9669, coll);
      case 3:
        return G__9674__3.call(this, this_sym9669, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9674
}();
String.prototype.apply = function(this_sym9666, args9667) {
  return this_sym9666.call.apply(this_sym9666, [this_sym9666].concat(args9667.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__9676 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__9676
  }else {
    lazy_seq.x = x__9676.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9677 = this;
  var h__2208__auto____9678 = this__9677.__hash;
  if(!(h__2208__auto____9678 == null)) {
    return h__2208__auto____9678
  }else {
    var h__2208__auto____9679 = cljs.core.hash_coll.call(null, coll);
    this__9677.__hash = h__2208__auto____9679;
    return h__2208__auto____9679
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9680 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9681 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__9682 = this;
  var this__9683 = this;
  return cljs.core.pr_str.call(null, this__9683)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9684 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9685 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9686 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9687 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9688 = this;
  return new cljs.core.LazySeq(meta, this__9688.realized, this__9688.x, this__9688.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9689 = this;
  return this__9689.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9690 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9690.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__9691 = this;
  return this__9691.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__9692 = this;
  var ___9693 = this;
  this__9692.buf[this__9692.end] = o;
  return this__9692.end = this__9692.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__9694 = this;
  var ___9695 = this;
  var ret__9696 = new cljs.core.ArrayChunk(this__9694.buf, 0, this__9694.end);
  this__9694.buf = null;
  return ret__9696
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9697 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__9697.arr[this__9697.off], this__9697.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9698 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__9698.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__9699 = this;
  if(this__9699.off === this__9699.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__9699.arr, this__9699.off + 1, this__9699.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__9700 = this;
  return this__9700.arr[this__9700.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__9701 = this;
  if(function() {
    var and__3822__auto____9702 = i >= 0;
    if(and__3822__auto____9702) {
      return i < this__9701.end - this__9701.off
    }else {
      return and__3822__auto____9702
    }
  }()) {
    return this__9701.arr[this__9701.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__9703 = this;
  return this__9703.end - this__9703.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__9704 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9705 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9706 = this;
  return cljs.core._nth.call(null, this__9706.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9707 = this;
  if(cljs.core._count.call(null, this__9707.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__9707.chunk), this__9707.more, this__9707.meta)
  }else {
    if(this__9707.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__9707.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9708 = this;
  if(this__9708.more == null) {
    return null
  }else {
    return this__9708.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9709 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9710 = this;
  return new cljs.core.ChunkedCons(this__9710.chunk, this__9710.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9711 = this;
  return this__9711.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9712 = this;
  return this__9712.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9713 = this;
  if(this__9713.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__9713.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__9717__9718 = s;
    if(G__9717__9718) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____9719 = null;
        if(cljs.core.truth_(or__3824__auto____9719)) {
          return or__3824__auto____9719
        }else {
          return G__9717__9718.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__9717__9718.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__9717__9718)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__9717__9718)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__9722 = [];
  var s__9723 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__9723)) {
      ary__9722.push(cljs.core.first.call(null, s__9723));
      var G__9724 = cljs.core.next.call(null, s__9723);
      s__9723 = G__9724;
      continue
    }else {
      return ary__9722
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__9728 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__9729 = 0;
  var xs__9730 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__9730) {
      ret__9728[i__9729] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__9730));
      var G__9731 = i__9729 + 1;
      var G__9732 = cljs.core.next.call(null, xs__9730);
      i__9729 = G__9731;
      xs__9730 = G__9732;
      continue
    }else {
    }
    break
  }
  return ret__9728
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__9740 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9741 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9742 = 0;
      var s__9743 = s__9741;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9744 = s__9743;
          if(and__3822__auto____9744) {
            return i__9742 < size
          }else {
            return and__3822__auto____9744
          }
        }())) {
          a__9740[i__9742] = cljs.core.first.call(null, s__9743);
          var G__9747 = i__9742 + 1;
          var G__9748 = cljs.core.next.call(null, s__9743);
          i__9742 = G__9747;
          s__9743 = G__9748;
          continue
        }else {
          return a__9740
        }
        break
      }
    }else {
      var n__2543__auto____9745 = size;
      var i__9746 = 0;
      while(true) {
        if(i__9746 < n__2543__auto____9745) {
          a__9740[i__9746] = init_val_or_seq;
          var G__9749 = i__9746 + 1;
          i__9746 = G__9749;
          continue
        }else {
        }
        break
      }
      return a__9740
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__9757 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9758 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9759 = 0;
      var s__9760 = s__9758;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9761 = s__9760;
          if(and__3822__auto____9761) {
            return i__9759 < size
          }else {
            return and__3822__auto____9761
          }
        }())) {
          a__9757[i__9759] = cljs.core.first.call(null, s__9760);
          var G__9764 = i__9759 + 1;
          var G__9765 = cljs.core.next.call(null, s__9760);
          i__9759 = G__9764;
          s__9760 = G__9765;
          continue
        }else {
          return a__9757
        }
        break
      }
    }else {
      var n__2543__auto____9762 = size;
      var i__9763 = 0;
      while(true) {
        if(i__9763 < n__2543__auto____9762) {
          a__9757[i__9763] = init_val_or_seq;
          var G__9766 = i__9763 + 1;
          i__9763 = G__9766;
          continue
        }else {
        }
        break
      }
      return a__9757
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__9774 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9775 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9776 = 0;
      var s__9777 = s__9775;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9778 = s__9777;
          if(and__3822__auto____9778) {
            return i__9776 < size
          }else {
            return and__3822__auto____9778
          }
        }())) {
          a__9774[i__9776] = cljs.core.first.call(null, s__9777);
          var G__9781 = i__9776 + 1;
          var G__9782 = cljs.core.next.call(null, s__9777);
          i__9776 = G__9781;
          s__9777 = G__9782;
          continue
        }else {
          return a__9774
        }
        break
      }
    }else {
      var n__2543__auto____9779 = size;
      var i__9780 = 0;
      while(true) {
        if(i__9780 < n__2543__auto____9779) {
          a__9774[i__9780] = init_val_or_seq;
          var G__9783 = i__9780 + 1;
          i__9780 = G__9783;
          continue
        }else {
        }
        break
      }
      return a__9774
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__9788 = s;
    var i__9789 = n;
    var sum__9790 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____9791 = i__9789 > 0;
        if(and__3822__auto____9791) {
          return cljs.core.seq.call(null, s__9788)
        }else {
          return and__3822__auto____9791
        }
      }())) {
        var G__9792 = cljs.core.next.call(null, s__9788);
        var G__9793 = i__9789 - 1;
        var G__9794 = sum__9790 + 1;
        s__9788 = G__9792;
        i__9789 = G__9793;
        sum__9790 = G__9794;
        continue
      }else {
        return sum__9790
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__9799 = cljs.core.seq.call(null, x);
      if(s__9799) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9799)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__9799), concat.call(null, cljs.core.chunk_rest.call(null, s__9799), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__9799), concat.call(null, cljs.core.rest.call(null, s__9799), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__9803__delegate = function(x, y, zs) {
      var cat__9802 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__9801 = cljs.core.seq.call(null, xys);
          if(xys__9801) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__9801)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__9801), cat.call(null, cljs.core.chunk_rest.call(null, xys__9801), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__9801), cat.call(null, cljs.core.rest.call(null, xys__9801), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__9802.call(null, concat.call(null, x, y), zs)
    };
    var G__9803 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9803__delegate.call(this, x, y, zs)
    };
    G__9803.cljs$lang$maxFixedArity = 2;
    G__9803.cljs$lang$applyTo = function(arglist__9804) {
      var x = cljs.core.first(arglist__9804);
      var y = cljs.core.first(cljs.core.next(arglist__9804));
      var zs = cljs.core.rest(cljs.core.next(arglist__9804));
      return G__9803__delegate(x, y, zs)
    };
    G__9803.cljs$lang$arity$variadic = G__9803__delegate;
    return G__9803
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__9805__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__9805 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9805__delegate.call(this, a, b, c, d, more)
    };
    G__9805.cljs$lang$maxFixedArity = 4;
    G__9805.cljs$lang$applyTo = function(arglist__9806) {
      var a = cljs.core.first(arglist__9806);
      var b = cljs.core.first(cljs.core.next(arglist__9806));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9806)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9806))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9806))));
      return G__9805__delegate(a, b, c, d, more)
    };
    G__9805.cljs$lang$arity$variadic = G__9805__delegate;
    return G__9805
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__9848 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__9849 = cljs.core._first.call(null, args__9848);
    var args__9850 = cljs.core._rest.call(null, args__9848);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__9849)
      }else {
        return f.call(null, a__9849)
      }
    }else {
      var b__9851 = cljs.core._first.call(null, args__9850);
      var args__9852 = cljs.core._rest.call(null, args__9850);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__9849, b__9851)
        }else {
          return f.call(null, a__9849, b__9851)
        }
      }else {
        var c__9853 = cljs.core._first.call(null, args__9852);
        var args__9854 = cljs.core._rest.call(null, args__9852);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__9849, b__9851, c__9853)
          }else {
            return f.call(null, a__9849, b__9851, c__9853)
          }
        }else {
          var d__9855 = cljs.core._first.call(null, args__9854);
          var args__9856 = cljs.core._rest.call(null, args__9854);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__9849, b__9851, c__9853, d__9855)
            }else {
              return f.call(null, a__9849, b__9851, c__9853, d__9855)
            }
          }else {
            var e__9857 = cljs.core._first.call(null, args__9856);
            var args__9858 = cljs.core._rest.call(null, args__9856);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__9849, b__9851, c__9853, d__9855, e__9857)
              }else {
                return f.call(null, a__9849, b__9851, c__9853, d__9855, e__9857)
              }
            }else {
              var f__9859 = cljs.core._first.call(null, args__9858);
              var args__9860 = cljs.core._rest.call(null, args__9858);
              if(argc === 6) {
                if(f__9859.cljs$lang$arity$6) {
                  return f__9859.cljs$lang$arity$6(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859)
                }else {
                  return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859)
                }
              }else {
                var g__9861 = cljs.core._first.call(null, args__9860);
                var args__9862 = cljs.core._rest.call(null, args__9860);
                if(argc === 7) {
                  if(f__9859.cljs$lang$arity$7) {
                    return f__9859.cljs$lang$arity$7(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861)
                  }else {
                    return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861)
                  }
                }else {
                  var h__9863 = cljs.core._first.call(null, args__9862);
                  var args__9864 = cljs.core._rest.call(null, args__9862);
                  if(argc === 8) {
                    if(f__9859.cljs$lang$arity$8) {
                      return f__9859.cljs$lang$arity$8(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863)
                    }else {
                      return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863)
                    }
                  }else {
                    var i__9865 = cljs.core._first.call(null, args__9864);
                    var args__9866 = cljs.core._rest.call(null, args__9864);
                    if(argc === 9) {
                      if(f__9859.cljs$lang$arity$9) {
                        return f__9859.cljs$lang$arity$9(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865)
                      }else {
                        return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865)
                      }
                    }else {
                      var j__9867 = cljs.core._first.call(null, args__9866);
                      var args__9868 = cljs.core._rest.call(null, args__9866);
                      if(argc === 10) {
                        if(f__9859.cljs$lang$arity$10) {
                          return f__9859.cljs$lang$arity$10(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867)
                        }else {
                          return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867)
                        }
                      }else {
                        var k__9869 = cljs.core._first.call(null, args__9868);
                        var args__9870 = cljs.core._rest.call(null, args__9868);
                        if(argc === 11) {
                          if(f__9859.cljs$lang$arity$11) {
                            return f__9859.cljs$lang$arity$11(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869)
                          }else {
                            return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869)
                          }
                        }else {
                          var l__9871 = cljs.core._first.call(null, args__9870);
                          var args__9872 = cljs.core._rest.call(null, args__9870);
                          if(argc === 12) {
                            if(f__9859.cljs$lang$arity$12) {
                              return f__9859.cljs$lang$arity$12(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871)
                            }else {
                              return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871)
                            }
                          }else {
                            var m__9873 = cljs.core._first.call(null, args__9872);
                            var args__9874 = cljs.core._rest.call(null, args__9872);
                            if(argc === 13) {
                              if(f__9859.cljs$lang$arity$13) {
                                return f__9859.cljs$lang$arity$13(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873)
                              }else {
                                return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873)
                              }
                            }else {
                              var n__9875 = cljs.core._first.call(null, args__9874);
                              var args__9876 = cljs.core._rest.call(null, args__9874);
                              if(argc === 14) {
                                if(f__9859.cljs$lang$arity$14) {
                                  return f__9859.cljs$lang$arity$14(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875)
                                }else {
                                  return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875)
                                }
                              }else {
                                var o__9877 = cljs.core._first.call(null, args__9876);
                                var args__9878 = cljs.core._rest.call(null, args__9876);
                                if(argc === 15) {
                                  if(f__9859.cljs$lang$arity$15) {
                                    return f__9859.cljs$lang$arity$15(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877)
                                  }else {
                                    return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877)
                                  }
                                }else {
                                  var p__9879 = cljs.core._first.call(null, args__9878);
                                  var args__9880 = cljs.core._rest.call(null, args__9878);
                                  if(argc === 16) {
                                    if(f__9859.cljs$lang$arity$16) {
                                      return f__9859.cljs$lang$arity$16(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877, p__9879)
                                    }else {
                                      return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877, p__9879)
                                    }
                                  }else {
                                    var q__9881 = cljs.core._first.call(null, args__9880);
                                    var args__9882 = cljs.core._rest.call(null, args__9880);
                                    if(argc === 17) {
                                      if(f__9859.cljs$lang$arity$17) {
                                        return f__9859.cljs$lang$arity$17(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877, p__9879, q__9881)
                                      }else {
                                        return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877, p__9879, q__9881)
                                      }
                                    }else {
                                      var r__9883 = cljs.core._first.call(null, args__9882);
                                      var args__9884 = cljs.core._rest.call(null, args__9882);
                                      if(argc === 18) {
                                        if(f__9859.cljs$lang$arity$18) {
                                          return f__9859.cljs$lang$arity$18(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877, p__9879, q__9881, r__9883)
                                        }else {
                                          return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877, p__9879, q__9881, r__9883)
                                        }
                                      }else {
                                        var s__9885 = cljs.core._first.call(null, args__9884);
                                        var args__9886 = cljs.core._rest.call(null, args__9884);
                                        if(argc === 19) {
                                          if(f__9859.cljs$lang$arity$19) {
                                            return f__9859.cljs$lang$arity$19(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877, p__9879, q__9881, r__9883, s__9885)
                                          }else {
                                            return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877, p__9879, q__9881, r__9883, s__9885)
                                          }
                                        }else {
                                          var t__9887 = cljs.core._first.call(null, args__9886);
                                          var args__9888 = cljs.core._rest.call(null, args__9886);
                                          if(argc === 20) {
                                            if(f__9859.cljs$lang$arity$20) {
                                              return f__9859.cljs$lang$arity$20(a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877, p__9879, q__9881, r__9883, s__9885, t__9887)
                                            }else {
                                              return f__9859.call(null, a__9849, b__9851, c__9853, d__9855, e__9857, f__9859, g__9861, h__9863, i__9865, j__9867, k__9869, l__9871, m__9873, n__9875, o__9877, p__9879, q__9881, r__9883, s__9885, t__9887)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__9903 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9904 = cljs.core.bounded_count.call(null, args, fixed_arity__9903 + 1);
      if(bc__9904 <= fixed_arity__9903) {
        return cljs.core.apply_to.call(null, f, bc__9904, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__9905 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__9906 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9907 = cljs.core.bounded_count.call(null, arglist__9905, fixed_arity__9906 + 1);
      if(bc__9907 <= fixed_arity__9906) {
        return cljs.core.apply_to.call(null, f, bc__9907, arglist__9905)
      }else {
        return f.cljs$lang$applyTo(arglist__9905)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9905))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__9908 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__9909 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9910 = cljs.core.bounded_count.call(null, arglist__9908, fixed_arity__9909 + 1);
      if(bc__9910 <= fixed_arity__9909) {
        return cljs.core.apply_to.call(null, f, bc__9910, arglist__9908)
      }else {
        return f.cljs$lang$applyTo(arglist__9908)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9908))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__9911 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__9912 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9913 = cljs.core.bounded_count.call(null, arglist__9911, fixed_arity__9912 + 1);
      if(bc__9913 <= fixed_arity__9912) {
        return cljs.core.apply_to.call(null, f, bc__9913, arglist__9911)
      }else {
        return f.cljs$lang$applyTo(arglist__9911)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9911))
    }
  };
  var apply__6 = function() {
    var G__9917__delegate = function(f, a, b, c, d, args) {
      var arglist__9914 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__9915 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__9916 = cljs.core.bounded_count.call(null, arglist__9914, fixed_arity__9915 + 1);
        if(bc__9916 <= fixed_arity__9915) {
          return cljs.core.apply_to.call(null, f, bc__9916, arglist__9914)
        }else {
          return f.cljs$lang$applyTo(arglist__9914)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__9914))
      }
    };
    var G__9917 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__9917__delegate.call(this, f, a, b, c, d, args)
    };
    G__9917.cljs$lang$maxFixedArity = 5;
    G__9917.cljs$lang$applyTo = function(arglist__9918) {
      var f = cljs.core.first(arglist__9918);
      var a = cljs.core.first(cljs.core.next(arglist__9918));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9918)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9918))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9918)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9918)))));
      return G__9917__delegate(f, a, b, c, d, args)
    };
    G__9917.cljs$lang$arity$variadic = G__9917__delegate;
    return G__9917
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__9919) {
    var obj = cljs.core.first(arglist__9919);
    var f = cljs.core.first(cljs.core.next(arglist__9919));
    var args = cljs.core.rest(cljs.core.next(arglist__9919));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__9920__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__9920 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9920__delegate.call(this, x, y, more)
    };
    G__9920.cljs$lang$maxFixedArity = 2;
    G__9920.cljs$lang$applyTo = function(arglist__9921) {
      var x = cljs.core.first(arglist__9921);
      var y = cljs.core.first(cljs.core.next(arglist__9921));
      var more = cljs.core.rest(cljs.core.next(arglist__9921));
      return G__9920__delegate(x, y, more)
    };
    G__9920.cljs$lang$arity$variadic = G__9920__delegate;
    return G__9920
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__9922 = pred;
        var G__9923 = cljs.core.next.call(null, coll);
        pred = G__9922;
        coll = G__9923;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____9925 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____9925)) {
        return or__3824__auto____9925
      }else {
        var G__9926 = pred;
        var G__9927 = cljs.core.next.call(null, coll);
        pred = G__9926;
        coll = G__9927;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__9928 = null;
    var G__9928__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__9928__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__9928__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__9928__3 = function() {
      var G__9929__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__9929 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__9929__delegate.call(this, x, y, zs)
      };
      G__9929.cljs$lang$maxFixedArity = 2;
      G__9929.cljs$lang$applyTo = function(arglist__9930) {
        var x = cljs.core.first(arglist__9930);
        var y = cljs.core.first(cljs.core.next(arglist__9930));
        var zs = cljs.core.rest(cljs.core.next(arglist__9930));
        return G__9929__delegate(x, y, zs)
      };
      G__9929.cljs$lang$arity$variadic = G__9929__delegate;
      return G__9929
    }();
    G__9928 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__9928__0.call(this);
        case 1:
          return G__9928__1.call(this, x);
        case 2:
          return G__9928__2.call(this, x, y);
        default:
          return G__9928__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__9928.cljs$lang$maxFixedArity = 2;
    G__9928.cljs$lang$applyTo = G__9928__3.cljs$lang$applyTo;
    return G__9928
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__9931__delegate = function(args) {
      return x
    };
    var G__9931 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__9931__delegate.call(this, args)
    };
    G__9931.cljs$lang$maxFixedArity = 0;
    G__9931.cljs$lang$applyTo = function(arglist__9932) {
      var args = cljs.core.seq(arglist__9932);
      return G__9931__delegate(args)
    };
    G__9931.cljs$lang$arity$variadic = G__9931__delegate;
    return G__9931
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__9939 = null;
      var G__9939__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__9939__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__9939__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__9939__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__9939__4 = function() {
        var G__9940__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__9940 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9940__delegate.call(this, x, y, z, args)
        };
        G__9940.cljs$lang$maxFixedArity = 3;
        G__9940.cljs$lang$applyTo = function(arglist__9941) {
          var x = cljs.core.first(arglist__9941);
          var y = cljs.core.first(cljs.core.next(arglist__9941));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9941)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9941)));
          return G__9940__delegate(x, y, z, args)
        };
        G__9940.cljs$lang$arity$variadic = G__9940__delegate;
        return G__9940
      }();
      G__9939 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9939__0.call(this);
          case 1:
            return G__9939__1.call(this, x);
          case 2:
            return G__9939__2.call(this, x, y);
          case 3:
            return G__9939__3.call(this, x, y, z);
          default:
            return G__9939__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9939.cljs$lang$maxFixedArity = 3;
      G__9939.cljs$lang$applyTo = G__9939__4.cljs$lang$applyTo;
      return G__9939
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__9942 = null;
      var G__9942__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__9942__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__9942__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__9942__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__9942__4 = function() {
        var G__9943__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__9943 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9943__delegate.call(this, x, y, z, args)
        };
        G__9943.cljs$lang$maxFixedArity = 3;
        G__9943.cljs$lang$applyTo = function(arglist__9944) {
          var x = cljs.core.first(arglist__9944);
          var y = cljs.core.first(cljs.core.next(arglist__9944));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9944)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9944)));
          return G__9943__delegate(x, y, z, args)
        };
        G__9943.cljs$lang$arity$variadic = G__9943__delegate;
        return G__9943
      }();
      G__9942 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9942__0.call(this);
          case 1:
            return G__9942__1.call(this, x);
          case 2:
            return G__9942__2.call(this, x, y);
          case 3:
            return G__9942__3.call(this, x, y, z);
          default:
            return G__9942__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9942.cljs$lang$maxFixedArity = 3;
      G__9942.cljs$lang$applyTo = G__9942__4.cljs$lang$applyTo;
      return G__9942
    }()
  };
  var comp__4 = function() {
    var G__9945__delegate = function(f1, f2, f3, fs) {
      var fs__9936 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__9946__delegate = function(args) {
          var ret__9937 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__9936), args);
          var fs__9938 = cljs.core.next.call(null, fs__9936);
          while(true) {
            if(fs__9938) {
              var G__9947 = cljs.core.first.call(null, fs__9938).call(null, ret__9937);
              var G__9948 = cljs.core.next.call(null, fs__9938);
              ret__9937 = G__9947;
              fs__9938 = G__9948;
              continue
            }else {
              return ret__9937
            }
            break
          }
        };
        var G__9946 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9946__delegate.call(this, args)
        };
        G__9946.cljs$lang$maxFixedArity = 0;
        G__9946.cljs$lang$applyTo = function(arglist__9949) {
          var args = cljs.core.seq(arglist__9949);
          return G__9946__delegate(args)
        };
        G__9946.cljs$lang$arity$variadic = G__9946__delegate;
        return G__9946
      }()
    };
    var G__9945 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9945__delegate.call(this, f1, f2, f3, fs)
    };
    G__9945.cljs$lang$maxFixedArity = 3;
    G__9945.cljs$lang$applyTo = function(arglist__9950) {
      var f1 = cljs.core.first(arglist__9950);
      var f2 = cljs.core.first(cljs.core.next(arglist__9950));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9950)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9950)));
      return G__9945__delegate(f1, f2, f3, fs)
    };
    G__9945.cljs$lang$arity$variadic = G__9945__delegate;
    return G__9945
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__9951__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__9951 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9951__delegate.call(this, args)
      };
      G__9951.cljs$lang$maxFixedArity = 0;
      G__9951.cljs$lang$applyTo = function(arglist__9952) {
        var args = cljs.core.seq(arglist__9952);
        return G__9951__delegate(args)
      };
      G__9951.cljs$lang$arity$variadic = G__9951__delegate;
      return G__9951
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__9953__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__9953 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9953__delegate.call(this, args)
      };
      G__9953.cljs$lang$maxFixedArity = 0;
      G__9953.cljs$lang$applyTo = function(arglist__9954) {
        var args = cljs.core.seq(arglist__9954);
        return G__9953__delegate(args)
      };
      G__9953.cljs$lang$arity$variadic = G__9953__delegate;
      return G__9953
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__9955__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__9955 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9955__delegate.call(this, args)
      };
      G__9955.cljs$lang$maxFixedArity = 0;
      G__9955.cljs$lang$applyTo = function(arglist__9956) {
        var args = cljs.core.seq(arglist__9956);
        return G__9955__delegate(args)
      };
      G__9955.cljs$lang$arity$variadic = G__9955__delegate;
      return G__9955
    }()
  };
  var partial__5 = function() {
    var G__9957__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__9958__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__9958 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9958__delegate.call(this, args)
        };
        G__9958.cljs$lang$maxFixedArity = 0;
        G__9958.cljs$lang$applyTo = function(arglist__9959) {
          var args = cljs.core.seq(arglist__9959);
          return G__9958__delegate(args)
        };
        G__9958.cljs$lang$arity$variadic = G__9958__delegate;
        return G__9958
      }()
    };
    var G__9957 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9957__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__9957.cljs$lang$maxFixedArity = 4;
    G__9957.cljs$lang$applyTo = function(arglist__9960) {
      var f = cljs.core.first(arglist__9960);
      var arg1 = cljs.core.first(cljs.core.next(arglist__9960));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9960)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9960))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9960))));
      return G__9957__delegate(f, arg1, arg2, arg3, more)
    };
    G__9957.cljs$lang$arity$variadic = G__9957__delegate;
    return G__9957
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__9961 = null;
      var G__9961__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__9961__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__9961__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__9961__4 = function() {
        var G__9962__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__9962 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9962__delegate.call(this, a, b, c, ds)
        };
        G__9962.cljs$lang$maxFixedArity = 3;
        G__9962.cljs$lang$applyTo = function(arglist__9963) {
          var a = cljs.core.first(arglist__9963);
          var b = cljs.core.first(cljs.core.next(arglist__9963));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9963)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9963)));
          return G__9962__delegate(a, b, c, ds)
        };
        G__9962.cljs$lang$arity$variadic = G__9962__delegate;
        return G__9962
      }();
      G__9961 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__9961__1.call(this, a);
          case 2:
            return G__9961__2.call(this, a, b);
          case 3:
            return G__9961__3.call(this, a, b, c);
          default:
            return G__9961__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9961.cljs$lang$maxFixedArity = 3;
      G__9961.cljs$lang$applyTo = G__9961__4.cljs$lang$applyTo;
      return G__9961
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__9964 = null;
      var G__9964__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9964__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__9964__4 = function() {
        var G__9965__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__9965 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9965__delegate.call(this, a, b, c, ds)
        };
        G__9965.cljs$lang$maxFixedArity = 3;
        G__9965.cljs$lang$applyTo = function(arglist__9966) {
          var a = cljs.core.first(arglist__9966);
          var b = cljs.core.first(cljs.core.next(arglist__9966));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9966)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9966)));
          return G__9965__delegate(a, b, c, ds)
        };
        G__9965.cljs$lang$arity$variadic = G__9965__delegate;
        return G__9965
      }();
      G__9964 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9964__2.call(this, a, b);
          case 3:
            return G__9964__3.call(this, a, b, c);
          default:
            return G__9964__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9964.cljs$lang$maxFixedArity = 3;
      G__9964.cljs$lang$applyTo = G__9964__4.cljs$lang$applyTo;
      return G__9964
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__9967 = null;
      var G__9967__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9967__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__9967__4 = function() {
        var G__9968__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__9968 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9968__delegate.call(this, a, b, c, ds)
        };
        G__9968.cljs$lang$maxFixedArity = 3;
        G__9968.cljs$lang$applyTo = function(arglist__9969) {
          var a = cljs.core.first(arglist__9969);
          var b = cljs.core.first(cljs.core.next(arglist__9969));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9969)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9969)));
          return G__9968__delegate(a, b, c, ds)
        };
        G__9968.cljs$lang$arity$variadic = G__9968__delegate;
        return G__9968
      }();
      G__9967 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9967__2.call(this, a, b);
          case 3:
            return G__9967__3.call(this, a, b, c);
          default:
            return G__9967__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9967.cljs$lang$maxFixedArity = 3;
      G__9967.cljs$lang$applyTo = G__9967__4.cljs$lang$applyTo;
      return G__9967
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__9985 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9993 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9993) {
        var s__9994 = temp__3974__auto____9993;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9994)) {
          var c__9995 = cljs.core.chunk_first.call(null, s__9994);
          var size__9996 = cljs.core.count.call(null, c__9995);
          var b__9997 = cljs.core.chunk_buffer.call(null, size__9996);
          var n__2543__auto____9998 = size__9996;
          var i__9999 = 0;
          while(true) {
            if(i__9999 < n__2543__auto____9998) {
              cljs.core.chunk_append.call(null, b__9997, f.call(null, idx + i__9999, cljs.core._nth.call(null, c__9995, i__9999)));
              var G__10000 = i__9999 + 1;
              i__9999 = G__10000;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9997), mapi.call(null, idx + size__9996, cljs.core.chunk_rest.call(null, s__9994)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__9994)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__9994)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__9985.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10010 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10010) {
      var s__10011 = temp__3974__auto____10010;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__10011)) {
        var c__10012 = cljs.core.chunk_first.call(null, s__10011);
        var size__10013 = cljs.core.count.call(null, c__10012);
        var b__10014 = cljs.core.chunk_buffer.call(null, size__10013);
        var n__2543__auto____10015 = size__10013;
        var i__10016 = 0;
        while(true) {
          if(i__10016 < n__2543__auto____10015) {
            var x__10017 = f.call(null, cljs.core._nth.call(null, c__10012, i__10016));
            if(x__10017 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__10014, x__10017)
            }
            var G__10019 = i__10016 + 1;
            i__10016 = G__10019;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10014), keep.call(null, f, cljs.core.chunk_rest.call(null, s__10011)))
      }else {
        var x__10018 = f.call(null, cljs.core.first.call(null, s__10011));
        if(x__10018 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__10011))
        }else {
          return cljs.core.cons.call(null, x__10018, keep.call(null, f, cljs.core.rest.call(null, s__10011)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__10045 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10055 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10055) {
        var s__10056 = temp__3974__auto____10055;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__10056)) {
          var c__10057 = cljs.core.chunk_first.call(null, s__10056);
          var size__10058 = cljs.core.count.call(null, c__10057);
          var b__10059 = cljs.core.chunk_buffer.call(null, size__10058);
          var n__2543__auto____10060 = size__10058;
          var i__10061 = 0;
          while(true) {
            if(i__10061 < n__2543__auto____10060) {
              var x__10062 = f.call(null, idx + i__10061, cljs.core._nth.call(null, c__10057, i__10061));
              if(x__10062 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__10059, x__10062)
              }
              var G__10064 = i__10061 + 1;
              i__10061 = G__10064;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10059), keepi.call(null, idx + size__10058, cljs.core.chunk_rest.call(null, s__10056)))
        }else {
          var x__10063 = f.call(null, idx, cljs.core.first.call(null, s__10056));
          if(x__10063 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__10056))
          }else {
            return cljs.core.cons.call(null, x__10063, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__10056)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__10045.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10150 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10150)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____10150
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10151 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10151)) {
            var and__3822__auto____10152 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____10152)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____10152
            }
          }else {
            return and__3822__auto____10151
          }
        }())
      };
      var ep1__4 = function() {
        var G__10221__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____10153 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____10153)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____10153
            }
          }())
        };
        var G__10221 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10221__delegate.call(this, x, y, z, args)
        };
        G__10221.cljs$lang$maxFixedArity = 3;
        G__10221.cljs$lang$applyTo = function(arglist__10222) {
          var x = cljs.core.first(arglist__10222);
          var y = cljs.core.first(cljs.core.next(arglist__10222));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10222)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10222)));
          return G__10221__delegate(x, y, z, args)
        };
        G__10221.cljs$lang$arity$variadic = G__10221__delegate;
        return G__10221
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10165 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10165)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____10165
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10166 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10166)) {
            var and__3822__auto____10167 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____10167)) {
              var and__3822__auto____10168 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____10168)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____10168
              }
            }else {
              return and__3822__auto____10167
            }
          }else {
            return and__3822__auto____10166
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10169 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10169)) {
            var and__3822__auto____10170 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____10170)) {
              var and__3822__auto____10171 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____10171)) {
                var and__3822__auto____10172 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____10172)) {
                  var and__3822__auto____10173 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____10173)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____10173
                  }
                }else {
                  return and__3822__auto____10172
                }
              }else {
                return and__3822__auto____10171
              }
            }else {
              return and__3822__auto____10170
            }
          }else {
            return and__3822__auto____10169
          }
        }())
      };
      var ep2__4 = function() {
        var G__10223__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____10174 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____10174)) {
              return cljs.core.every_QMARK_.call(null, function(p1__10020_SHARP_) {
                var and__3822__auto____10175 = p1.call(null, p1__10020_SHARP_);
                if(cljs.core.truth_(and__3822__auto____10175)) {
                  return p2.call(null, p1__10020_SHARP_)
                }else {
                  return and__3822__auto____10175
                }
              }, args)
            }else {
              return and__3822__auto____10174
            }
          }())
        };
        var G__10223 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10223__delegate.call(this, x, y, z, args)
        };
        G__10223.cljs$lang$maxFixedArity = 3;
        G__10223.cljs$lang$applyTo = function(arglist__10224) {
          var x = cljs.core.first(arglist__10224);
          var y = cljs.core.first(cljs.core.next(arglist__10224));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10224)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10224)));
          return G__10223__delegate(x, y, z, args)
        };
        G__10223.cljs$lang$arity$variadic = G__10223__delegate;
        return G__10223
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10194 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10194)) {
            var and__3822__auto____10195 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10195)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____10195
            }
          }else {
            return and__3822__auto____10194
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10196 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10196)) {
            var and__3822__auto____10197 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10197)) {
              var and__3822__auto____10198 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____10198)) {
                var and__3822__auto____10199 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____10199)) {
                  var and__3822__auto____10200 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____10200)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____10200
                  }
                }else {
                  return and__3822__auto____10199
                }
              }else {
                return and__3822__auto____10198
              }
            }else {
              return and__3822__auto____10197
            }
          }else {
            return and__3822__auto____10196
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10201 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10201)) {
            var and__3822__auto____10202 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10202)) {
              var and__3822__auto____10203 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____10203)) {
                var and__3822__auto____10204 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____10204)) {
                  var and__3822__auto____10205 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____10205)) {
                    var and__3822__auto____10206 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____10206)) {
                      var and__3822__auto____10207 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____10207)) {
                        var and__3822__auto____10208 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____10208)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____10208
                        }
                      }else {
                        return and__3822__auto____10207
                      }
                    }else {
                      return and__3822__auto____10206
                    }
                  }else {
                    return and__3822__auto____10205
                  }
                }else {
                  return and__3822__auto____10204
                }
              }else {
                return and__3822__auto____10203
              }
            }else {
              return and__3822__auto____10202
            }
          }else {
            return and__3822__auto____10201
          }
        }())
      };
      var ep3__4 = function() {
        var G__10225__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____10209 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____10209)) {
              return cljs.core.every_QMARK_.call(null, function(p1__10021_SHARP_) {
                var and__3822__auto____10210 = p1.call(null, p1__10021_SHARP_);
                if(cljs.core.truth_(and__3822__auto____10210)) {
                  var and__3822__auto____10211 = p2.call(null, p1__10021_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____10211)) {
                    return p3.call(null, p1__10021_SHARP_)
                  }else {
                    return and__3822__auto____10211
                  }
                }else {
                  return and__3822__auto____10210
                }
              }, args)
            }else {
              return and__3822__auto____10209
            }
          }())
        };
        var G__10225 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10225__delegate.call(this, x, y, z, args)
        };
        G__10225.cljs$lang$maxFixedArity = 3;
        G__10225.cljs$lang$applyTo = function(arglist__10226) {
          var x = cljs.core.first(arglist__10226);
          var y = cljs.core.first(cljs.core.next(arglist__10226));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10226)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10226)));
          return G__10225__delegate(x, y, z, args)
        };
        G__10225.cljs$lang$arity$variadic = G__10225__delegate;
        return G__10225
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__10227__delegate = function(p1, p2, p3, ps) {
      var ps__10212 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__10022_SHARP_) {
            return p1__10022_SHARP_.call(null, x)
          }, ps__10212)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__10023_SHARP_) {
            var and__3822__auto____10217 = p1__10023_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10217)) {
              return p1__10023_SHARP_.call(null, y)
            }else {
              return and__3822__auto____10217
            }
          }, ps__10212)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__10024_SHARP_) {
            var and__3822__auto____10218 = p1__10024_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10218)) {
              var and__3822__auto____10219 = p1__10024_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____10219)) {
                return p1__10024_SHARP_.call(null, z)
              }else {
                return and__3822__auto____10219
              }
            }else {
              return and__3822__auto____10218
            }
          }, ps__10212)
        };
        var epn__4 = function() {
          var G__10228__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____10220 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____10220)) {
                return cljs.core.every_QMARK_.call(null, function(p1__10025_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__10025_SHARP_, args)
                }, ps__10212)
              }else {
                return and__3822__auto____10220
              }
            }())
          };
          var G__10228 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10228__delegate.call(this, x, y, z, args)
          };
          G__10228.cljs$lang$maxFixedArity = 3;
          G__10228.cljs$lang$applyTo = function(arglist__10229) {
            var x = cljs.core.first(arglist__10229);
            var y = cljs.core.first(cljs.core.next(arglist__10229));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10229)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10229)));
            return G__10228__delegate(x, y, z, args)
          };
          G__10228.cljs$lang$arity$variadic = G__10228__delegate;
          return G__10228
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__10227 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10227__delegate.call(this, p1, p2, p3, ps)
    };
    G__10227.cljs$lang$maxFixedArity = 3;
    G__10227.cljs$lang$applyTo = function(arglist__10230) {
      var p1 = cljs.core.first(arglist__10230);
      var p2 = cljs.core.first(cljs.core.next(arglist__10230));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10230)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10230)));
      return G__10227__delegate(p1, p2, p3, ps)
    };
    G__10227.cljs$lang$arity$variadic = G__10227__delegate;
    return G__10227
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____10311 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10311)) {
          return or__3824__auto____10311
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____10312 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10312)) {
          return or__3824__auto____10312
        }else {
          var or__3824__auto____10313 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____10313)) {
            return or__3824__auto____10313
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__10382__delegate = function(x, y, z, args) {
          var or__3824__auto____10314 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____10314)) {
            return or__3824__auto____10314
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__10382 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10382__delegate.call(this, x, y, z, args)
        };
        G__10382.cljs$lang$maxFixedArity = 3;
        G__10382.cljs$lang$applyTo = function(arglist__10383) {
          var x = cljs.core.first(arglist__10383);
          var y = cljs.core.first(cljs.core.next(arglist__10383));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10383)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10383)));
          return G__10382__delegate(x, y, z, args)
        };
        G__10382.cljs$lang$arity$variadic = G__10382__delegate;
        return G__10382
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____10326 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10326)) {
          return or__3824__auto____10326
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____10327 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10327)) {
          return or__3824__auto____10327
        }else {
          var or__3824__auto____10328 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____10328)) {
            return or__3824__auto____10328
          }else {
            var or__3824__auto____10329 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____10329)) {
              return or__3824__auto____10329
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____10330 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10330)) {
          return or__3824__auto____10330
        }else {
          var or__3824__auto____10331 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____10331)) {
            return or__3824__auto____10331
          }else {
            var or__3824__auto____10332 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____10332)) {
              return or__3824__auto____10332
            }else {
              var or__3824__auto____10333 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____10333)) {
                return or__3824__auto____10333
              }else {
                var or__3824__auto____10334 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____10334)) {
                  return or__3824__auto____10334
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__10384__delegate = function(x, y, z, args) {
          var or__3824__auto____10335 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____10335)) {
            return or__3824__auto____10335
          }else {
            return cljs.core.some.call(null, function(p1__10065_SHARP_) {
              var or__3824__auto____10336 = p1.call(null, p1__10065_SHARP_);
              if(cljs.core.truth_(or__3824__auto____10336)) {
                return or__3824__auto____10336
              }else {
                return p2.call(null, p1__10065_SHARP_)
              }
            }, args)
          }
        };
        var G__10384 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10384__delegate.call(this, x, y, z, args)
        };
        G__10384.cljs$lang$maxFixedArity = 3;
        G__10384.cljs$lang$applyTo = function(arglist__10385) {
          var x = cljs.core.first(arglist__10385);
          var y = cljs.core.first(cljs.core.next(arglist__10385));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10385)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10385)));
          return G__10384__delegate(x, y, z, args)
        };
        G__10384.cljs$lang$arity$variadic = G__10384__delegate;
        return G__10384
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____10355 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10355)) {
          return or__3824__auto____10355
        }else {
          var or__3824__auto____10356 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____10356)) {
            return or__3824__auto____10356
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____10357 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10357)) {
          return or__3824__auto____10357
        }else {
          var or__3824__auto____10358 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____10358)) {
            return or__3824__auto____10358
          }else {
            var or__3824__auto____10359 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____10359)) {
              return or__3824__auto____10359
            }else {
              var or__3824__auto____10360 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____10360)) {
                return or__3824__auto____10360
              }else {
                var or__3824__auto____10361 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____10361)) {
                  return or__3824__auto____10361
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____10362 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10362)) {
          return or__3824__auto____10362
        }else {
          var or__3824__auto____10363 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____10363)) {
            return or__3824__auto____10363
          }else {
            var or__3824__auto____10364 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____10364)) {
              return or__3824__auto____10364
            }else {
              var or__3824__auto____10365 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____10365)) {
                return or__3824__auto____10365
              }else {
                var or__3824__auto____10366 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____10366)) {
                  return or__3824__auto____10366
                }else {
                  var or__3824__auto____10367 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____10367)) {
                    return or__3824__auto____10367
                  }else {
                    var or__3824__auto____10368 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____10368)) {
                      return or__3824__auto____10368
                    }else {
                      var or__3824__auto____10369 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____10369)) {
                        return or__3824__auto____10369
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__10386__delegate = function(x, y, z, args) {
          var or__3824__auto____10370 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____10370)) {
            return or__3824__auto____10370
          }else {
            return cljs.core.some.call(null, function(p1__10066_SHARP_) {
              var or__3824__auto____10371 = p1.call(null, p1__10066_SHARP_);
              if(cljs.core.truth_(or__3824__auto____10371)) {
                return or__3824__auto____10371
              }else {
                var or__3824__auto____10372 = p2.call(null, p1__10066_SHARP_);
                if(cljs.core.truth_(or__3824__auto____10372)) {
                  return or__3824__auto____10372
                }else {
                  return p3.call(null, p1__10066_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__10386 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10386__delegate.call(this, x, y, z, args)
        };
        G__10386.cljs$lang$maxFixedArity = 3;
        G__10386.cljs$lang$applyTo = function(arglist__10387) {
          var x = cljs.core.first(arglist__10387);
          var y = cljs.core.first(cljs.core.next(arglist__10387));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10387)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10387)));
          return G__10386__delegate(x, y, z, args)
        };
        G__10386.cljs$lang$arity$variadic = G__10386__delegate;
        return G__10386
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__10388__delegate = function(p1, p2, p3, ps) {
      var ps__10373 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__10067_SHARP_) {
            return p1__10067_SHARP_.call(null, x)
          }, ps__10373)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__10068_SHARP_) {
            var or__3824__auto____10378 = p1__10068_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____10378)) {
              return or__3824__auto____10378
            }else {
              return p1__10068_SHARP_.call(null, y)
            }
          }, ps__10373)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__10069_SHARP_) {
            var or__3824__auto____10379 = p1__10069_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____10379)) {
              return or__3824__auto____10379
            }else {
              var or__3824__auto____10380 = p1__10069_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____10380)) {
                return or__3824__auto____10380
              }else {
                return p1__10069_SHARP_.call(null, z)
              }
            }
          }, ps__10373)
        };
        var spn__4 = function() {
          var G__10389__delegate = function(x, y, z, args) {
            var or__3824__auto____10381 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____10381)) {
              return or__3824__auto____10381
            }else {
              return cljs.core.some.call(null, function(p1__10070_SHARP_) {
                return cljs.core.some.call(null, p1__10070_SHARP_, args)
              }, ps__10373)
            }
          };
          var G__10389 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10389__delegate.call(this, x, y, z, args)
          };
          G__10389.cljs$lang$maxFixedArity = 3;
          G__10389.cljs$lang$applyTo = function(arglist__10390) {
            var x = cljs.core.first(arglist__10390);
            var y = cljs.core.first(cljs.core.next(arglist__10390));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10390)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10390)));
            return G__10389__delegate(x, y, z, args)
          };
          G__10389.cljs$lang$arity$variadic = G__10389__delegate;
          return G__10389
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__10388 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10388__delegate.call(this, p1, p2, p3, ps)
    };
    G__10388.cljs$lang$maxFixedArity = 3;
    G__10388.cljs$lang$applyTo = function(arglist__10391) {
      var p1 = cljs.core.first(arglist__10391);
      var p2 = cljs.core.first(cljs.core.next(arglist__10391));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10391)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10391)));
      return G__10388__delegate(p1, p2, p3, ps)
    };
    G__10388.cljs$lang$arity$variadic = G__10388__delegate;
    return G__10388
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10410 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10410) {
        var s__10411 = temp__3974__auto____10410;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__10411)) {
          var c__10412 = cljs.core.chunk_first.call(null, s__10411);
          var size__10413 = cljs.core.count.call(null, c__10412);
          var b__10414 = cljs.core.chunk_buffer.call(null, size__10413);
          var n__2543__auto____10415 = size__10413;
          var i__10416 = 0;
          while(true) {
            if(i__10416 < n__2543__auto____10415) {
              cljs.core.chunk_append.call(null, b__10414, f.call(null, cljs.core._nth.call(null, c__10412, i__10416)));
              var G__10428 = i__10416 + 1;
              i__10416 = G__10428;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10414), map.call(null, f, cljs.core.chunk_rest.call(null, s__10411)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__10411)), map.call(null, f, cljs.core.rest.call(null, s__10411)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__10417 = cljs.core.seq.call(null, c1);
      var s2__10418 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____10419 = s1__10417;
        if(and__3822__auto____10419) {
          return s2__10418
        }else {
          return and__3822__auto____10419
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__10417), cljs.core.first.call(null, s2__10418)), map.call(null, f, cljs.core.rest.call(null, s1__10417), cljs.core.rest.call(null, s2__10418)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__10420 = cljs.core.seq.call(null, c1);
      var s2__10421 = cljs.core.seq.call(null, c2);
      var s3__10422 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____10423 = s1__10420;
        if(and__3822__auto____10423) {
          var and__3822__auto____10424 = s2__10421;
          if(and__3822__auto____10424) {
            return s3__10422
          }else {
            return and__3822__auto____10424
          }
        }else {
          return and__3822__auto____10423
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__10420), cljs.core.first.call(null, s2__10421), cljs.core.first.call(null, s3__10422)), map.call(null, f, cljs.core.rest.call(null, s1__10420), cljs.core.rest.call(null, s2__10421), cljs.core.rest.call(null, s3__10422)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__10429__delegate = function(f, c1, c2, c3, colls) {
      var step__10427 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__10426 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__10426)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__10426), step.call(null, map.call(null, cljs.core.rest, ss__10426)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__10231_SHARP_) {
        return cljs.core.apply.call(null, f, p1__10231_SHARP_)
      }, step__10427.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__10429 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10429__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__10429.cljs$lang$maxFixedArity = 4;
    G__10429.cljs$lang$applyTo = function(arglist__10430) {
      var f = cljs.core.first(arglist__10430);
      var c1 = cljs.core.first(cljs.core.next(arglist__10430));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10430)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10430))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10430))));
      return G__10429__delegate(f, c1, c2, c3, colls)
    };
    G__10429.cljs$lang$arity$variadic = G__10429__delegate;
    return G__10429
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____10433 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10433) {
        var s__10434 = temp__3974__auto____10433;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10434), take.call(null, n - 1, cljs.core.rest.call(null, s__10434)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__10440 = function(n, coll) {
    while(true) {
      var s__10438 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____10439 = n > 0;
        if(and__3822__auto____10439) {
          return s__10438
        }else {
          return and__3822__auto____10439
        }
      }())) {
        var G__10441 = n - 1;
        var G__10442 = cljs.core.rest.call(null, s__10438);
        n = G__10441;
        coll = G__10442;
        continue
      }else {
        return s__10438
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__10440.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__10445 = cljs.core.seq.call(null, coll);
  var lead__10446 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__10446) {
      var G__10447 = cljs.core.next.call(null, s__10445);
      var G__10448 = cljs.core.next.call(null, lead__10446);
      s__10445 = G__10447;
      lead__10446 = G__10448;
      continue
    }else {
      return s__10445
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__10454 = function(pred, coll) {
    while(true) {
      var s__10452 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____10453 = s__10452;
        if(and__3822__auto____10453) {
          return pred.call(null, cljs.core.first.call(null, s__10452))
        }else {
          return and__3822__auto____10453
        }
      }())) {
        var G__10455 = pred;
        var G__10456 = cljs.core.rest.call(null, s__10452);
        pred = G__10455;
        coll = G__10456;
        continue
      }else {
        return s__10452
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__10454.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10459 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10459) {
      var s__10460 = temp__3974__auto____10459;
      return cljs.core.concat.call(null, s__10460, cycle.call(null, s__10460))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__10465 = cljs.core.seq.call(null, c1);
      var s2__10466 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____10467 = s1__10465;
        if(and__3822__auto____10467) {
          return s2__10466
        }else {
          return and__3822__auto____10467
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__10465), cljs.core.cons.call(null, cljs.core.first.call(null, s2__10466), interleave.call(null, cljs.core.rest.call(null, s1__10465), cljs.core.rest.call(null, s2__10466))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__10469__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__10468 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__10468)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__10468), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__10468)))
        }else {
          return null
        }
      }, null)
    };
    var G__10469 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10469__delegate.call(this, c1, c2, colls)
    };
    G__10469.cljs$lang$maxFixedArity = 2;
    G__10469.cljs$lang$applyTo = function(arglist__10470) {
      var c1 = cljs.core.first(arglist__10470);
      var c2 = cljs.core.first(cljs.core.next(arglist__10470));
      var colls = cljs.core.rest(cljs.core.next(arglist__10470));
      return G__10469__delegate(c1, c2, colls)
    };
    G__10469.cljs$lang$arity$variadic = G__10469__delegate;
    return G__10469
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__10480 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____10478 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____10478) {
        var coll__10479 = temp__3971__auto____10478;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__10479), cat.call(null, cljs.core.rest.call(null, coll__10479), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__10480.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__10481__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__10481 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10481__delegate.call(this, f, coll, colls)
    };
    G__10481.cljs$lang$maxFixedArity = 2;
    G__10481.cljs$lang$applyTo = function(arglist__10482) {
      var f = cljs.core.first(arglist__10482);
      var coll = cljs.core.first(cljs.core.next(arglist__10482));
      var colls = cljs.core.rest(cljs.core.next(arglist__10482));
      return G__10481__delegate(f, coll, colls)
    };
    G__10481.cljs$lang$arity$variadic = G__10481__delegate;
    return G__10481
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10492 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10492) {
      var s__10493 = temp__3974__auto____10492;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__10493)) {
        var c__10494 = cljs.core.chunk_first.call(null, s__10493);
        var size__10495 = cljs.core.count.call(null, c__10494);
        var b__10496 = cljs.core.chunk_buffer.call(null, size__10495);
        var n__2543__auto____10497 = size__10495;
        var i__10498 = 0;
        while(true) {
          if(i__10498 < n__2543__auto____10497) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__10494, i__10498)))) {
              cljs.core.chunk_append.call(null, b__10496, cljs.core._nth.call(null, c__10494, i__10498))
            }else {
            }
            var G__10501 = i__10498 + 1;
            i__10498 = G__10501;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10496), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__10493)))
      }else {
        var f__10499 = cljs.core.first.call(null, s__10493);
        var r__10500 = cljs.core.rest.call(null, s__10493);
        if(cljs.core.truth_(pred.call(null, f__10499))) {
          return cljs.core.cons.call(null, f__10499, filter.call(null, pred, r__10500))
        }else {
          return filter.call(null, pred, r__10500)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__10504 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__10504.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__10502_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__10502_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__10508__10509 = to;
    if(G__10508__10509) {
      if(function() {
        var or__3824__auto____10510 = G__10508__10509.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____10510) {
          return or__3824__auto____10510
        }else {
          return G__10508__10509.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__10508__10509.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__10508__10509)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__10508__10509)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__10511__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__10511 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10511__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__10511.cljs$lang$maxFixedArity = 4;
    G__10511.cljs$lang$applyTo = function(arglist__10512) {
      var f = cljs.core.first(arglist__10512);
      var c1 = cljs.core.first(cljs.core.next(arglist__10512));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10512)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10512))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10512))));
      return G__10511__delegate(f, c1, c2, c3, colls)
    };
    G__10511.cljs$lang$arity$variadic = G__10511__delegate;
    return G__10511
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10519 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10519) {
        var s__10520 = temp__3974__auto____10519;
        var p__10521 = cljs.core.take.call(null, n, s__10520);
        if(n === cljs.core.count.call(null, p__10521)) {
          return cljs.core.cons.call(null, p__10521, partition.call(null, n, step, cljs.core.drop.call(null, step, s__10520)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10522 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10522) {
        var s__10523 = temp__3974__auto____10522;
        var p__10524 = cljs.core.take.call(null, n, s__10523);
        if(n === cljs.core.count.call(null, p__10524)) {
          return cljs.core.cons.call(null, p__10524, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__10523)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__10524, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__10529 = cljs.core.lookup_sentinel;
    var m__10530 = m;
    var ks__10531 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__10531) {
        var m__10532 = cljs.core._lookup.call(null, m__10530, cljs.core.first.call(null, ks__10531), sentinel__10529);
        if(sentinel__10529 === m__10532) {
          return not_found
        }else {
          var G__10533 = sentinel__10529;
          var G__10534 = m__10532;
          var G__10535 = cljs.core.next.call(null, ks__10531);
          sentinel__10529 = G__10533;
          m__10530 = G__10534;
          ks__10531 = G__10535;
          continue
        }
      }else {
        return m__10530
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__10536, v) {
  var vec__10541__10542 = p__10536;
  var k__10543 = cljs.core.nth.call(null, vec__10541__10542, 0, null);
  var ks__10544 = cljs.core.nthnext.call(null, vec__10541__10542, 1);
  if(cljs.core.truth_(ks__10544)) {
    return cljs.core.assoc.call(null, m, k__10543, assoc_in.call(null, cljs.core._lookup.call(null, m, k__10543, null), ks__10544, v))
  }else {
    return cljs.core.assoc.call(null, m, k__10543, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__10545, f, args) {
    var vec__10550__10551 = p__10545;
    var k__10552 = cljs.core.nth.call(null, vec__10550__10551, 0, null);
    var ks__10553 = cljs.core.nthnext.call(null, vec__10550__10551, 1);
    if(cljs.core.truth_(ks__10553)) {
      return cljs.core.assoc.call(null, m, k__10552, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__10552, null), ks__10553, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__10552, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__10552, null), args))
    }
  };
  var update_in = function(m, p__10545, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__10545, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__10554) {
    var m = cljs.core.first(arglist__10554);
    var p__10545 = cljs.core.first(cljs.core.next(arglist__10554));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10554)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10554)));
    return update_in__delegate(m, p__10545, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10557 = this;
  var h__2208__auto____10558 = this__10557.__hash;
  if(!(h__2208__auto____10558 == null)) {
    return h__2208__auto____10558
  }else {
    var h__2208__auto____10559 = cljs.core.hash_coll.call(null, coll);
    this__10557.__hash = h__2208__auto____10559;
    return h__2208__auto____10559
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10560 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10561 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10562 = this;
  var new_array__10563 = this__10562.array.slice();
  new_array__10563[k] = v;
  return new cljs.core.Vector(this__10562.meta, new_array__10563, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__10594 = null;
  var G__10594__2 = function(this_sym10564, k) {
    var this__10566 = this;
    var this_sym10564__10567 = this;
    var coll__10568 = this_sym10564__10567;
    return coll__10568.cljs$core$ILookup$_lookup$arity$2(coll__10568, k)
  };
  var G__10594__3 = function(this_sym10565, k, not_found) {
    var this__10566 = this;
    var this_sym10565__10569 = this;
    var coll__10570 = this_sym10565__10569;
    return coll__10570.cljs$core$ILookup$_lookup$arity$3(coll__10570, k, not_found)
  };
  G__10594 = function(this_sym10565, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10594__2.call(this, this_sym10565, k);
      case 3:
        return G__10594__3.call(this, this_sym10565, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10594
}();
cljs.core.Vector.prototype.apply = function(this_sym10555, args10556) {
  var this__10571 = this;
  return this_sym10555.call.apply(this_sym10555, [this_sym10555].concat(args10556.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10572 = this;
  var new_array__10573 = this__10572.array.slice();
  new_array__10573.push(o);
  return new cljs.core.Vector(this__10572.meta, new_array__10573, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__10574 = this;
  var this__10575 = this;
  return cljs.core.pr_str.call(null, this__10575)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__10576 = this;
  return cljs.core.ci_reduce.call(null, this__10576.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__10577 = this;
  return cljs.core.ci_reduce.call(null, this__10577.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10578 = this;
  if(this__10578.array.length > 0) {
    var vector_seq__10579 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__10578.array.length) {
          return cljs.core.cons.call(null, this__10578.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__10579.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10580 = this;
  return this__10580.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10581 = this;
  var count__10582 = this__10581.array.length;
  if(count__10582 > 0) {
    return this__10581.array[count__10582 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10583 = this;
  if(this__10583.array.length > 0) {
    var new_array__10584 = this__10583.array.slice();
    new_array__10584.pop();
    return new cljs.core.Vector(this__10583.meta, new_array__10584, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10585 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10586 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10587 = this;
  return new cljs.core.Vector(meta, this__10587.array, this__10587.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10588 = this;
  return this__10588.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10589 = this;
  if(function() {
    var and__3822__auto____10590 = 0 <= n;
    if(and__3822__auto____10590) {
      return n < this__10589.array.length
    }else {
      return and__3822__auto____10590
    }
  }()) {
    return this__10589.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10591 = this;
  if(function() {
    var and__3822__auto____10592 = 0 <= n;
    if(and__3822__auto____10592) {
      return n < this__10591.array.length
    }else {
      return and__3822__auto____10592
    }
  }()) {
    return this__10591.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10593 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__10593.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2326__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__10596 = pv.cnt;
  if(cnt__10596 < 32) {
    return 0
  }else {
    return cnt__10596 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__10602 = level;
  var ret__10603 = node;
  while(true) {
    if(ll__10602 === 0) {
      return ret__10603
    }else {
      var embed__10604 = ret__10603;
      var r__10605 = cljs.core.pv_fresh_node.call(null, edit);
      var ___10606 = cljs.core.pv_aset.call(null, r__10605, 0, embed__10604);
      var G__10607 = ll__10602 - 5;
      var G__10608 = r__10605;
      ll__10602 = G__10607;
      ret__10603 = G__10608;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__10614 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__10615 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__10614, subidx__10615, tailnode);
    return ret__10614
  }else {
    var child__10616 = cljs.core.pv_aget.call(null, parent, subidx__10615);
    if(!(child__10616 == null)) {
      var node_to_insert__10617 = push_tail.call(null, pv, level - 5, child__10616, tailnode);
      cljs.core.pv_aset.call(null, ret__10614, subidx__10615, node_to_insert__10617);
      return ret__10614
    }else {
      var node_to_insert__10618 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__10614, subidx__10615, node_to_insert__10618);
      return ret__10614
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____10622 = 0 <= i;
    if(and__3822__auto____10622) {
      return i < pv.cnt
    }else {
      return and__3822__auto____10622
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__10623 = pv.root;
      var level__10624 = pv.shift;
      while(true) {
        if(level__10624 > 0) {
          var G__10625 = cljs.core.pv_aget.call(null, node__10623, i >>> level__10624 & 31);
          var G__10626 = level__10624 - 5;
          node__10623 = G__10625;
          level__10624 = G__10626;
          continue
        }else {
          return node__10623.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__10629 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__10629, i & 31, val);
    return ret__10629
  }else {
    var subidx__10630 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__10629, subidx__10630, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__10630), i, val));
    return ret__10629
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__10636 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__10637 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__10636));
    if(function() {
      var and__3822__auto____10638 = new_child__10637 == null;
      if(and__3822__auto____10638) {
        return subidx__10636 === 0
      }else {
        return and__3822__auto____10638
      }
    }()) {
      return null
    }else {
      var ret__10639 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__10639, subidx__10636, new_child__10637);
      return ret__10639
    }
  }else {
    if(subidx__10636 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__10640 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__10640, subidx__10636, null);
        return ret__10640
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10643 = this;
  return new cljs.core.TransientVector(this__10643.cnt, this__10643.shift, cljs.core.tv_editable_root.call(null, this__10643.root), cljs.core.tv_editable_tail.call(null, this__10643.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10644 = this;
  var h__2208__auto____10645 = this__10644.__hash;
  if(!(h__2208__auto____10645 == null)) {
    return h__2208__auto____10645
  }else {
    var h__2208__auto____10646 = cljs.core.hash_coll.call(null, coll);
    this__10644.__hash = h__2208__auto____10646;
    return h__2208__auto____10646
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10647 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10648 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10649 = this;
  if(function() {
    var and__3822__auto____10650 = 0 <= k;
    if(and__3822__auto____10650) {
      return k < this__10649.cnt
    }else {
      return and__3822__auto____10650
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__10651 = this__10649.tail.slice();
      new_tail__10651[k & 31] = v;
      return new cljs.core.PersistentVector(this__10649.meta, this__10649.cnt, this__10649.shift, this__10649.root, new_tail__10651, null)
    }else {
      return new cljs.core.PersistentVector(this__10649.meta, this__10649.cnt, this__10649.shift, cljs.core.do_assoc.call(null, coll, this__10649.shift, this__10649.root, k, v), this__10649.tail, null)
    }
  }else {
    if(k === this__10649.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__10649.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__10699 = null;
  var G__10699__2 = function(this_sym10652, k) {
    var this__10654 = this;
    var this_sym10652__10655 = this;
    var coll__10656 = this_sym10652__10655;
    return coll__10656.cljs$core$ILookup$_lookup$arity$2(coll__10656, k)
  };
  var G__10699__3 = function(this_sym10653, k, not_found) {
    var this__10654 = this;
    var this_sym10653__10657 = this;
    var coll__10658 = this_sym10653__10657;
    return coll__10658.cljs$core$ILookup$_lookup$arity$3(coll__10658, k, not_found)
  };
  G__10699 = function(this_sym10653, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10699__2.call(this, this_sym10653, k);
      case 3:
        return G__10699__3.call(this, this_sym10653, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10699
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym10641, args10642) {
  var this__10659 = this;
  return this_sym10641.call.apply(this_sym10641, [this_sym10641].concat(args10642.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__10660 = this;
  var step_init__10661 = [0, init];
  var i__10662 = 0;
  while(true) {
    if(i__10662 < this__10660.cnt) {
      var arr__10663 = cljs.core.array_for.call(null, v, i__10662);
      var len__10664 = arr__10663.length;
      var init__10668 = function() {
        var j__10665 = 0;
        var init__10666 = step_init__10661[1];
        while(true) {
          if(j__10665 < len__10664) {
            var init__10667 = f.call(null, init__10666, j__10665 + i__10662, arr__10663[j__10665]);
            if(cljs.core.reduced_QMARK_.call(null, init__10667)) {
              return init__10667
            }else {
              var G__10700 = j__10665 + 1;
              var G__10701 = init__10667;
              j__10665 = G__10700;
              init__10666 = G__10701;
              continue
            }
          }else {
            step_init__10661[0] = len__10664;
            step_init__10661[1] = init__10666;
            return init__10666
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10668)) {
        return cljs.core.deref.call(null, init__10668)
      }else {
        var G__10702 = i__10662 + step_init__10661[0];
        i__10662 = G__10702;
        continue
      }
    }else {
      return step_init__10661[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10669 = this;
  if(this__10669.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__10670 = this__10669.tail.slice();
    new_tail__10670.push(o);
    return new cljs.core.PersistentVector(this__10669.meta, this__10669.cnt + 1, this__10669.shift, this__10669.root, new_tail__10670, null)
  }else {
    var root_overflow_QMARK___10671 = this__10669.cnt >>> 5 > 1 << this__10669.shift;
    var new_shift__10672 = root_overflow_QMARK___10671 ? this__10669.shift + 5 : this__10669.shift;
    var new_root__10674 = root_overflow_QMARK___10671 ? function() {
      var n_r__10673 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__10673, 0, this__10669.root);
      cljs.core.pv_aset.call(null, n_r__10673, 1, cljs.core.new_path.call(null, null, this__10669.shift, new cljs.core.VectorNode(null, this__10669.tail)));
      return n_r__10673
    }() : cljs.core.push_tail.call(null, coll, this__10669.shift, this__10669.root, new cljs.core.VectorNode(null, this__10669.tail));
    return new cljs.core.PersistentVector(this__10669.meta, this__10669.cnt + 1, new_shift__10672, new_root__10674, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10675 = this;
  if(this__10675.cnt > 0) {
    return new cljs.core.RSeq(coll, this__10675.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__10676 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__10677 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__10678 = this;
  var this__10679 = this;
  return cljs.core.pr_str.call(null, this__10679)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__10680 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__10681 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10682 = this;
  if(this__10682.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10683 = this;
  return this__10683.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10684 = this;
  if(this__10684.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__10684.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10685 = this;
  if(this__10685.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__10685.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10685.meta)
    }else {
      if(1 < this__10685.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__10685.meta, this__10685.cnt - 1, this__10685.shift, this__10685.root, this__10685.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__10686 = cljs.core.array_for.call(null, coll, this__10685.cnt - 2);
          var nr__10687 = cljs.core.pop_tail.call(null, coll, this__10685.shift, this__10685.root);
          var new_root__10688 = nr__10687 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__10687;
          var cnt_1__10689 = this__10685.cnt - 1;
          if(function() {
            var and__3822__auto____10690 = 5 < this__10685.shift;
            if(and__3822__auto____10690) {
              return cljs.core.pv_aget.call(null, new_root__10688, 1) == null
            }else {
              return and__3822__auto____10690
            }
          }()) {
            return new cljs.core.PersistentVector(this__10685.meta, cnt_1__10689, this__10685.shift - 5, cljs.core.pv_aget.call(null, new_root__10688, 0), new_tail__10686, null)
          }else {
            return new cljs.core.PersistentVector(this__10685.meta, cnt_1__10689, this__10685.shift, new_root__10688, new_tail__10686, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10691 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10692 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10693 = this;
  return new cljs.core.PersistentVector(meta, this__10693.cnt, this__10693.shift, this__10693.root, this__10693.tail, this__10693.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10694 = this;
  return this__10694.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10695 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10696 = this;
  if(function() {
    var and__3822__auto____10697 = 0 <= n;
    if(and__3822__auto____10697) {
      return n < this__10696.cnt
    }else {
      return and__3822__auto____10697
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10698 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10698.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__10703 = xs.length;
  var xs__10704 = no_clone === true ? xs : xs.slice();
  if(l__10703 < 32) {
    return new cljs.core.PersistentVector(null, l__10703, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__10704, null)
  }else {
    var node__10705 = xs__10704.slice(0, 32);
    var v__10706 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__10705, null);
    var i__10707 = 32;
    var out__10708 = cljs.core._as_transient.call(null, v__10706);
    while(true) {
      if(i__10707 < l__10703) {
        var G__10709 = i__10707 + 1;
        var G__10710 = cljs.core.conj_BANG_.call(null, out__10708, xs__10704[i__10707]);
        i__10707 = G__10709;
        out__10708 = G__10710;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10708)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__10711) {
    var args = cljs.core.seq(arglist__10711);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10712 = this;
  if(this__10712.off + 1 < this__10712.node.length) {
    var s__10713 = cljs.core.chunked_seq.call(null, this__10712.vec, this__10712.node, this__10712.i, this__10712.off + 1);
    if(s__10713 == null) {
      return null
    }else {
      return s__10713
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10714 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10715 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10716 = this;
  return this__10716.node[this__10716.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10717 = this;
  if(this__10717.off + 1 < this__10717.node.length) {
    var s__10718 = cljs.core.chunked_seq.call(null, this__10717.vec, this__10717.node, this__10717.i, this__10717.off + 1);
    if(s__10718 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__10718
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__10719 = this;
  var l__10720 = this__10719.node.length;
  var s__10721 = this__10719.i + l__10720 < cljs.core._count.call(null, this__10719.vec) ? cljs.core.chunked_seq.call(null, this__10719.vec, this__10719.i + l__10720, 0) : null;
  if(s__10721 == null) {
    return null
  }else {
    return s__10721
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10722 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__10723 = this;
  return cljs.core.chunked_seq.call(null, this__10723.vec, this__10723.node, this__10723.i, this__10723.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__10724 = this;
  return this__10724.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10725 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10725.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__10726 = this;
  return cljs.core.array_chunk.call(null, this__10726.node, this__10726.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__10727 = this;
  var l__10728 = this__10727.node.length;
  var s__10729 = this__10727.i + l__10728 < cljs.core._count.call(null, this__10727.vec) ? cljs.core.chunked_seq.call(null, this__10727.vec, this__10727.i + l__10728, 0) : null;
  if(s__10729 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__10729
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10732 = this;
  var h__2208__auto____10733 = this__10732.__hash;
  if(!(h__2208__auto____10733 == null)) {
    return h__2208__auto____10733
  }else {
    var h__2208__auto____10734 = cljs.core.hash_coll.call(null, coll);
    this__10732.__hash = h__2208__auto____10734;
    return h__2208__auto____10734
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10735 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10736 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__10737 = this;
  var v_pos__10738 = this__10737.start + key;
  return new cljs.core.Subvec(this__10737.meta, cljs.core._assoc.call(null, this__10737.v, v_pos__10738, val), this__10737.start, this__10737.end > v_pos__10738 + 1 ? this__10737.end : v_pos__10738 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__10764 = null;
  var G__10764__2 = function(this_sym10739, k) {
    var this__10741 = this;
    var this_sym10739__10742 = this;
    var coll__10743 = this_sym10739__10742;
    return coll__10743.cljs$core$ILookup$_lookup$arity$2(coll__10743, k)
  };
  var G__10764__3 = function(this_sym10740, k, not_found) {
    var this__10741 = this;
    var this_sym10740__10744 = this;
    var coll__10745 = this_sym10740__10744;
    return coll__10745.cljs$core$ILookup$_lookup$arity$3(coll__10745, k, not_found)
  };
  G__10764 = function(this_sym10740, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10764__2.call(this, this_sym10740, k);
      case 3:
        return G__10764__3.call(this, this_sym10740, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10764
}();
cljs.core.Subvec.prototype.apply = function(this_sym10730, args10731) {
  var this__10746 = this;
  return this_sym10730.call.apply(this_sym10730, [this_sym10730].concat(args10731.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10747 = this;
  return new cljs.core.Subvec(this__10747.meta, cljs.core._assoc_n.call(null, this__10747.v, this__10747.end, o), this__10747.start, this__10747.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__10748 = this;
  var this__10749 = this;
  return cljs.core.pr_str.call(null, this__10749)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__10750 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__10751 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10752 = this;
  var subvec_seq__10753 = function subvec_seq(i) {
    if(i === this__10752.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__10752.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__10753.call(null, this__10752.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10754 = this;
  return this__10754.end - this__10754.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10755 = this;
  return cljs.core._nth.call(null, this__10755.v, this__10755.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10756 = this;
  if(this__10756.start === this__10756.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__10756.meta, this__10756.v, this__10756.start, this__10756.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10757 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10758 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10759 = this;
  return new cljs.core.Subvec(meta, this__10759.v, this__10759.start, this__10759.end, this__10759.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10760 = this;
  return this__10760.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10761 = this;
  return cljs.core._nth.call(null, this__10761.v, this__10761.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10762 = this;
  return cljs.core._nth.call(null, this__10762.v, this__10762.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10763 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__10763.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__10766 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__10766, 0, tl.length);
  return ret__10766
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__10770 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__10771 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__10770, subidx__10771, level === 5 ? tail_node : function() {
    var child__10772 = cljs.core.pv_aget.call(null, ret__10770, subidx__10771);
    if(!(child__10772 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__10772, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__10770
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__10777 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__10778 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__10779 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__10777, subidx__10778));
    if(function() {
      var and__3822__auto____10780 = new_child__10779 == null;
      if(and__3822__auto____10780) {
        return subidx__10778 === 0
      }else {
        return and__3822__auto____10780
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__10777, subidx__10778, new_child__10779);
      return node__10777
    }
  }else {
    if(subidx__10778 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__10777, subidx__10778, null);
        return node__10777
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____10785 = 0 <= i;
    if(and__3822__auto____10785) {
      return i < tv.cnt
    }else {
      return and__3822__auto____10785
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__10786 = tv.root;
      var node__10787 = root__10786;
      var level__10788 = tv.shift;
      while(true) {
        if(level__10788 > 0) {
          var G__10789 = cljs.core.tv_ensure_editable.call(null, root__10786.edit, cljs.core.pv_aget.call(null, node__10787, i >>> level__10788 & 31));
          var G__10790 = level__10788 - 5;
          node__10787 = G__10789;
          level__10788 = G__10790;
          continue
        }else {
          return node__10787.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10830 = null;
  var G__10830__2 = function(this_sym10793, k) {
    var this__10795 = this;
    var this_sym10793__10796 = this;
    var coll__10797 = this_sym10793__10796;
    return coll__10797.cljs$core$ILookup$_lookup$arity$2(coll__10797, k)
  };
  var G__10830__3 = function(this_sym10794, k, not_found) {
    var this__10795 = this;
    var this_sym10794__10798 = this;
    var coll__10799 = this_sym10794__10798;
    return coll__10799.cljs$core$ILookup$_lookup$arity$3(coll__10799, k, not_found)
  };
  G__10830 = function(this_sym10794, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10830__2.call(this, this_sym10794, k);
      case 3:
        return G__10830__3.call(this, this_sym10794, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10830
}();
cljs.core.TransientVector.prototype.apply = function(this_sym10791, args10792) {
  var this__10800 = this;
  return this_sym10791.call.apply(this_sym10791, [this_sym10791].concat(args10792.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10801 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10802 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10803 = this;
  if(this__10803.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10804 = this;
  if(function() {
    var and__3822__auto____10805 = 0 <= n;
    if(and__3822__auto____10805) {
      return n < this__10804.cnt
    }else {
      return and__3822__auto____10805
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10806 = this;
  if(this__10806.root.edit) {
    return this__10806.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__10807 = this;
  if(this__10807.root.edit) {
    if(function() {
      var and__3822__auto____10808 = 0 <= n;
      if(and__3822__auto____10808) {
        return n < this__10807.cnt
      }else {
        return and__3822__auto____10808
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__10807.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__10813 = function go(level, node) {
          var node__10811 = cljs.core.tv_ensure_editable.call(null, this__10807.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__10811, n & 31, val);
            return node__10811
          }else {
            var subidx__10812 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__10811, subidx__10812, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__10811, subidx__10812)));
            return node__10811
          }
        }.call(null, this__10807.shift, this__10807.root);
        this__10807.root = new_root__10813;
        return tcoll
      }
    }else {
      if(n === this__10807.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__10807.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__10814 = this;
  if(this__10814.root.edit) {
    if(this__10814.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__10814.cnt) {
        this__10814.cnt = 0;
        return tcoll
      }else {
        if((this__10814.cnt - 1 & 31) > 0) {
          this__10814.cnt = this__10814.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__10815 = cljs.core.editable_array_for.call(null, tcoll, this__10814.cnt - 2);
            var new_root__10817 = function() {
              var nr__10816 = cljs.core.tv_pop_tail.call(null, tcoll, this__10814.shift, this__10814.root);
              if(!(nr__10816 == null)) {
                return nr__10816
              }else {
                return new cljs.core.VectorNode(this__10814.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____10818 = 5 < this__10814.shift;
              if(and__3822__auto____10818) {
                return cljs.core.pv_aget.call(null, new_root__10817, 1) == null
              }else {
                return and__3822__auto____10818
              }
            }()) {
              var new_root__10819 = cljs.core.tv_ensure_editable.call(null, this__10814.root.edit, cljs.core.pv_aget.call(null, new_root__10817, 0));
              this__10814.root = new_root__10819;
              this__10814.shift = this__10814.shift - 5;
              this__10814.cnt = this__10814.cnt - 1;
              this__10814.tail = new_tail__10815;
              return tcoll
            }else {
              this__10814.root = new_root__10817;
              this__10814.cnt = this__10814.cnt - 1;
              this__10814.tail = new_tail__10815;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10820 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10821 = this;
  if(this__10821.root.edit) {
    if(this__10821.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__10821.tail[this__10821.cnt & 31] = o;
      this__10821.cnt = this__10821.cnt + 1;
      return tcoll
    }else {
      var tail_node__10822 = new cljs.core.VectorNode(this__10821.root.edit, this__10821.tail);
      var new_tail__10823 = cljs.core.make_array.call(null, 32);
      new_tail__10823[0] = o;
      this__10821.tail = new_tail__10823;
      if(this__10821.cnt >>> 5 > 1 << this__10821.shift) {
        var new_root_array__10824 = cljs.core.make_array.call(null, 32);
        var new_shift__10825 = this__10821.shift + 5;
        new_root_array__10824[0] = this__10821.root;
        new_root_array__10824[1] = cljs.core.new_path.call(null, this__10821.root.edit, this__10821.shift, tail_node__10822);
        this__10821.root = new cljs.core.VectorNode(this__10821.root.edit, new_root_array__10824);
        this__10821.shift = new_shift__10825;
        this__10821.cnt = this__10821.cnt + 1;
        return tcoll
      }else {
        var new_root__10826 = cljs.core.tv_push_tail.call(null, tcoll, this__10821.shift, this__10821.root, tail_node__10822);
        this__10821.root = new_root__10826;
        this__10821.cnt = this__10821.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10827 = this;
  if(this__10827.root.edit) {
    this__10827.root.edit = null;
    var len__10828 = this__10827.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__10829 = cljs.core.make_array.call(null, len__10828);
    cljs.core.array_copy.call(null, this__10827.tail, 0, trimmed_tail__10829, 0, len__10828);
    return new cljs.core.PersistentVector(null, this__10827.cnt, this__10827.shift, this__10827.root, trimmed_tail__10829, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10831 = this;
  var h__2208__auto____10832 = this__10831.__hash;
  if(!(h__2208__auto____10832 == null)) {
    return h__2208__auto____10832
  }else {
    var h__2208__auto____10833 = cljs.core.hash_coll.call(null, coll);
    this__10831.__hash = h__2208__auto____10833;
    return h__2208__auto____10833
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10834 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__10835 = this;
  var this__10836 = this;
  return cljs.core.pr_str.call(null, this__10836)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10837 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10838 = this;
  return cljs.core._first.call(null, this__10838.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10839 = this;
  var temp__3971__auto____10840 = cljs.core.next.call(null, this__10839.front);
  if(temp__3971__auto____10840) {
    var f1__10841 = temp__3971__auto____10840;
    return new cljs.core.PersistentQueueSeq(this__10839.meta, f1__10841, this__10839.rear, null)
  }else {
    if(this__10839.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__10839.meta, this__10839.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10842 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10843 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__10843.front, this__10843.rear, this__10843.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10844 = this;
  return this__10844.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10845 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10845.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10846 = this;
  var h__2208__auto____10847 = this__10846.__hash;
  if(!(h__2208__auto____10847 == null)) {
    return h__2208__auto____10847
  }else {
    var h__2208__auto____10848 = cljs.core.hash_coll.call(null, coll);
    this__10846.__hash = h__2208__auto____10848;
    return h__2208__auto____10848
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10849 = this;
  if(cljs.core.truth_(this__10849.front)) {
    return new cljs.core.PersistentQueue(this__10849.meta, this__10849.count + 1, this__10849.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____10850 = this__10849.rear;
      if(cljs.core.truth_(or__3824__auto____10850)) {
        return or__3824__auto____10850
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__10849.meta, this__10849.count + 1, cljs.core.conj.call(null, this__10849.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__10851 = this;
  var this__10852 = this;
  return cljs.core.pr_str.call(null, this__10852)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10853 = this;
  var rear__10854 = cljs.core.seq.call(null, this__10853.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____10855 = this__10853.front;
    if(cljs.core.truth_(or__3824__auto____10855)) {
      return or__3824__auto____10855
    }else {
      return rear__10854
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__10853.front, cljs.core.seq.call(null, rear__10854), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10856 = this;
  return this__10856.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10857 = this;
  return cljs.core._first.call(null, this__10857.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10858 = this;
  if(cljs.core.truth_(this__10858.front)) {
    var temp__3971__auto____10859 = cljs.core.next.call(null, this__10858.front);
    if(temp__3971__auto____10859) {
      var f1__10860 = temp__3971__auto____10859;
      return new cljs.core.PersistentQueue(this__10858.meta, this__10858.count - 1, f1__10860, this__10858.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__10858.meta, this__10858.count - 1, cljs.core.seq.call(null, this__10858.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10861 = this;
  return cljs.core.first.call(null, this__10861.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10862 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10863 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10864 = this;
  return new cljs.core.PersistentQueue(meta, this__10864.count, this__10864.front, this__10864.rear, this__10864.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10865 = this;
  return this__10865.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10866 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10867 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__10870 = array.length;
  var i__10871 = 0;
  while(true) {
    if(i__10871 < len__10870) {
      if(k === array[i__10871]) {
        return i__10871
      }else {
        var G__10872 = i__10871 + incr;
        i__10871 = G__10872;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__10875 = cljs.core.hash.call(null, a);
  var b__10876 = cljs.core.hash.call(null, b);
  if(a__10875 < b__10876) {
    return-1
  }else {
    if(a__10875 > b__10876) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__10884 = m.keys;
  var len__10885 = ks__10884.length;
  var so__10886 = m.strobj;
  var out__10887 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__10888 = 0;
  var out__10889 = cljs.core.transient$.call(null, out__10887);
  while(true) {
    if(i__10888 < len__10885) {
      var k__10890 = ks__10884[i__10888];
      var G__10891 = i__10888 + 1;
      var G__10892 = cljs.core.assoc_BANG_.call(null, out__10889, k__10890, so__10886[k__10890]);
      i__10888 = G__10891;
      out__10889 = G__10892;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__10889, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__10898 = {};
  var l__10899 = ks.length;
  var i__10900 = 0;
  while(true) {
    if(i__10900 < l__10899) {
      var k__10901 = ks[i__10900];
      new_obj__10898[k__10901] = obj[k__10901];
      var G__10902 = i__10900 + 1;
      i__10900 = G__10902;
      continue
    }else {
    }
    break
  }
  return new_obj__10898
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10905 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10906 = this;
  var h__2208__auto____10907 = this__10906.__hash;
  if(!(h__2208__auto____10907 == null)) {
    return h__2208__auto____10907
  }else {
    var h__2208__auto____10908 = cljs.core.hash_imap.call(null, coll);
    this__10906.__hash = h__2208__auto____10908;
    return h__2208__auto____10908
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10909 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10910 = this;
  if(function() {
    var and__3822__auto____10911 = goog.isString(k);
    if(and__3822__auto____10911) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10910.keys) == null)
    }else {
      return and__3822__auto____10911
    }
  }()) {
    return this__10910.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10912 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____10913 = this__10912.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____10913) {
        return or__3824__auto____10913
      }else {
        return this__10912.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__10912.keys) == null)) {
        var new_strobj__10914 = cljs.core.obj_clone.call(null, this__10912.strobj, this__10912.keys);
        new_strobj__10914[k] = v;
        return new cljs.core.ObjMap(this__10912.meta, this__10912.keys, new_strobj__10914, this__10912.update_count + 1, null)
      }else {
        var new_strobj__10915 = cljs.core.obj_clone.call(null, this__10912.strobj, this__10912.keys);
        var new_keys__10916 = this__10912.keys.slice();
        new_strobj__10915[k] = v;
        new_keys__10916.push(k);
        return new cljs.core.ObjMap(this__10912.meta, new_keys__10916, new_strobj__10915, this__10912.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10917 = this;
  if(function() {
    var and__3822__auto____10918 = goog.isString(k);
    if(and__3822__auto____10918) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10917.keys) == null)
    }else {
      return and__3822__auto____10918
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10940 = null;
  var G__10940__2 = function(this_sym10919, k) {
    var this__10921 = this;
    var this_sym10919__10922 = this;
    var coll__10923 = this_sym10919__10922;
    return coll__10923.cljs$core$ILookup$_lookup$arity$2(coll__10923, k)
  };
  var G__10940__3 = function(this_sym10920, k, not_found) {
    var this__10921 = this;
    var this_sym10920__10924 = this;
    var coll__10925 = this_sym10920__10924;
    return coll__10925.cljs$core$ILookup$_lookup$arity$3(coll__10925, k, not_found)
  };
  G__10940 = function(this_sym10920, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10940__2.call(this, this_sym10920, k);
      case 3:
        return G__10940__3.call(this, this_sym10920, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10940
}();
cljs.core.ObjMap.prototype.apply = function(this_sym10903, args10904) {
  var this__10926 = this;
  return this_sym10903.call.apply(this_sym10903, [this_sym10903].concat(args10904.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10927 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__10928 = this;
  var this__10929 = this;
  return cljs.core.pr_str.call(null, this__10929)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10930 = this;
  if(this__10930.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__10893_SHARP_) {
      return cljs.core.vector.call(null, p1__10893_SHARP_, this__10930.strobj[p1__10893_SHARP_])
    }, this__10930.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10931 = this;
  return this__10931.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10932 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10933 = this;
  return new cljs.core.ObjMap(meta, this__10933.keys, this__10933.strobj, this__10933.update_count, this__10933.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10934 = this;
  return this__10934.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10935 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__10935.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10936 = this;
  if(function() {
    var and__3822__auto____10937 = goog.isString(k);
    if(and__3822__auto____10937) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10936.keys) == null)
    }else {
      return and__3822__auto____10937
    }
  }()) {
    var new_keys__10938 = this__10936.keys.slice();
    var new_strobj__10939 = cljs.core.obj_clone.call(null, this__10936.strobj, this__10936.keys);
    new_keys__10938.splice(cljs.core.scan_array.call(null, 1, k, new_keys__10938), 1);
    cljs.core.js_delete.call(null, new_strobj__10939, k);
    return new cljs.core.ObjMap(this__10936.meta, new_keys__10938, new_strobj__10939, this__10936.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10944 = this;
  var h__2208__auto____10945 = this__10944.__hash;
  if(!(h__2208__auto____10945 == null)) {
    return h__2208__auto____10945
  }else {
    var h__2208__auto____10946 = cljs.core.hash_imap.call(null, coll);
    this__10944.__hash = h__2208__auto____10946;
    return h__2208__auto____10946
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10947 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10948 = this;
  var bucket__10949 = this__10948.hashobj[cljs.core.hash.call(null, k)];
  var i__10950 = cljs.core.truth_(bucket__10949) ? cljs.core.scan_array.call(null, 2, k, bucket__10949) : null;
  if(cljs.core.truth_(i__10950)) {
    return bucket__10949[i__10950 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10951 = this;
  var h__10952 = cljs.core.hash.call(null, k);
  var bucket__10953 = this__10951.hashobj[h__10952];
  if(cljs.core.truth_(bucket__10953)) {
    var new_bucket__10954 = bucket__10953.slice();
    var new_hashobj__10955 = goog.object.clone(this__10951.hashobj);
    new_hashobj__10955[h__10952] = new_bucket__10954;
    var temp__3971__auto____10956 = cljs.core.scan_array.call(null, 2, k, new_bucket__10954);
    if(cljs.core.truth_(temp__3971__auto____10956)) {
      var i__10957 = temp__3971__auto____10956;
      new_bucket__10954[i__10957 + 1] = v;
      return new cljs.core.HashMap(this__10951.meta, this__10951.count, new_hashobj__10955, null)
    }else {
      new_bucket__10954.push(k, v);
      return new cljs.core.HashMap(this__10951.meta, this__10951.count + 1, new_hashobj__10955, null)
    }
  }else {
    var new_hashobj__10958 = goog.object.clone(this__10951.hashobj);
    new_hashobj__10958[h__10952] = [k, v];
    return new cljs.core.HashMap(this__10951.meta, this__10951.count + 1, new_hashobj__10958, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10959 = this;
  var bucket__10960 = this__10959.hashobj[cljs.core.hash.call(null, k)];
  var i__10961 = cljs.core.truth_(bucket__10960) ? cljs.core.scan_array.call(null, 2, k, bucket__10960) : null;
  if(cljs.core.truth_(i__10961)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__10986 = null;
  var G__10986__2 = function(this_sym10962, k) {
    var this__10964 = this;
    var this_sym10962__10965 = this;
    var coll__10966 = this_sym10962__10965;
    return coll__10966.cljs$core$ILookup$_lookup$arity$2(coll__10966, k)
  };
  var G__10986__3 = function(this_sym10963, k, not_found) {
    var this__10964 = this;
    var this_sym10963__10967 = this;
    var coll__10968 = this_sym10963__10967;
    return coll__10968.cljs$core$ILookup$_lookup$arity$3(coll__10968, k, not_found)
  };
  G__10986 = function(this_sym10963, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10986__2.call(this, this_sym10963, k);
      case 3:
        return G__10986__3.call(this, this_sym10963, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10986
}();
cljs.core.HashMap.prototype.apply = function(this_sym10942, args10943) {
  var this__10969 = this;
  return this_sym10942.call.apply(this_sym10942, [this_sym10942].concat(args10943.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10970 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__10971 = this;
  var this__10972 = this;
  return cljs.core.pr_str.call(null, this__10972)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10973 = this;
  if(this__10973.count > 0) {
    var hashes__10974 = cljs.core.js_keys.call(null, this__10973.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__10941_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__10973.hashobj[p1__10941_SHARP_]))
    }, hashes__10974)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10975 = this;
  return this__10975.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10976 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10977 = this;
  return new cljs.core.HashMap(meta, this__10977.count, this__10977.hashobj, this__10977.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10978 = this;
  return this__10978.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10979 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__10979.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10980 = this;
  var h__10981 = cljs.core.hash.call(null, k);
  var bucket__10982 = this__10980.hashobj[h__10981];
  var i__10983 = cljs.core.truth_(bucket__10982) ? cljs.core.scan_array.call(null, 2, k, bucket__10982) : null;
  if(cljs.core.not.call(null, i__10983)) {
    return coll
  }else {
    var new_hashobj__10984 = goog.object.clone(this__10980.hashobj);
    if(3 > bucket__10982.length) {
      cljs.core.js_delete.call(null, new_hashobj__10984, h__10981)
    }else {
      var new_bucket__10985 = bucket__10982.slice();
      new_bucket__10985.splice(i__10983, 2);
      new_hashobj__10984[h__10981] = new_bucket__10985
    }
    return new cljs.core.HashMap(this__10980.meta, this__10980.count - 1, new_hashobj__10984, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__10987 = ks.length;
  var i__10988 = 0;
  var out__10989 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__10988 < len__10987) {
      var G__10990 = i__10988 + 1;
      var G__10991 = cljs.core.assoc.call(null, out__10989, ks[i__10988], vs[i__10988]);
      i__10988 = G__10990;
      out__10989 = G__10991;
      continue
    }else {
      return out__10989
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__10995 = m.arr;
  var len__10996 = arr__10995.length;
  var i__10997 = 0;
  while(true) {
    if(len__10996 <= i__10997) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__10995[i__10997], k)) {
        return i__10997
      }else {
        if("\ufdd0'else") {
          var G__10998 = i__10997 + 2;
          i__10997 = G__10998;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11001 = this;
  return new cljs.core.TransientArrayMap({}, this__11001.arr.length, this__11001.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11002 = this;
  var h__2208__auto____11003 = this__11002.__hash;
  if(!(h__2208__auto____11003 == null)) {
    return h__2208__auto____11003
  }else {
    var h__2208__auto____11004 = cljs.core.hash_imap.call(null, coll);
    this__11002.__hash = h__2208__auto____11004;
    return h__2208__auto____11004
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11005 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11006 = this;
  var idx__11007 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__11007 === -1) {
    return not_found
  }else {
    return this__11006.arr[idx__11007 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11008 = this;
  var idx__11009 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__11009 === -1) {
    if(this__11008.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__11008.meta, this__11008.cnt + 1, function() {
        var G__11010__11011 = this__11008.arr.slice();
        G__11010__11011.push(k);
        G__11010__11011.push(v);
        return G__11010__11011
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__11008.arr[idx__11009 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__11008.meta, this__11008.cnt, function() {
          var G__11012__11013 = this__11008.arr.slice();
          G__11012__11013[idx__11009 + 1] = v;
          return G__11012__11013
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11014 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__11046 = null;
  var G__11046__2 = function(this_sym11015, k) {
    var this__11017 = this;
    var this_sym11015__11018 = this;
    var coll__11019 = this_sym11015__11018;
    return coll__11019.cljs$core$ILookup$_lookup$arity$2(coll__11019, k)
  };
  var G__11046__3 = function(this_sym11016, k, not_found) {
    var this__11017 = this;
    var this_sym11016__11020 = this;
    var coll__11021 = this_sym11016__11020;
    return coll__11021.cljs$core$ILookup$_lookup$arity$3(coll__11021, k, not_found)
  };
  G__11046 = function(this_sym11016, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11046__2.call(this, this_sym11016, k);
      case 3:
        return G__11046__3.call(this, this_sym11016, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11046
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym10999, args11000) {
  var this__11022 = this;
  return this_sym10999.call.apply(this_sym10999, [this_sym10999].concat(args11000.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__11023 = this;
  var len__11024 = this__11023.arr.length;
  var i__11025 = 0;
  var init__11026 = init;
  while(true) {
    if(i__11025 < len__11024) {
      var init__11027 = f.call(null, init__11026, this__11023.arr[i__11025], this__11023.arr[i__11025 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__11027)) {
        return cljs.core.deref.call(null, init__11027)
      }else {
        var G__11047 = i__11025 + 2;
        var G__11048 = init__11027;
        i__11025 = G__11047;
        init__11026 = G__11048;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11028 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__11029 = this;
  var this__11030 = this;
  return cljs.core.pr_str.call(null, this__11030)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11031 = this;
  if(this__11031.cnt > 0) {
    var len__11032 = this__11031.arr.length;
    var array_map_seq__11033 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__11032) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__11031.arr[i], this__11031.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__11033.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11034 = this;
  return this__11034.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11035 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11036 = this;
  return new cljs.core.PersistentArrayMap(meta, this__11036.cnt, this__11036.arr, this__11036.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11037 = this;
  return this__11037.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11038 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__11038.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11039 = this;
  var idx__11040 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__11040 >= 0) {
    var len__11041 = this__11039.arr.length;
    var new_len__11042 = len__11041 - 2;
    if(new_len__11042 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__11043 = cljs.core.make_array.call(null, new_len__11042);
      var s__11044 = 0;
      var d__11045 = 0;
      while(true) {
        if(s__11044 >= len__11041) {
          return new cljs.core.PersistentArrayMap(this__11039.meta, this__11039.cnt - 1, new_arr__11043, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__11039.arr[s__11044])) {
            var G__11049 = s__11044 + 2;
            var G__11050 = d__11045;
            s__11044 = G__11049;
            d__11045 = G__11050;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__11043[d__11045] = this__11039.arr[s__11044];
              new_arr__11043[d__11045 + 1] = this__11039.arr[s__11044 + 1];
              var G__11051 = s__11044 + 2;
              var G__11052 = d__11045 + 2;
              s__11044 = G__11051;
              d__11045 = G__11052;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__11053 = cljs.core.count.call(null, ks);
  var i__11054 = 0;
  var out__11055 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__11054 < len__11053) {
      var G__11056 = i__11054 + 1;
      var G__11057 = cljs.core.assoc_BANG_.call(null, out__11055, ks[i__11054], vs[i__11054]);
      i__11054 = G__11056;
      out__11055 = G__11057;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__11055)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__11058 = this;
  if(cljs.core.truth_(this__11058.editable_QMARK_)) {
    var idx__11059 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__11059 >= 0) {
      this__11058.arr[idx__11059] = this__11058.arr[this__11058.len - 2];
      this__11058.arr[idx__11059 + 1] = this__11058.arr[this__11058.len - 1];
      var G__11060__11061 = this__11058.arr;
      G__11060__11061.pop();
      G__11060__11061.pop();
      G__11060__11061;
      this__11058.len = this__11058.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__11062 = this;
  if(cljs.core.truth_(this__11062.editable_QMARK_)) {
    var idx__11063 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__11063 === -1) {
      if(this__11062.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__11062.len = this__11062.len + 2;
        this__11062.arr.push(key);
        this__11062.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__11062.len, this__11062.arr), key, val)
      }
    }else {
      if(val === this__11062.arr[idx__11063 + 1]) {
        return tcoll
      }else {
        this__11062.arr[idx__11063 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__11064 = this;
  if(cljs.core.truth_(this__11064.editable_QMARK_)) {
    if(function() {
      var G__11065__11066 = o;
      if(G__11065__11066) {
        if(function() {
          var or__3824__auto____11067 = G__11065__11066.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____11067) {
            return or__3824__auto____11067
          }else {
            return G__11065__11066.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__11065__11066.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__11065__11066)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__11065__11066)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__11068 = cljs.core.seq.call(null, o);
      var tcoll__11069 = tcoll;
      while(true) {
        var temp__3971__auto____11070 = cljs.core.first.call(null, es__11068);
        if(cljs.core.truth_(temp__3971__auto____11070)) {
          var e__11071 = temp__3971__auto____11070;
          var G__11077 = cljs.core.next.call(null, es__11068);
          var G__11078 = tcoll__11069.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__11069, cljs.core.key.call(null, e__11071), cljs.core.val.call(null, e__11071));
          es__11068 = G__11077;
          tcoll__11069 = G__11078;
          continue
        }else {
          return tcoll__11069
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__11072 = this;
  if(cljs.core.truth_(this__11072.editable_QMARK_)) {
    this__11072.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__11072.len, 2), this__11072.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__11073 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__11074 = this;
  if(cljs.core.truth_(this__11074.editable_QMARK_)) {
    var idx__11075 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__11075 === -1) {
      return not_found
    }else {
      return this__11074.arr[idx__11075 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__11076 = this;
  if(cljs.core.truth_(this__11076.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__11076.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__11081 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__11082 = 0;
  while(true) {
    if(i__11082 < len) {
      var G__11083 = cljs.core.assoc_BANG_.call(null, out__11081, arr[i__11082], arr[i__11082 + 1]);
      var G__11084 = i__11082 + 2;
      out__11081 = G__11083;
      i__11082 = G__11084;
      continue
    }else {
      return out__11081
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2326__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__11089__11090 = arr.slice();
    G__11089__11090[i] = a;
    return G__11089__11090
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__11091__11092 = arr.slice();
    G__11091__11092[i] = a;
    G__11091__11092[j] = b;
    return G__11091__11092
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__11094 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__11094, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__11094, 2 * i, new_arr__11094.length - 2 * i);
  return new_arr__11094
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__11097 = inode.ensure_editable(edit);
    editable__11097.arr[i] = a;
    return editable__11097
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__11098 = inode.ensure_editable(edit);
    editable__11098.arr[i] = a;
    editable__11098.arr[j] = b;
    return editable__11098
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__11105 = arr.length;
  var i__11106 = 0;
  var init__11107 = init;
  while(true) {
    if(i__11106 < len__11105) {
      var init__11110 = function() {
        var k__11108 = arr[i__11106];
        if(!(k__11108 == null)) {
          return f.call(null, init__11107, k__11108, arr[i__11106 + 1])
        }else {
          var node__11109 = arr[i__11106 + 1];
          if(!(node__11109 == null)) {
            return node__11109.kv_reduce(f, init__11107)
          }else {
            return init__11107
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__11110)) {
        return cljs.core.deref.call(null, init__11110)
      }else {
        var G__11111 = i__11106 + 2;
        var G__11112 = init__11110;
        i__11106 = G__11111;
        init__11107 = G__11112;
        continue
      }
    }else {
      return init__11107
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__11113 = this;
  var inode__11114 = this;
  if(this__11113.bitmap === bit) {
    return null
  }else {
    var editable__11115 = inode__11114.ensure_editable(e);
    var earr__11116 = editable__11115.arr;
    var len__11117 = earr__11116.length;
    editable__11115.bitmap = bit ^ editable__11115.bitmap;
    cljs.core.array_copy.call(null, earr__11116, 2 * (i + 1), earr__11116, 2 * i, len__11117 - 2 * (i + 1));
    earr__11116[len__11117 - 2] = null;
    earr__11116[len__11117 - 1] = null;
    return editable__11115
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__11118 = this;
  var inode__11119 = this;
  var bit__11120 = 1 << (hash >>> shift & 31);
  var idx__11121 = cljs.core.bitmap_indexed_node_index.call(null, this__11118.bitmap, bit__11120);
  if((this__11118.bitmap & bit__11120) === 0) {
    var n__11122 = cljs.core.bit_count.call(null, this__11118.bitmap);
    if(2 * n__11122 < this__11118.arr.length) {
      var editable__11123 = inode__11119.ensure_editable(edit);
      var earr__11124 = editable__11123.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__11124, 2 * idx__11121, earr__11124, 2 * (idx__11121 + 1), 2 * (n__11122 - idx__11121));
      earr__11124[2 * idx__11121] = key;
      earr__11124[2 * idx__11121 + 1] = val;
      editable__11123.bitmap = editable__11123.bitmap | bit__11120;
      return editable__11123
    }else {
      if(n__11122 >= 16) {
        var nodes__11125 = cljs.core.make_array.call(null, 32);
        var jdx__11126 = hash >>> shift & 31;
        nodes__11125[jdx__11126] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__11127 = 0;
        var j__11128 = 0;
        while(true) {
          if(i__11127 < 32) {
            if((this__11118.bitmap >>> i__11127 & 1) === 0) {
              var G__11181 = i__11127 + 1;
              var G__11182 = j__11128;
              i__11127 = G__11181;
              j__11128 = G__11182;
              continue
            }else {
              nodes__11125[i__11127] = !(this__11118.arr[j__11128] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__11118.arr[j__11128]), this__11118.arr[j__11128], this__11118.arr[j__11128 + 1], added_leaf_QMARK_) : this__11118.arr[j__11128 + 1];
              var G__11183 = i__11127 + 1;
              var G__11184 = j__11128 + 2;
              i__11127 = G__11183;
              j__11128 = G__11184;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__11122 + 1, nodes__11125)
      }else {
        if("\ufdd0'else") {
          var new_arr__11129 = cljs.core.make_array.call(null, 2 * (n__11122 + 4));
          cljs.core.array_copy.call(null, this__11118.arr, 0, new_arr__11129, 0, 2 * idx__11121);
          new_arr__11129[2 * idx__11121] = key;
          new_arr__11129[2 * idx__11121 + 1] = val;
          cljs.core.array_copy.call(null, this__11118.arr, 2 * idx__11121, new_arr__11129, 2 * (idx__11121 + 1), 2 * (n__11122 - idx__11121));
          added_leaf_QMARK_.val = true;
          var editable__11130 = inode__11119.ensure_editable(edit);
          editable__11130.arr = new_arr__11129;
          editable__11130.bitmap = editable__11130.bitmap | bit__11120;
          return editable__11130
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__11131 = this__11118.arr[2 * idx__11121];
    var val_or_node__11132 = this__11118.arr[2 * idx__11121 + 1];
    if(key_or_nil__11131 == null) {
      var n__11133 = val_or_node__11132.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__11133 === val_or_node__11132) {
        return inode__11119
      }else {
        return cljs.core.edit_and_set.call(null, inode__11119, edit, 2 * idx__11121 + 1, n__11133)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11131)) {
        if(val === val_or_node__11132) {
          return inode__11119
        }else {
          return cljs.core.edit_and_set.call(null, inode__11119, edit, 2 * idx__11121 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__11119, edit, 2 * idx__11121, null, 2 * idx__11121 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__11131, val_or_node__11132, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__11134 = this;
  var inode__11135 = this;
  return cljs.core.create_inode_seq.call(null, this__11134.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__11136 = this;
  var inode__11137 = this;
  var bit__11138 = 1 << (hash >>> shift & 31);
  if((this__11136.bitmap & bit__11138) === 0) {
    return inode__11137
  }else {
    var idx__11139 = cljs.core.bitmap_indexed_node_index.call(null, this__11136.bitmap, bit__11138);
    var key_or_nil__11140 = this__11136.arr[2 * idx__11139];
    var val_or_node__11141 = this__11136.arr[2 * idx__11139 + 1];
    if(key_or_nil__11140 == null) {
      var n__11142 = val_or_node__11141.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__11142 === val_or_node__11141) {
        return inode__11137
      }else {
        if(!(n__11142 == null)) {
          return cljs.core.edit_and_set.call(null, inode__11137, edit, 2 * idx__11139 + 1, n__11142)
        }else {
          if(this__11136.bitmap === bit__11138) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__11137.edit_and_remove_pair(edit, bit__11138, idx__11139)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11140)) {
        removed_leaf_QMARK_[0] = true;
        return inode__11137.edit_and_remove_pair(edit, bit__11138, idx__11139)
      }else {
        if("\ufdd0'else") {
          return inode__11137
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__11143 = this;
  var inode__11144 = this;
  if(e === this__11143.edit) {
    return inode__11144
  }else {
    var n__11145 = cljs.core.bit_count.call(null, this__11143.bitmap);
    var new_arr__11146 = cljs.core.make_array.call(null, n__11145 < 0 ? 4 : 2 * (n__11145 + 1));
    cljs.core.array_copy.call(null, this__11143.arr, 0, new_arr__11146, 0, 2 * n__11145);
    return new cljs.core.BitmapIndexedNode(e, this__11143.bitmap, new_arr__11146)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__11147 = this;
  var inode__11148 = this;
  return cljs.core.inode_kv_reduce.call(null, this__11147.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__11149 = this;
  var inode__11150 = this;
  var bit__11151 = 1 << (hash >>> shift & 31);
  if((this__11149.bitmap & bit__11151) === 0) {
    return not_found
  }else {
    var idx__11152 = cljs.core.bitmap_indexed_node_index.call(null, this__11149.bitmap, bit__11151);
    var key_or_nil__11153 = this__11149.arr[2 * idx__11152];
    var val_or_node__11154 = this__11149.arr[2 * idx__11152 + 1];
    if(key_or_nil__11153 == null) {
      return val_or_node__11154.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11153)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__11153, val_or_node__11154], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__11155 = this;
  var inode__11156 = this;
  var bit__11157 = 1 << (hash >>> shift & 31);
  if((this__11155.bitmap & bit__11157) === 0) {
    return inode__11156
  }else {
    var idx__11158 = cljs.core.bitmap_indexed_node_index.call(null, this__11155.bitmap, bit__11157);
    var key_or_nil__11159 = this__11155.arr[2 * idx__11158];
    var val_or_node__11160 = this__11155.arr[2 * idx__11158 + 1];
    if(key_or_nil__11159 == null) {
      var n__11161 = val_or_node__11160.inode_without(shift + 5, hash, key);
      if(n__11161 === val_or_node__11160) {
        return inode__11156
      }else {
        if(!(n__11161 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__11155.bitmap, cljs.core.clone_and_set.call(null, this__11155.arr, 2 * idx__11158 + 1, n__11161))
        }else {
          if(this__11155.bitmap === bit__11157) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__11155.bitmap ^ bit__11157, cljs.core.remove_pair.call(null, this__11155.arr, idx__11158))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11159)) {
        return new cljs.core.BitmapIndexedNode(null, this__11155.bitmap ^ bit__11157, cljs.core.remove_pair.call(null, this__11155.arr, idx__11158))
      }else {
        if("\ufdd0'else") {
          return inode__11156
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__11162 = this;
  var inode__11163 = this;
  var bit__11164 = 1 << (hash >>> shift & 31);
  var idx__11165 = cljs.core.bitmap_indexed_node_index.call(null, this__11162.bitmap, bit__11164);
  if((this__11162.bitmap & bit__11164) === 0) {
    var n__11166 = cljs.core.bit_count.call(null, this__11162.bitmap);
    if(n__11166 >= 16) {
      var nodes__11167 = cljs.core.make_array.call(null, 32);
      var jdx__11168 = hash >>> shift & 31;
      nodes__11167[jdx__11168] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__11169 = 0;
      var j__11170 = 0;
      while(true) {
        if(i__11169 < 32) {
          if((this__11162.bitmap >>> i__11169 & 1) === 0) {
            var G__11185 = i__11169 + 1;
            var G__11186 = j__11170;
            i__11169 = G__11185;
            j__11170 = G__11186;
            continue
          }else {
            nodes__11167[i__11169] = !(this__11162.arr[j__11170] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__11162.arr[j__11170]), this__11162.arr[j__11170], this__11162.arr[j__11170 + 1], added_leaf_QMARK_) : this__11162.arr[j__11170 + 1];
            var G__11187 = i__11169 + 1;
            var G__11188 = j__11170 + 2;
            i__11169 = G__11187;
            j__11170 = G__11188;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__11166 + 1, nodes__11167)
    }else {
      var new_arr__11171 = cljs.core.make_array.call(null, 2 * (n__11166 + 1));
      cljs.core.array_copy.call(null, this__11162.arr, 0, new_arr__11171, 0, 2 * idx__11165);
      new_arr__11171[2 * idx__11165] = key;
      new_arr__11171[2 * idx__11165 + 1] = val;
      cljs.core.array_copy.call(null, this__11162.arr, 2 * idx__11165, new_arr__11171, 2 * (idx__11165 + 1), 2 * (n__11166 - idx__11165));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__11162.bitmap | bit__11164, new_arr__11171)
    }
  }else {
    var key_or_nil__11172 = this__11162.arr[2 * idx__11165];
    var val_or_node__11173 = this__11162.arr[2 * idx__11165 + 1];
    if(key_or_nil__11172 == null) {
      var n__11174 = val_or_node__11173.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__11174 === val_or_node__11173) {
        return inode__11163
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__11162.bitmap, cljs.core.clone_and_set.call(null, this__11162.arr, 2 * idx__11165 + 1, n__11174))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11172)) {
        if(val === val_or_node__11173) {
          return inode__11163
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__11162.bitmap, cljs.core.clone_and_set.call(null, this__11162.arr, 2 * idx__11165 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__11162.bitmap, cljs.core.clone_and_set.call(null, this__11162.arr, 2 * idx__11165, null, 2 * idx__11165 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__11172, val_or_node__11173, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__11175 = this;
  var inode__11176 = this;
  var bit__11177 = 1 << (hash >>> shift & 31);
  if((this__11175.bitmap & bit__11177) === 0) {
    return not_found
  }else {
    var idx__11178 = cljs.core.bitmap_indexed_node_index.call(null, this__11175.bitmap, bit__11177);
    var key_or_nil__11179 = this__11175.arr[2 * idx__11178];
    var val_or_node__11180 = this__11175.arr[2 * idx__11178 + 1];
    if(key_or_nil__11179 == null) {
      return val_or_node__11180.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11179)) {
        return val_or_node__11180
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__11196 = array_node.arr;
  var len__11197 = 2 * (array_node.cnt - 1);
  var new_arr__11198 = cljs.core.make_array.call(null, len__11197);
  var i__11199 = 0;
  var j__11200 = 1;
  var bitmap__11201 = 0;
  while(true) {
    if(i__11199 < len__11197) {
      if(function() {
        var and__3822__auto____11202 = !(i__11199 === idx);
        if(and__3822__auto____11202) {
          return!(arr__11196[i__11199] == null)
        }else {
          return and__3822__auto____11202
        }
      }()) {
        new_arr__11198[j__11200] = arr__11196[i__11199];
        var G__11203 = i__11199 + 1;
        var G__11204 = j__11200 + 2;
        var G__11205 = bitmap__11201 | 1 << i__11199;
        i__11199 = G__11203;
        j__11200 = G__11204;
        bitmap__11201 = G__11205;
        continue
      }else {
        var G__11206 = i__11199 + 1;
        var G__11207 = j__11200;
        var G__11208 = bitmap__11201;
        i__11199 = G__11206;
        j__11200 = G__11207;
        bitmap__11201 = G__11208;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__11201, new_arr__11198)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__11209 = this;
  var inode__11210 = this;
  var idx__11211 = hash >>> shift & 31;
  var node__11212 = this__11209.arr[idx__11211];
  if(node__11212 == null) {
    var editable__11213 = cljs.core.edit_and_set.call(null, inode__11210, edit, idx__11211, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__11213.cnt = editable__11213.cnt + 1;
    return editable__11213
  }else {
    var n__11214 = node__11212.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__11214 === node__11212) {
      return inode__11210
    }else {
      return cljs.core.edit_and_set.call(null, inode__11210, edit, idx__11211, n__11214)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__11215 = this;
  var inode__11216 = this;
  return cljs.core.create_array_node_seq.call(null, this__11215.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__11217 = this;
  var inode__11218 = this;
  var idx__11219 = hash >>> shift & 31;
  var node__11220 = this__11217.arr[idx__11219];
  if(node__11220 == null) {
    return inode__11218
  }else {
    var n__11221 = node__11220.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__11221 === node__11220) {
      return inode__11218
    }else {
      if(n__11221 == null) {
        if(this__11217.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__11218, edit, idx__11219)
        }else {
          var editable__11222 = cljs.core.edit_and_set.call(null, inode__11218, edit, idx__11219, n__11221);
          editable__11222.cnt = editable__11222.cnt - 1;
          return editable__11222
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__11218, edit, idx__11219, n__11221)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__11223 = this;
  var inode__11224 = this;
  if(e === this__11223.edit) {
    return inode__11224
  }else {
    return new cljs.core.ArrayNode(e, this__11223.cnt, this__11223.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__11225 = this;
  var inode__11226 = this;
  var len__11227 = this__11225.arr.length;
  var i__11228 = 0;
  var init__11229 = init;
  while(true) {
    if(i__11228 < len__11227) {
      var node__11230 = this__11225.arr[i__11228];
      if(!(node__11230 == null)) {
        var init__11231 = node__11230.kv_reduce(f, init__11229);
        if(cljs.core.reduced_QMARK_.call(null, init__11231)) {
          return cljs.core.deref.call(null, init__11231)
        }else {
          var G__11250 = i__11228 + 1;
          var G__11251 = init__11231;
          i__11228 = G__11250;
          init__11229 = G__11251;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__11229
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__11232 = this;
  var inode__11233 = this;
  var idx__11234 = hash >>> shift & 31;
  var node__11235 = this__11232.arr[idx__11234];
  if(!(node__11235 == null)) {
    return node__11235.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__11236 = this;
  var inode__11237 = this;
  var idx__11238 = hash >>> shift & 31;
  var node__11239 = this__11236.arr[idx__11238];
  if(!(node__11239 == null)) {
    var n__11240 = node__11239.inode_without(shift + 5, hash, key);
    if(n__11240 === node__11239) {
      return inode__11237
    }else {
      if(n__11240 == null) {
        if(this__11236.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__11237, null, idx__11238)
        }else {
          return new cljs.core.ArrayNode(null, this__11236.cnt - 1, cljs.core.clone_and_set.call(null, this__11236.arr, idx__11238, n__11240))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__11236.cnt, cljs.core.clone_and_set.call(null, this__11236.arr, idx__11238, n__11240))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__11237
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__11241 = this;
  var inode__11242 = this;
  var idx__11243 = hash >>> shift & 31;
  var node__11244 = this__11241.arr[idx__11243];
  if(node__11244 == null) {
    return new cljs.core.ArrayNode(null, this__11241.cnt + 1, cljs.core.clone_and_set.call(null, this__11241.arr, idx__11243, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__11245 = node__11244.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__11245 === node__11244) {
      return inode__11242
    }else {
      return new cljs.core.ArrayNode(null, this__11241.cnt, cljs.core.clone_and_set.call(null, this__11241.arr, idx__11243, n__11245))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__11246 = this;
  var inode__11247 = this;
  var idx__11248 = hash >>> shift & 31;
  var node__11249 = this__11246.arr[idx__11248];
  if(!(node__11249 == null)) {
    return node__11249.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__11254 = 2 * cnt;
  var i__11255 = 0;
  while(true) {
    if(i__11255 < lim__11254) {
      if(cljs.core.key_test.call(null, key, arr[i__11255])) {
        return i__11255
      }else {
        var G__11256 = i__11255 + 2;
        i__11255 = G__11256;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__11257 = this;
  var inode__11258 = this;
  if(hash === this__11257.collision_hash) {
    var idx__11259 = cljs.core.hash_collision_node_find_index.call(null, this__11257.arr, this__11257.cnt, key);
    if(idx__11259 === -1) {
      if(this__11257.arr.length > 2 * this__11257.cnt) {
        var editable__11260 = cljs.core.edit_and_set.call(null, inode__11258, edit, 2 * this__11257.cnt, key, 2 * this__11257.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__11260.cnt = editable__11260.cnt + 1;
        return editable__11260
      }else {
        var len__11261 = this__11257.arr.length;
        var new_arr__11262 = cljs.core.make_array.call(null, len__11261 + 2);
        cljs.core.array_copy.call(null, this__11257.arr, 0, new_arr__11262, 0, len__11261);
        new_arr__11262[len__11261] = key;
        new_arr__11262[len__11261 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__11258.ensure_editable_array(edit, this__11257.cnt + 1, new_arr__11262)
      }
    }else {
      if(this__11257.arr[idx__11259 + 1] === val) {
        return inode__11258
      }else {
        return cljs.core.edit_and_set.call(null, inode__11258, edit, idx__11259 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__11257.collision_hash >>> shift & 31), [null, inode__11258, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__11263 = this;
  var inode__11264 = this;
  return cljs.core.create_inode_seq.call(null, this__11263.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__11265 = this;
  var inode__11266 = this;
  var idx__11267 = cljs.core.hash_collision_node_find_index.call(null, this__11265.arr, this__11265.cnt, key);
  if(idx__11267 === -1) {
    return inode__11266
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__11265.cnt === 1) {
      return null
    }else {
      var editable__11268 = inode__11266.ensure_editable(edit);
      var earr__11269 = editable__11268.arr;
      earr__11269[idx__11267] = earr__11269[2 * this__11265.cnt - 2];
      earr__11269[idx__11267 + 1] = earr__11269[2 * this__11265.cnt - 1];
      earr__11269[2 * this__11265.cnt - 1] = null;
      earr__11269[2 * this__11265.cnt - 2] = null;
      editable__11268.cnt = editable__11268.cnt - 1;
      return editable__11268
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__11270 = this;
  var inode__11271 = this;
  if(e === this__11270.edit) {
    return inode__11271
  }else {
    var new_arr__11272 = cljs.core.make_array.call(null, 2 * (this__11270.cnt + 1));
    cljs.core.array_copy.call(null, this__11270.arr, 0, new_arr__11272, 0, 2 * this__11270.cnt);
    return new cljs.core.HashCollisionNode(e, this__11270.collision_hash, this__11270.cnt, new_arr__11272)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__11273 = this;
  var inode__11274 = this;
  return cljs.core.inode_kv_reduce.call(null, this__11273.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__11275 = this;
  var inode__11276 = this;
  var idx__11277 = cljs.core.hash_collision_node_find_index.call(null, this__11275.arr, this__11275.cnt, key);
  if(idx__11277 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__11275.arr[idx__11277])) {
      return cljs.core.PersistentVector.fromArray([this__11275.arr[idx__11277], this__11275.arr[idx__11277 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__11278 = this;
  var inode__11279 = this;
  var idx__11280 = cljs.core.hash_collision_node_find_index.call(null, this__11278.arr, this__11278.cnt, key);
  if(idx__11280 === -1) {
    return inode__11279
  }else {
    if(this__11278.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__11278.collision_hash, this__11278.cnt - 1, cljs.core.remove_pair.call(null, this__11278.arr, cljs.core.quot.call(null, idx__11280, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__11281 = this;
  var inode__11282 = this;
  if(hash === this__11281.collision_hash) {
    var idx__11283 = cljs.core.hash_collision_node_find_index.call(null, this__11281.arr, this__11281.cnt, key);
    if(idx__11283 === -1) {
      var len__11284 = this__11281.arr.length;
      var new_arr__11285 = cljs.core.make_array.call(null, len__11284 + 2);
      cljs.core.array_copy.call(null, this__11281.arr, 0, new_arr__11285, 0, len__11284);
      new_arr__11285[len__11284] = key;
      new_arr__11285[len__11284 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__11281.collision_hash, this__11281.cnt + 1, new_arr__11285)
    }else {
      if(cljs.core._EQ_.call(null, this__11281.arr[idx__11283], val)) {
        return inode__11282
      }else {
        return new cljs.core.HashCollisionNode(null, this__11281.collision_hash, this__11281.cnt, cljs.core.clone_and_set.call(null, this__11281.arr, idx__11283 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__11281.collision_hash >>> shift & 31), [null, inode__11282])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__11286 = this;
  var inode__11287 = this;
  var idx__11288 = cljs.core.hash_collision_node_find_index.call(null, this__11286.arr, this__11286.cnt, key);
  if(idx__11288 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__11286.arr[idx__11288])) {
      return this__11286.arr[idx__11288 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__11289 = this;
  var inode__11290 = this;
  if(e === this__11289.edit) {
    this__11289.arr = array;
    this__11289.cnt = count;
    return inode__11290
  }else {
    return new cljs.core.HashCollisionNode(this__11289.edit, this__11289.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__11295 = cljs.core.hash.call(null, key1);
    if(key1hash__11295 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__11295, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___11296 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__11295, key1, val1, added_leaf_QMARK___11296).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___11296)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__11297 = cljs.core.hash.call(null, key1);
    if(key1hash__11297 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__11297, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___11298 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__11297, key1, val1, added_leaf_QMARK___11298).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___11298)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11299 = this;
  var h__2208__auto____11300 = this__11299.__hash;
  if(!(h__2208__auto____11300 == null)) {
    return h__2208__auto____11300
  }else {
    var h__2208__auto____11301 = cljs.core.hash_coll.call(null, coll);
    this__11299.__hash = h__2208__auto____11301;
    return h__2208__auto____11301
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11302 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__11303 = this;
  var this__11304 = this;
  return cljs.core.pr_str.call(null, this__11304)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__11305 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11306 = this;
  if(this__11306.s == null) {
    return cljs.core.PersistentVector.fromArray([this__11306.nodes[this__11306.i], this__11306.nodes[this__11306.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__11306.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11307 = this;
  if(this__11307.s == null) {
    return cljs.core.create_inode_seq.call(null, this__11307.nodes, this__11307.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__11307.nodes, this__11307.i, cljs.core.next.call(null, this__11307.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11308 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11309 = this;
  return new cljs.core.NodeSeq(meta, this__11309.nodes, this__11309.i, this__11309.s, this__11309.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11310 = this;
  return this__11310.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11311 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11311.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__11318 = nodes.length;
      var j__11319 = i;
      while(true) {
        if(j__11319 < len__11318) {
          if(!(nodes[j__11319] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__11319, null, null)
          }else {
            var temp__3971__auto____11320 = nodes[j__11319 + 1];
            if(cljs.core.truth_(temp__3971__auto____11320)) {
              var node__11321 = temp__3971__auto____11320;
              var temp__3971__auto____11322 = node__11321.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____11322)) {
                var node_seq__11323 = temp__3971__auto____11322;
                return new cljs.core.NodeSeq(null, nodes, j__11319 + 2, node_seq__11323, null)
              }else {
                var G__11324 = j__11319 + 2;
                j__11319 = G__11324;
                continue
              }
            }else {
              var G__11325 = j__11319 + 2;
              j__11319 = G__11325;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11326 = this;
  var h__2208__auto____11327 = this__11326.__hash;
  if(!(h__2208__auto____11327 == null)) {
    return h__2208__auto____11327
  }else {
    var h__2208__auto____11328 = cljs.core.hash_coll.call(null, coll);
    this__11326.__hash = h__2208__auto____11328;
    return h__2208__auto____11328
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11329 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__11330 = this;
  var this__11331 = this;
  return cljs.core.pr_str.call(null, this__11331)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__11332 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11333 = this;
  return cljs.core.first.call(null, this__11333.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11334 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__11334.nodes, this__11334.i, cljs.core.next.call(null, this__11334.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11335 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11336 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__11336.nodes, this__11336.i, this__11336.s, this__11336.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11337 = this;
  return this__11337.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11338 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11338.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__11345 = nodes.length;
      var j__11346 = i;
      while(true) {
        if(j__11346 < len__11345) {
          var temp__3971__auto____11347 = nodes[j__11346];
          if(cljs.core.truth_(temp__3971__auto____11347)) {
            var nj__11348 = temp__3971__auto____11347;
            var temp__3971__auto____11349 = nj__11348.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____11349)) {
              var ns__11350 = temp__3971__auto____11349;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__11346 + 1, ns__11350, null)
            }else {
              var G__11351 = j__11346 + 1;
              j__11346 = G__11351;
              continue
            }
          }else {
            var G__11352 = j__11346 + 1;
            j__11346 = G__11352;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11355 = this;
  return new cljs.core.TransientHashMap({}, this__11355.root, this__11355.cnt, this__11355.has_nil_QMARK_, this__11355.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11356 = this;
  var h__2208__auto____11357 = this__11356.__hash;
  if(!(h__2208__auto____11357 == null)) {
    return h__2208__auto____11357
  }else {
    var h__2208__auto____11358 = cljs.core.hash_imap.call(null, coll);
    this__11356.__hash = h__2208__auto____11358;
    return h__2208__auto____11358
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11359 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11360 = this;
  if(k == null) {
    if(this__11360.has_nil_QMARK_) {
      return this__11360.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__11360.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__11360.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11361 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____11362 = this__11361.has_nil_QMARK_;
      if(and__3822__auto____11362) {
        return v === this__11361.nil_val
      }else {
        return and__3822__auto____11362
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__11361.meta, this__11361.has_nil_QMARK_ ? this__11361.cnt : this__11361.cnt + 1, this__11361.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___11363 = new cljs.core.Box(false);
    var new_root__11364 = (this__11361.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__11361.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___11363);
    if(new_root__11364 === this__11361.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__11361.meta, added_leaf_QMARK___11363.val ? this__11361.cnt + 1 : this__11361.cnt, new_root__11364, this__11361.has_nil_QMARK_, this__11361.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11365 = this;
  if(k == null) {
    return this__11365.has_nil_QMARK_
  }else {
    if(this__11365.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__11365.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__11388 = null;
  var G__11388__2 = function(this_sym11366, k) {
    var this__11368 = this;
    var this_sym11366__11369 = this;
    var coll__11370 = this_sym11366__11369;
    return coll__11370.cljs$core$ILookup$_lookup$arity$2(coll__11370, k)
  };
  var G__11388__3 = function(this_sym11367, k, not_found) {
    var this__11368 = this;
    var this_sym11367__11371 = this;
    var coll__11372 = this_sym11367__11371;
    return coll__11372.cljs$core$ILookup$_lookup$arity$3(coll__11372, k, not_found)
  };
  G__11388 = function(this_sym11367, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11388__2.call(this, this_sym11367, k);
      case 3:
        return G__11388__3.call(this, this_sym11367, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11388
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym11353, args11354) {
  var this__11373 = this;
  return this_sym11353.call.apply(this_sym11353, [this_sym11353].concat(args11354.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__11374 = this;
  var init__11375 = this__11374.has_nil_QMARK_ ? f.call(null, init, null, this__11374.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__11375)) {
    return cljs.core.deref.call(null, init__11375)
  }else {
    if(!(this__11374.root == null)) {
      return this__11374.root.kv_reduce(f, init__11375)
    }else {
      if("\ufdd0'else") {
        return init__11375
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11376 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__11377 = this;
  var this__11378 = this;
  return cljs.core.pr_str.call(null, this__11378)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11379 = this;
  if(this__11379.cnt > 0) {
    var s__11380 = !(this__11379.root == null) ? this__11379.root.inode_seq() : null;
    if(this__11379.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__11379.nil_val], true), s__11380)
    }else {
      return s__11380
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11381 = this;
  return this__11381.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11382 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11383 = this;
  return new cljs.core.PersistentHashMap(meta, this__11383.cnt, this__11383.root, this__11383.has_nil_QMARK_, this__11383.nil_val, this__11383.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11384 = this;
  return this__11384.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11385 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__11385.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11386 = this;
  if(k == null) {
    if(this__11386.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__11386.meta, this__11386.cnt - 1, this__11386.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__11386.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__11387 = this__11386.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__11387 === this__11386.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__11386.meta, this__11386.cnt - 1, new_root__11387, this__11386.has_nil_QMARK_, this__11386.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__11389 = ks.length;
  var i__11390 = 0;
  var out__11391 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__11390 < len__11389) {
      var G__11392 = i__11390 + 1;
      var G__11393 = cljs.core.assoc_BANG_.call(null, out__11391, ks[i__11390], vs[i__11390]);
      i__11390 = G__11392;
      out__11391 = G__11393;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__11391)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__11394 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__11395 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__11396 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__11397 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__11398 = this;
  if(k == null) {
    if(this__11398.has_nil_QMARK_) {
      return this__11398.nil_val
    }else {
      return null
    }
  }else {
    if(this__11398.root == null) {
      return null
    }else {
      return this__11398.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__11399 = this;
  if(k == null) {
    if(this__11399.has_nil_QMARK_) {
      return this__11399.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__11399.root == null) {
      return not_found
    }else {
      return this__11399.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11400 = this;
  if(this__11400.edit) {
    return this__11400.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__11401 = this;
  var tcoll__11402 = this;
  if(this__11401.edit) {
    if(function() {
      var G__11403__11404 = o;
      if(G__11403__11404) {
        if(function() {
          var or__3824__auto____11405 = G__11403__11404.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____11405) {
            return or__3824__auto____11405
          }else {
            return G__11403__11404.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__11403__11404.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__11403__11404)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__11403__11404)
      }
    }()) {
      return tcoll__11402.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__11406 = cljs.core.seq.call(null, o);
      var tcoll__11407 = tcoll__11402;
      while(true) {
        var temp__3971__auto____11408 = cljs.core.first.call(null, es__11406);
        if(cljs.core.truth_(temp__3971__auto____11408)) {
          var e__11409 = temp__3971__auto____11408;
          var G__11420 = cljs.core.next.call(null, es__11406);
          var G__11421 = tcoll__11407.assoc_BANG_(cljs.core.key.call(null, e__11409), cljs.core.val.call(null, e__11409));
          es__11406 = G__11420;
          tcoll__11407 = G__11421;
          continue
        }else {
          return tcoll__11407
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__11410 = this;
  var tcoll__11411 = this;
  if(this__11410.edit) {
    if(k == null) {
      if(this__11410.nil_val === v) {
      }else {
        this__11410.nil_val = v
      }
      if(this__11410.has_nil_QMARK_) {
      }else {
        this__11410.count = this__11410.count + 1;
        this__11410.has_nil_QMARK_ = true
      }
      return tcoll__11411
    }else {
      var added_leaf_QMARK___11412 = new cljs.core.Box(false);
      var node__11413 = (this__11410.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__11410.root).inode_assoc_BANG_(this__11410.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___11412);
      if(node__11413 === this__11410.root) {
      }else {
        this__11410.root = node__11413
      }
      if(added_leaf_QMARK___11412.val) {
        this__11410.count = this__11410.count + 1
      }else {
      }
      return tcoll__11411
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__11414 = this;
  var tcoll__11415 = this;
  if(this__11414.edit) {
    if(k == null) {
      if(this__11414.has_nil_QMARK_) {
        this__11414.has_nil_QMARK_ = false;
        this__11414.nil_val = null;
        this__11414.count = this__11414.count - 1;
        return tcoll__11415
      }else {
        return tcoll__11415
      }
    }else {
      if(this__11414.root == null) {
        return tcoll__11415
      }else {
        var removed_leaf_QMARK___11416 = new cljs.core.Box(false);
        var node__11417 = this__11414.root.inode_without_BANG_(this__11414.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___11416);
        if(node__11417 === this__11414.root) {
        }else {
          this__11414.root = node__11417
        }
        if(cljs.core.truth_(removed_leaf_QMARK___11416[0])) {
          this__11414.count = this__11414.count - 1
        }else {
        }
        return tcoll__11415
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__11418 = this;
  var tcoll__11419 = this;
  if(this__11418.edit) {
    this__11418.edit = null;
    return new cljs.core.PersistentHashMap(null, this__11418.count, this__11418.root, this__11418.has_nil_QMARK_, this__11418.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__11424 = node;
  var stack__11425 = stack;
  while(true) {
    if(!(t__11424 == null)) {
      var G__11426 = ascending_QMARK_ ? t__11424.left : t__11424.right;
      var G__11427 = cljs.core.conj.call(null, stack__11425, t__11424);
      t__11424 = G__11426;
      stack__11425 = G__11427;
      continue
    }else {
      return stack__11425
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11428 = this;
  var h__2208__auto____11429 = this__11428.__hash;
  if(!(h__2208__auto____11429 == null)) {
    return h__2208__auto____11429
  }else {
    var h__2208__auto____11430 = cljs.core.hash_coll.call(null, coll);
    this__11428.__hash = h__2208__auto____11430;
    return h__2208__auto____11430
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11431 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__11432 = this;
  var this__11433 = this;
  return cljs.core.pr_str.call(null, this__11433)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__11434 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11435 = this;
  if(this__11435.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__11435.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__11436 = this;
  return cljs.core.peek.call(null, this__11436.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__11437 = this;
  var t__11438 = cljs.core.first.call(null, this__11437.stack);
  var next_stack__11439 = cljs.core.tree_map_seq_push.call(null, this__11437.ascending_QMARK_ ? t__11438.right : t__11438.left, cljs.core.next.call(null, this__11437.stack), this__11437.ascending_QMARK_);
  if(!(next_stack__11439 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__11439, this__11437.ascending_QMARK_, this__11437.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11440 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11441 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__11441.stack, this__11441.ascending_QMARK_, this__11441.cnt, this__11441.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11442 = this;
  return this__11442.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____11444 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____11444) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____11444
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____11446 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____11446) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____11446
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__11450 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__11450)) {
    return cljs.core.deref.call(null, init__11450)
  }else {
    var init__11451 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__11450) : init__11450;
    if(cljs.core.reduced_QMARK_.call(null, init__11451)) {
      return cljs.core.deref.call(null, init__11451)
    }else {
      var init__11452 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__11451) : init__11451;
      if(cljs.core.reduced_QMARK_.call(null, init__11452)) {
        return cljs.core.deref.call(null, init__11452)
      }else {
        return init__11452
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11455 = this;
  var h__2208__auto____11456 = this__11455.__hash;
  if(!(h__2208__auto____11456 == null)) {
    return h__2208__auto____11456
  }else {
    var h__2208__auto____11457 = cljs.core.hash_coll.call(null, coll);
    this__11455.__hash = h__2208__auto____11457;
    return h__2208__auto____11457
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__11458 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__11459 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__11460 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__11460.key, this__11460.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__11508 = null;
  var G__11508__2 = function(this_sym11461, k) {
    var this__11463 = this;
    var this_sym11461__11464 = this;
    var node__11465 = this_sym11461__11464;
    return node__11465.cljs$core$ILookup$_lookup$arity$2(node__11465, k)
  };
  var G__11508__3 = function(this_sym11462, k, not_found) {
    var this__11463 = this;
    var this_sym11462__11466 = this;
    var node__11467 = this_sym11462__11466;
    return node__11467.cljs$core$ILookup$_lookup$arity$3(node__11467, k, not_found)
  };
  G__11508 = function(this_sym11462, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11508__2.call(this, this_sym11462, k);
      case 3:
        return G__11508__3.call(this, this_sym11462, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11508
}();
cljs.core.BlackNode.prototype.apply = function(this_sym11453, args11454) {
  var this__11468 = this;
  return this_sym11453.call.apply(this_sym11453, [this_sym11453].concat(args11454.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__11469 = this;
  return cljs.core.PersistentVector.fromArray([this__11469.key, this__11469.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__11470 = this;
  return this__11470.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__11471 = this;
  return this__11471.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__11472 = this;
  var node__11473 = this;
  return ins.balance_right(node__11473)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__11474 = this;
  var node__11475 = this;
  return new cljs.core.RedNode(this__11474.key, this__11474.val, this__11474.left, this__11474.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__11476 = this;
  var node__11477 = this;
  return cljs.core.balance_right_del.call(null, this__11476.key, this__11476.val, this__11476.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__11478 = this;
  var node__11479 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__11480 = this;
  var node__11481 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__11481, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__11482 = this;
  var node__11483 = this;
  return cljs.core.balance_left_del.call(null, this__11482.key, this__11482.val, del, this__11482.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__11484 = this;
  var node__11485 = this;
  return ins.balance_left(node__11485)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__11486 = this;
  var node__11487 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__11487, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__11509 = null;
  var G__11509__0 = function() {
    var this__11488 = this;
    var this__11490 = this;
    return cljs.core.pr_str.call(null, this__11490)
  };
  G__11509 = function() {
    switch(arguments.length) {
      case 0:
        return G__11509__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11509
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__11491 = this;
  var node__11492 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__11492, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__11493 = this;
  var node__11494 = this;
  return node__11494
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__11495 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__11496 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__11497 = this;
  return cljs.core.list.call(null, this__11497.key, this__11497.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__11498 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__11499 = this;
  return this__11499.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__11500 = this;
  return cljs.core.PersistentVector.fromArray([this__11500.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__11501 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__11501.key, this__11501.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11502 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__11503 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__11503.key, this__11503.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__11504 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__11505 = this;
  if(n === 0) {
    return this__11505.key
  }else {
    if(n === 1) {
      return this__11505.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__11506 = this;
  if(n === 0) {
    return this__11506.key
  }else {
    if(n === 1) {
      return this__11506.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__11507 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11512 = this;
  var h__2208__auto____11513 = this__11512.__hash;
  if(!(h__2208__auto____11513 == null)) {
    return h__2208__auto____11513
  }else {
    var h__2208__auto____11514 = cljs.core.hash_coll.call(null, coll);
    this__11512.__hash = h__2208__auto____11514;
    return h__2208__auto____11514
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__11515 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__11516 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__11517 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__11517.key, this__11517.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__11565 = null;
  var G__11565__2 = function(this_sym11518, k) {
    var this__11520 = this;
    var this_sym11518__11521 = this;
    var node__11522 = this_sym11518__11521;
    return node__11522.cljs$core$ILookup$_lookup$arity$2(node__11522, k)
  };
  var G__11565__3 = function(this_sym11519, k, not_found) {
    var this__11520 = this;
    var this_sym11519__11523 = this;
    var node__11524 = this_sym11519__11523;
    return node__11524.cljs$core$ILookup$_lookup$arity$3(node__11524, k, not_found)
  };
  G__11565 = function(this_sym11519, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11565__2.call(this, this_sym11519, k);
      case 3:
        return G__11565__3.call(this, this_sym11519, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11565
}();
cljs.core.RedNode.prototype.apply = function(this_sym11510, args11511) {
  var this__11525 = this;
  return this_sym11510.call.apply(this_sym11510, [this_sym11510].concat(args11511.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__11526 = this;
  return cljs.core.PersistentVector.fromArray([this__11526.key, this__11526.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__11527 = this;
  return this__11527.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__11528 = this;
  return this__11528.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__11529 = this;
  var node__11530 = this;
  return new cljs.core.RedNode(this__11529.key, this__11529.val, this__11529.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__11531 = this;
  var node__11532 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__11533 = this;
  var node__11534 = this;
  return new cljs.core.RedNode(this__11533.key, this__11533.val, this__11533.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__11535 = this;
  var node__11536 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__11537 = this;
  var node__11538 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__11538, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__11539 = this;
  var node__11540 = this;
  return new cljs.core.RedNode(this__11539.key, this__11539.val, del, this__11539.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__11541 = this;
  var node__11542 = this;
  return new cljs.core.RedNode(this__11541.key, this__11541.val, ins, this__11541.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__11543 = this;
  var node__11544 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11543.left)) {
    return new cljs.core.RedNode(this__11543.key, this__11543.val, this__11543.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__11543.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11543.right)) {
      return new cljs.core.RedNode(this__11543.right.key, this__11543.right.val, new cljs.core.BlackNode(this__11543.key, this__11543.val, this__11543.left, this__11543.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__11543.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__11544, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__11566 = null;
  var G__11566__0 = function() {
    var this__11545 = this;
    var this__11547 = this;
    return cljs.core.pr_str.call(null, this__11547)
  };
  G__11566 = function() {
    switch(arguments.length) {
      case 0:
        return G__11566__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11566
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__11548 = this;
  var node__11549 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11548.right)) {
    return new cljs.core.RedNode(this__11548.key, this__11548.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__11548.left, null), this__11548.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11548.left)) {
      return new cljs.core.RedNode(this__11548.left.key, this__11548.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__11548.left.left, null), new cljs.core.BlackNode(this__11548.key, this__11548.val, this__11548.left.right, this__11548.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__11549, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__11550 = this;
  var node__11551 = this;
  return new cljs.core.BlackNode(this__11550.key, this__11550.val, this__11550.left, this__11550.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__11552 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__11553 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__11554 = this;
  return cljs.core.list.call(null, this__11554.key, this__11554.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__11555 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__11556 = this;
  return this__11556.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__11557 = this;
  return cljs.core.PersistentVector.fromArray([this__11557.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__11558 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__11558.key, this__11558.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11559 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__11560 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__11560.key, this__11560.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__11561 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__11562 = this;
  if(n === 0) {
    return this__11562.key
  }else {
    if(n === 1) {
      return this__11562.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__11563 = this;
  if(n === 0) {
    return this__11563.key
  }else {
    if(n === 1) {
      return this__11563.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__11564 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__11570 = comp.call(null, k, tree.key);
    if(c__11570 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__11570 < 0) {
        var ins__11571 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__11571 == null)) {
          return tree.add_left(ins__11571)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__11572 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__11572 == null)) {
            return tree.add_right(ins__11572)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__11575 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__11575)) {
            return new cljs.core.RedNode(app__11575.key, app__11575.val, new cljs.core.RedNode(left.key, left.val, left.left, app__11575.left, null), new cljs.core.RedNode(right.key, right.val, app__11575.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__11575, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__11576 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__11576)) {
              return new cljs.core.RedNode(app__11576.key, app__11576.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__11576.left, null), new cljs.core.BlackNode(right.key, right.val, app__11576.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__11576, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__11582 = comp.call(null, k, tree.key);
    if(c__11582 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__11582 < 0) {
        var del__11583 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____11584 = !(del__11583 == null);
          if(or__3824__auto____11584) {
            return or__3824__auto____11584
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__11583, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__11583, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__11585 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____11586 = !(del__11585 == null);
            if(or__3824__auto____11586) {
              return or__3824__auto____11586
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__11585)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__11585, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__11589 = tree.key;
  var c__11590 = comp.call(null, k, tk__11589);
  if(c__11590 === 0) {
    return tree.replace(tk__11589, v, tree.left, tree.right)
  }else {
    if(c__11590 < 0) {
      return tree.replace(tk__11589, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__11589, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11593 = this;
  var h__2208__auto____11594 = this__11593.__hash;
  if(!(h__2208__auto____11594 == null)) {
    return h__2208__auto____11594
  }else {
    var h__2208__auto____11595 = cljs.core.hash_imap.call(null, coll);
    this__11593.__hash = h__2208__auto____11595;
    return h__2208__auto____11595
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11596 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11597 = this;
  var n__11598 = coll.entry_at(k);
  if(!(n__11598 == null)) {
    return n__11598.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11599 = this;
  var found__11600 = [null];
  var t__11601 = cljs.core.tree_map_add.call(null, this__11599.comp, this__11599.tree, k, v, found__11600);
  if(t__11601 == null) {
    var found_node__11602 = cljs.core.nth.call(null, found__11600, 0);
    if(cljs.core._EQ_.call(null, v, found_node__11602.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__11599.comp, cljs.core.tree_map_replace.call(null, this__11599.comp, this__11599.tree, k, v), this__11599.cnt, this__11599.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__11599.comp, t__11601.blacken(), this__11599.cnt + 1, this__11599.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11603 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__11637 = null;
  var G__11637__2 = function(this_sym11604, k) {
    var this__11606 = this;
    var this_sym11604__11607 = this;
    var coll__11608 = this_sym11604__11607;
    return coll__11608.cljs$core$ILookup$_lookup$arity$2(coll__11608, k)
  };
  var G__11637__3 = function(this_sym11605, k, not_found) {
    var this__11606 = this;
    var this_sym11605__11609 = this;
    var coll__11610 = this_sym11605__11609;
    return coll__11610.cljs$core$ILookup$_lookup$arity$3(coll__11610, k, not_found)
  };
  G__11637 = function(this_sym11605, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11637__2.call(this, this_sym11605, k);
      case 3:
        return G__11637__3.call(this, this_sym11605, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11637
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym11591, args11592) {
  var this__11611 = this;
  return this_sym11591.call.apply(this_sym11591, [this_sym11591].concat(args11592.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__11612 = this;
  if(!(this__11612.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__11612.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11613 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11614 = this;
  if(this__11614.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11614.tree, false, this__11614.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__11615 = this;
  var this__11616 = this;
  return cljs.core.pr_str.call(null, this__11616)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__11617 = this;
  var coll__11618 = this;
  var t__11619 = this__11617.tree;
  while(true) {
    if(!(t__11619 == null)) {
      var c__11620 = this__11617.comp.call(null, k, t__11619.key);
      if(c__11620 === 0) {
        return t__11619
      }else {
        if(c__11620 < 0) {
          var G__11638 = t__11619.left;
          t__11619 = G__11638;
          continue
        }else {
          if("\ufdd0'else") {
            var G__11639 = t__11619.right;
            t__11619 = G__11639;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__11621 = this;
  if(this__11621.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11621.tree, ascending_QMARK_, this__11621.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__11622 = this;
  if(this__11622.cnt > 0) {
    var stack__11623 = null;
    var t__11624 = this__11622.tree;
    while(true) {
      if(!(t__11624 == null)) {
        var c__11625 = this__11622.comp.call(null, k, t__11624.key);
        if(c__11625 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__11623, t__11624), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__11625 < 0) {
              var G__11640 = cljs.core.conj.call(null, stack__11623, t__11624);
              var G__11641 = t__11624.left;
              stack__11623 = G__11640;
              t__11624 = G__11641;
              continue
            }else {
              var G__11642 = stack__11623;
              var G__11643 = t__11624.right;
              stack__11623 = G__11642;
              t__11624 = G__11643;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__11625 > 0) {
                var G__11644 = cljs.core.conj.call(null, stack__11623, t__11624);
                var G__11645 = t__11624.right;
                stack__11623 = G__11644;
                t__11624 = G__11645;
                continue
              }else {
                var G__11646 = stack__11623;
                var G__11647 = t__11624.left;
                stack__11623 = G__11646;
                t__11624 = G__11647;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__11623 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__11623, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__11626 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__11627 = this;
  return this__11627.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11628 = this;
  if(this__11628.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11628.tree, true, this__11628.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11629 = this;
  return this__11629.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11630 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11631 = this;
  return new cljs.core.PersistentTreeMap(this__11631.comp, this__11631.tree, this__11631.cnt, meta, this__11631.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11632 = this;
  return this__11632.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11633 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__11633.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11634 = this;
  var found__11635 = [null];
  var t__11636 = cljs.core.tree_map_remove.call(null, this__11634.comp, this__11634.tree, k, found__11635);
  if(t__11636 == null) {
    if(cljs.core.nth.call(null, found__11635, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__11634.comp, null, 0, this__11634.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__11634.comp, t__11636.blacken(), this__11634.cnt - 1, this__11634.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__11650 = cljs.core.seq.call(null, keyvals);
    var out__11651 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__11650) {
        var G__11652 = cljs.core.nnext.call(null, in__11650);
        var G__11653 = cljs.core.assoc_BANG_.call(null, out__11651, cljs.core.first.call(null, in__11650), cljs.core.second.call(null, in__11650));
        in__11650 = G__11652;
        out__11651 = G__11653;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__11651)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__11654) {
    var keyvals = cljs.core.seq(arglist__11654);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__11655) {
    var keyvals = cljs.core.seq(arglist__11655);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__11659 = [];
    var obj__11660 = {};
    var kvs__11661 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__11661) {
        ks__11659.push(cljs.core.first.call(null, kvs__11661));
        obj__11660[cljs.core.first.call(null, kvs__11661)] = cljs.core.second.call(null, kvs__11661);
        var G__11662 = cljs.core.nnext.call(null, kvs__11661);
        kvs__11661 = G__11662;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__11659, obj__11660)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__11663) {
    var keyvals = cljs.core.seq(arglist__11663);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__11666 = cljs.core.seq.call(null, keyvals);
    var out__11667 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__11666) {
        var G__11668 = cljs.core.nnext.call(null, in__11666);
        var G__11669 = cljs.core.assoc.call(null, out__11667, cljs.core.first.call(null, in__11666), cljs.core.second.call(null, in__11666));
        in__11666 = G__11668;
        out__11667 = G__11669;
        continue
      }else {
        return out__11667
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__11670) {
    var keyvals = cljs.core.seq(arglist__11670);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__11673 = cljs.core.seq.call(null, keyvals);
    var out__11674 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__11673) {
        var G__11675 = cljs.core.nnext.call(null, in__11673);
        var G__11676 = cljs.core.assoc.call(null, out__11674, cljs.core.first.call(null, in__11673), cljs.core.second.call(null, in__11673));
        in__11673 = G__11675;
        out__11674 = G__11676;
        continue
      }else {
        return out__11674
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__11677) {
    var comparator = cljs.core.first(arglist__11677);
    var keyvals = cljs.core.rest(arglist__11677);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__11678_SHARP_, p2__11679_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____11681 = p1__11678_SHARP_;
          if(cljs.core.truth_(or__3824__auto____11681)) {
            return or__3824__auto____11681
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__11679_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__11682) {
    var maps = cljs.core.seq(arglist__11682);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__11690 = function(m, e) {
        var k__11688 = cljs.core.first.call(null, e);
        var v__11689 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__11688)) {
          return cljs.core.assoc.call(null, m, k__11688, f.call(null, cljs.core._lookup.call(null, m, k__11688, null), v__11689))
        }else {
          return cljs.core.assoc.call(null, m, k__11688, v__11689)
        }
      };
      var merge2__11692 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__11690, function() {
          var or__3824__auto____11691 = m1;
          if(cljs.core.truth_(or__3824__auto____11691)) {
            return or__3824__auto____11691
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__11692, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__11693) {
    var f = cljs.core.first(arglist__11693);
    var maps = cljs.core.rest(arglist__11693);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__11698 = cljs.core.ObjMap.EMPTY;
  var keys__11699 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__11699) {
      var key__11700 = cljs.core.first.call(null, keys__11699);
      var entry__11701 = cljs.core._lookup.call(null, map, key__11700, "\ufdd0'cljs.core/not-found");
      var G__11702 = cljs.core.not_EQ_.call(null, entry__11701, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__11698, key__11700, entry__11701) : ret__11698;
      var G__11703 = cljs.core.next.call(null, keys__11699);
      ret__11698 = G__11702;
      keys__11699 = G__11703;
      continue
    }else {
      return ret__11698
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11707 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__11707.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11708 = this;
  var h__2208__auto____11709 = this__11708.__hash;
  if(!(h__2208__auto____11709 == null)) {
    return h__2208__auto____11709
  }else {
    var h__2208__auto____11710 = cljs.core.hash_iset.call(null, coll);
    this__11708.__hash = h__2208__auto____11710;
    return h__2208__auto____11710
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__11711 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__11712 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__11712.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__11733 = null;
  var G__11733__2 = function(this_sym11713, k) {
    var this__11715 = this;
    var this_sym11713__11716 = this;
    var coll__11717 = this_sym11713__11716;
    return coll__11717.cljs$core$ILookup$_lookup$arity$2(coll__11717, k)
  };
  var G__11733__3 = function(this_sym11714, k, not_found) {
    var this__11715 = this;
    var this_sym11714__11718 = this;
    var coll__11719 = this_sym11714__11718;
    return coll__11719.cljs$core$ILookup$_lookup$arity$3(coll__11719, k, not_found)
  };
  G__11733 = function(this_sym11714, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11733__2.call(this, this_sym11714, k);
      case 3:
        return G__11733__3.call(this, this_sym11714, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11733
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym11705, args11706) {
  var this__11720 = this;
  return this_sym11705.call.apply(this_sym11705, [this_sym11705].concat(args11706.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11721 = this;
  return new cljs.core.PersistentHashSet(this__11721.meta, cljs.core.assoc.call(null, this__11721.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__11722 = this;
  var this__11723 = this;
  return cljs.core.pr_str.call(null, this__11723)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11724 = this;
  return cljs.core.keys.call(null, this__11724.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__11725 = this;
  return new cljs.core.PersistentHashSet(this__11725.meta, cljs.core.dissoc.call(null, this__11725.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11726 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11727 = this;
  var and__3822__auto____11728 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____11728) {
    var and__3822__auto____11729 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____11729) {
      return cljs.core.every_QMARK_.call(null, function(p1__11704_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__11704_SHARP_)
      }, other)
    }else {
      return and__3822__auto____11729
    }
  }else {
    return and__3822__auto____11728
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11730 = this;
  return new cljs.core.PersistentHashSet(meta, this__11730.hash_map, this__11730.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11731 = this;
  return this__11731.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11732 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__11732.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__11734 = cljs.core.count.call(null, items);
  var i__11735 = 0;
  var out__11736 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__11735 < len__11734) {
      var G__11737 = i__11735 + 1;
      var G__11738 = cljs.core.conj_BANG_.call(null, out__11736, items[i__11735]);
      i__11735 = G__11737;
      out__11736 = G__11738;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__11736)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__11756 = null;
  var G__11756__2 = function(this_sym11742, k) {
    var this__11744 = this;
    var this_sym11742__11745 = this;
    var tcoll__11746 = this_sym11742__11745;
    if(cljs.core._lookup.call(null, this__11744.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__11756__3 = function(this_sym11743, k, not_found) {
    var this__11744 = this;
    var this_sym11743__11747 = this;
    var tcoll__11748 = this_sym11743__11747;
    if(cljs.core._lookup.call(null, this__11744.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__11756 = function(this_sym11743, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11756__2.call(this, this_sym11743, k);
      case 3:
        return G__11756__3.call(this, this_sym11743, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11756
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym11740, args11741) {
  var this__11749 = this;
  return this_sym11740.call.apply(this_sym11740, [this_sym11740].concat(args11741.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__11750 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__11751 = this;
  if(cljs.core._lookup.call(null, this__11751.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__11752 = this;
  return cljs.core.count.call(null, this__11752.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__11753 = this;
  this__11753.transient_map = cljs.core.dissoc_BANG_.call(null, this__11753.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__11754 = this;
  this__11754.transient_map = cljs.core.assoc_BANG_.call(null, this__11754.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__11755 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__11755.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11759 = this;
  var h__2208__auto____11760 = this__11759.__hash;
  if(!(h__2208__auto____11760 == null)) {
    return h__2208__auto____11760
  }else {
    var h__2208__auto____11761 = cljs.core.hash_iset.call(null, coll);
    this__11759.__hash = h__2208__auto____11761;
    return h__2208__auto____11761
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__11762 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__11763 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__11763.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__11789 = null;
  var G__11789__2 = function(this_sym11764, k) {
    var this__11766 = this;
    var this_sym11764__11767 = this;
    var coll__11768 = this_sym11764__11767;
    return coll__11768.cljs$core$ILookup$_lookup$arity$2(coll__11768, k)
  };
  var G__11789__3 = function(this_sym11765, k, not_found) {
    var this__11766 = this;
    var this_sym11765__11769 = this;
    var coll__11770 = this_sym11765__11769;
    return coll__11770.cljs$core$ILookup$_lookup$arity$3(coll__11770, k, not_found)
  };
  G__11789 = function(this_sym11765, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11789__2.call(this, this_sym11765, k);
      case 3:
        return G__11789__3.call(this, this_sym11765, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11789
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym11757, args11758) {
  var this__11771 = this;
  return this_sym11757.call.apply(this_sym11757, [this_sym11757].concat(args11758.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11772 = this;
  return new cljs.core.PersistentTreeSet(this__11772.meta, cljs.core.assoc.call(null, this__11772.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11773 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__11773.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__11774 = this;
  var this__11775 = this;
  return cljs.core.pr_str.call(null, this__11775)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__11776 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__11776.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__11777 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__11777.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__11778 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__11779 = this;
  return cljs.core._comparator.call(null, this__11779.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11780 = this;
  return cljs.core.keys.call(null, this__11780.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__11781 = this;
  return new cljs.core.PersistentTreeSet(this__11781.meta, cljs.core.dissoc.call(null, this__11781.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11782 = this;
  return cljs.core.count.call(null, this__11782.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11783 = this;
  var and__3822__auto____11784 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____11784) {
    var and__3822__auto____11785 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____11785) {
      return cljs.core.every_QMARK_.call(null, function(p1__11739_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__11739_SHARP_)
      }, other)
    }else {
      return and__3822__auto____11785
    }
  }else {
    return and__3822__auto____11784
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11786 = this;
  return new cljs.core.PersistentTreeSet(meta, this__11786.tree_map, this__11786.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11787 = this;
  return this__11787.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11788 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__11788.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__11794__delegate = function(keys) {
      var in__11792 = cljs.core.seq.call(null, keys);
      var out__11793 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__11792)) {
          var G__11795 = cljs.core.next.call(null, in__11792);
          var G__11796 = cljs.core.conj_BANG_.call(null, out__11793, cljs.core.first.call(null, in__11792));
          in__11792 = G__11795;
          out__11793 = G__11796;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__11793)
        }
        break
      }
    };
    var G__11794 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11794__delegate.call(this, keys)
    };
    G__11794.cljs$lang$maxFixedArity = 0;
    G__11794.cljs$lang$applyTo = function(arglist__11797) {
      var keys = cljs.core.seq(arglist__11797);
      return G__11794__delegate(keys)
    };
    G__11794.cljs$lang$arity$variadic = G__11794__delegate;
    return G__11794
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__11798) {
    var keys = cljs.core.seq(arglist__11798);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__11800) {
    var comparator = cljs.core.first(arglist__11800);
    var keys = cljs.core.rest(arglist__11800);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__11806 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____11807 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____11807)) {
        var e__11808 = temp__3971__auto____11807;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__11808))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__11806, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__11799_SHARP_) {
      var temp__3971__auto____11809 = cljs.core.find.call(null, smap, p1__11799_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____11809)) {
        var e__11810 = temp__3971__auto____11809;
        return cljs.core.second.call(null, e__11810)
      }else {
        return p1__11799_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__11840 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__11833, seen) {
        while(true) {
          var vec__11834__11835 = p__11833;
          var f__11836 = cljs.core.nth.call(null, vec__11834__11835, 0, null);
          var xs__11837 = vec__11834__11835;
          var temp__3974__auto____11838 = cljs.core.seq.call(null, xs__11837);
          if(temp__3974__auto____11838) {
            var s__11839 = temp__3974__auto____11838;
            if(cljs.core.contains_QMARK_.call(null, seen, f__11836)) {
              var G__11841 = cljs.core.rest.call(null, s__11839);
              var G__11842 = seen;
              p__11833 = G__11841;
              seen = G__11842;
              continue
            }else {
              return cljs.core.cons.call(null, f__11836, step.call(null, cljs.core.rest.call(null, s__11839), cljs.core.conj.call(null, seen, f__11836)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__11840.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__11845 = cljs.core.PersistentVector.EMPTY;
  var s__11846 = s;
  while(true) {
    if(cljs.core.next.call(null, s__11846)) {
      var G__11847 = cljs.core.conj.call(null, ret__11845, cljs.core.first.call(null, s__11846));
      var G__11848 = cljs.core.next.call(null, s__11846);
      ret__11845 = G__11847;
      s__11846 = G__11848;
      continue
    }else {
      return cljs.core.seq.call(null, ret__11845)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____11851 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____11851) {
        return or__3824__auto____11851
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__11852 = x.lastIndexOf("/");
      if(i__11852 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__11852 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____11855 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____11855) {
      return or__3824__auto____11855
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__11856 = x.lastIndexOf("/");
    if(i__11856 > -1) {
      return cljs.core.subs.call(null, x, 2, i__11856)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__11863 = cljs.core.ObjMap.EMPTY;
  var ks__11864 = cljs.core.seq.call(null, keys);
  var vs__11865 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____11866 = ks__11864;
      if(and__3822__auto____11866) {
        return vs__11865
      }else {
        return and__3822__auto____11866
      }
    }()) {
      var G__11867 = cljs.core.assoc.call(null, map__11863, cljs.core.first.call(null, ks__11864), cljs.core.first.call(null, vs__11865));
      var G__11868 = cljs.core.next.call(null, ks__11864);
      var G__11869 = cljs.core.next.call(null, vs__11865);
      map__11863 = G__11867;
      ks__11864 = G__11868;
      vs__11865 = G__11869;
      continue
    }else {
      return map__11863
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__11872__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11857_SHARP_, p2__11858_SHARP_) {
        return max_key.call(null, k, p1__11857_SHARP_, p2__11858_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__11872 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11872__delegate.call(this, k, x, y, more)
    };
    G__11872.cljs$lang$maxFixedArity = 3;
    G__11872.cljs$lang$applyTo = function(arglist__11873) {
      var k = cljs.core.first(arglist__11873);
      var x = cljs.core.first(cljs.core.next(arglist__11873));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11873)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11873)));
      return G__11872__delegate(k, x, y, more)
    };
    G__11872.cljs$lang$arity$variadic = G__11872__delegate;
    return G__11872
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__11874__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11870_SHARP_, p2__11871_SHARP_) {
        return min_key.call(null, k, p1__11870_SHARP_, p2__11871_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__11874 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11874__delegate.call(this, k, x, y, more)
    };
    G__11874.cljs$lang$maxFixedArity = 3;
    G__11874.cljs$lang$applyTo = function(arglist__11875) {
      var k = cljs.core.first(arglist__11875);
      var x = cljs.core.first(cljs.core.next(arglist__11875));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11875)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11875)));
      return G__11874__delegate(k, x, y, more)
    };
    G__11874.cljs$lang$arity$variadic = G__11874__delegate;
    return G__11874
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11878 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11878) {
        var s__11879 = temp__3974__auto____11878;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__11879), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__11879)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11882 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11882) {
      var s__11883 = temp__3974__auto____11882;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__11883)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__11883), take_while.call(null, pred, cljs.core.rest.call(null, s__11883)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__11885 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__11885.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__11897 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____11898 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____11898)) {
        var vec__11899__11900 = temp__3974__auto____11898;
        var e__11901 = cljs.core.nth.call(null, vec__11899__11900, 0, null);
        var s__11902 = vec__11899__11900;
        if(cljs.core.truth_(include__11897.call(null, e__11901))) {
          return s__11902
        }else {
          return cljs.core.next.call(null, s__11902)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11897, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11903 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____11903)) {
      var vec__11904__11905 = temp__3974__auto____11903;
      var e__11906 = cljs.core.nth.call(null, vec__11904__11905, 0, null);
      var s__11907 = vec__11904__11905;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__11906)) ? s__11907 : cljs.core.next.call(null, s__11907))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__11919 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____11920 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____11920)) {
        var vec__11921__11922 = temp__3974__auto____11920;
        var e__11923 = cljs.core.nth.call(null, vec__11921__11922, 0, null);
        var s__11924 = vec__11921__11922;
        if(cljs.core.truth_(include__11919.call(null, e__11923))) {
          return s__11924
        }else {
          return cljs.core.next.call(null, s__11924)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11919, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11925 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____11925)) {
      var vec__11926__11927 = temp__3974__auto____11925;
      var e__11928 = cljs.core.nth.call(null, vec__11926__11927, 0, null);
      var s__11929 = vec__11926__11927;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__11928)) ? s__11929 : cljs.core.next.call(null, s__11929))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__11930 = this;
  var h__2208__auto____11931 = this__11930.__hash;
  if(!(h__2208__auto____11931 == null)) {
    return h__2208__auto____11931
  }else {
    var h__2208__auto____11932 = cljs.core.hash_coll.call(null, rng);
    this__11930.__hash = h__2208__auto____11932;
    return h__2208__auto____11932
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__11933 = this;
  if(this__11933.step > 0) {
    if(this__11933.start + this__11933.step < this__11933.end) {
      return new cljs.core.Range(this__11933.meta, this__11933.start + this__11933.step, this__11933.end, this__11933.step, null)
    }else {
      return null
    }
  }else {
    if(this__11933.start + this__11933.step > this__11933.end) {
      return new cljs.core.Range(this__11933.meta, this__11933.start + this__11933.step, this__11933.end, this__11933.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__11934 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__11935 = this;
  var this__11936 = this;
  return cljs.core.pr_str.call(null, this__11936)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__11937 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__11938 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__11939 = this;
  if(this__11939.step > 0) {
    if(this__11939.start < this__11939.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__11939.start > this__11939.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__11940 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__11940.end - this__11940.start) / this__11940.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__11941 = this;
  return this__11941.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__11942 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__11942.meta, this__11942.start + this__11942.step, this__11942.end, this__11942.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__11943 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__11944 = this;
  return new cljs.core.Range(meta, this__11944.start, this__11944.end, this__11944.step, this__11944.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__11945 = this;
  return this__11945.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__11946 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11946.start + n * this__11946.step
  }else {
    if(function() {
      var and__3822__auto____11947 = this__11946.start > this__11946.end;
      if(and__3822__auto____11947) {
        return this__11946.step === 0
      }else {
        return and__3822__auto____11947
      }
    }()) {
      return this__11946.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__11948 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11948.start + n * this__11948.step
  }else {
    if(function() {
      var and__3822__auto____11949 = this__11948.start > this__11948.end;
      if(and__3822__auto____11949) {
        return this__11948.step === 0
      }else {
        return and__3822__auto____11949
      }
    }()) {
      return this__11948.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__11950 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11950.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11953 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11953) {
      var s__11954 = temp__3974__auto____11953;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__11954), take_nth.call(null, n, cljs.core.drop.call(null, n, s__11954)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11961 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11961) {
      var s__11962 = temp__3974__auto____11961;
      var fst__11963 = cljs.core.first.call(null, s__11962);
      var fv__11964 = f.call(null, fst__11963);
      var run__11965 = cljs.core.cons.call(null, fst__11963, cljs.core.take_while.call(null, function(p1__11955_SHARP_) {
        return cljs.core._EQ_.call(null, fv__11964, f.call(null, p1__11955_SHARP_))
      }, cljs.core.next.call(null, s__11962)));
      return cljs.core.cons.call(null, run__11965, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__11965), s__11962))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____11980 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____11980) {
        var s__11981 = temp__3971__auto____11980;
        return reductions.call(null, f, cljs.core.first.call(null, s__11981), cljs.core.rest.call(null, s__11981))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11982 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11982) {
        var s__11983 = temp__3974__auto____11982;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__11983)), cljs.core.rest.call(null, s__11983))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__11986 = null;
      var G__11986__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__11986__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__11986__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__11986__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__11986__4 = function() {
        var G__11987__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__11987 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11987__delegate.call(this, x, y, z, args)
        };
        G__11987.cljs$lang$maxFixedArity = 3;
        G__11987.cljs$lang$applyTo = function(arglist__11988) {
          var x = cljs.core.first(arglist__11988);
          var y = cljs.core.first(cljs.core.next(arglist__11988));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11988)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11988)));
          return G__11987__delegate(x, y, z, args)
        };
        G__11987.cljs$lang$arity$variadic = G__11987__delegate;
        return G__11987
      }();
      G__11986 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11986__0.call(this);
          case 1:
            return G__11986__1.call(this, x);
          case 2:
            return G__11986__2.call(this, x, y);
          case 3:
            return G__11986__3.call(this, x, y, z);
          default:
            return G__11986__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11986.cljs$lang$maxFixedArity = 3;
      G__11986.cljs$lang$applyTo = G__11986__4.cljs$lang$applyTo;
      return G__11986
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__11989 = null;
      var G__11989__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__11989__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__11989__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__11989__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__11989__4 = function() {
        var G__11990__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__11990 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11990__delegate.call(this, x, y, z, args)
        };
        G__11990.cljs$lang$maxFixedArity = 3;
        G__11990.cljs$lang$applyTo = function(arglist__11991) {
          var x = cljs.core.first(arglist__11991);
          var y = cljs.core.first(cljs.core.next(arglist__11991));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11991)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11991)));
          return G__11990__delegate(x, y, z, args)
        };
        G__11990.cljs$lang$arity$variadic = G__11990__delegate;
        return G__11990
      }();
      G__11989 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11989__0.call(this);
          case 1:
            return G__11989__1.call(this, x);
          case 2:
            return G__11989__2.call(this, x, y);
          case 3:
            return G__11989__3.call(this, x, y, z);
          default:
            return G__11989__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11989.cljs$lang$maxFixedArity = 3;
      G__11989.cljs$lang$applyTo = G__11989__4.cljs$lang$applyTo;
      return G__11989
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__11992 = null;
      var G__11992__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__11992__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__11992__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__11992__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__11992__4 = function() {
        var G__11993__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__11993 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11993__delegate.call(this, x, y, z, args)
        };
        G__11993.cljs$lang$maxFixedArity = 3;
        G__11993.cljs$lang$applyTo = function(arglist__11994) {
          var x = cljs.core.first(arglist__11994);
          var y = cljs.core.first(cljs.core.next(arglist__11994));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11994)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11994)));
          return G__11993__delegate(x, y, z, args)
        };
        G__11993.cljs$lang$arity$variadic = G__11993__delegate;
        return G__11993
      }();
      G__11992 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11992__0.call(this);
          case 1:
            return G__11992__1.call(this, x);
          case 2:
            return G__11992__2.call(this, x, y);
          case 3:
            return G__11992__3.call(this, x, y, z);
          default:
            return G__11992__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11992.cljs$lang$maxFixedArity = 3;
      G__11992.cljs$lang$applyTo = G__11992__4.cljs$lang$applyTo;
      return G__11992
    }()
  };
  var juxt__4 = function() {
    var G__11995__delegate = function(f, g, h, fs) {
      var fs__11985 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__11996 = null;
        var G__11996__0 = function() {
          return cljs.core.reduce.call(null, function(p1__11966_SHARP_, p2__11967_SHARP_) {
            return cljs.core.conj.call(null, p1__11966_SHARP_, p2__11967_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__11985)
        };
        var G__11996__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__11968_SHARP_, p2__11969_SHARP_) {
            return cljs.core.conj.call(null, p1__11968_SHARP_, p2__11969_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__11985)
        };
        var G__11996__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__11970_SHARP_, p2__11971_SHARP_) {
            return cljs.core.conj.call(null, p1__11970_SHARP_, p2__11971_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__11985)
        };
        var G__11996__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__11972_SHARP_, p2__11973_SHARP_) {
            return cljs.core.conj.call(null, p1__11972_SHARP_, p2__11973_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__11985)
        };
        var G__11996__4 = function() {
          var G__11997__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__11974_SHARP_, p2__11975_SHARP_) {
              return cljs.core.conj.call(null, p1__11974_SHARP_, cljs.core.apply.call(null, p2__11975_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__11985)
          };
          var G__11997 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__11997__delegate.call(this, x, y, z, args)
          };
          G__11997.cljs$lang$maxFixedArity = 3;
          G__11997.cljs$lang$applyTo = function(arglist__11998) {
            var x = cljs.core.first(arglist__11998);
            var y = cljs.core.first(cljs.core.next(arglist__11998));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11998)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11998)));
            return G__11997__delegate(x, y, z, args)
          };
          G__11997.cljs$lang$arity$variadic = G__11997__delegate;
          return G__11997
        }();
        G__11996 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__11996__0.call(this);
            case 1:
              return G__11996__1.call(this, x);
            case 2:
              return G__11996__2.call(this, x, y);
            case 3:
              return G__11996__3.call(this, x, y, z);
            default:
              return G__11996__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__11996.cljs$lang$maxFixedArity = 3;
        G__11996.cljs$lang$applyTo = G__11996__4.cljs$lang$applyTo;
        return G__11996
      }()
    };
    var G__11995 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11995__delegate.call(this, f, g, h, fs)
    };
    G__11995.cljs$lang$maxFixedArity = 3;
    G__11995.cljs$lang$applyTo = function(arglist__11999) {
      var f = cljs.core.first(arglist__11999);
      var g = cljs.core.first(cljs.core.next(arglist__11999));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11999)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11999)));
      return G__11995__delegate(f, g, h, fs)
    };
    G__11995.cljs$lang$arity$variadic = G__11995__delegate;
    return G__11995
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__12002 = cljs.core.next.call(null, coll);
        coll = G__12002;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____12001 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____12001) {
          return n > 0
        }else {
          return and__3822__auto____12001
        }
      }())) {
        var G__12003 = n - 1;
        var G__12004 = cljs.core.next.call(null, coll);
        n = G__12003;
        coll = G__12004;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__12006 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__12006), s)) {
    if(cljs.core.count.call(null, matches__12006) === 1) {
      return cljs.core.first.call(null, matches__12006)
    }else {
      return cljs.core.vec.call(null, matches__12006)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__12008 = re.exec(s);
  if(matches__12008 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__12008) === 1) {
      return cljs.core.first.call(null, matches__12008)
    }else {
      return cljs.core.vec.call(null, matches__12008)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__12013 = cljs.core.re_find.call(null, re, s);
  var match_idx__12014 = s.search(re);
  var match_str__12015 = cljs.core.coll_QMARK_.call(null, match_data__12013) ? cljs.core.first.call(null, match_data__12013) : match_data__12013;
  var post_match__12016 = cljs.core.subs.call(null, s, match_idx__12014 + cljs.core.count.call(null, match_str__12015));
  if(cljs.core.truth_(match_data__12013)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__12013, re_seq.call(null, re, post_match__12016))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__12023__12024 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___12025 = cljs.core.nth.call(null, vec__12023__12024, 0, null);
  var flags__12026 = cljs.core.nth.call(null, vec__12023__12024, 1, null);
  var pattern__12027 = cljs.core.nth.call(null, vec__12023__12024, 2, null);
  return new RegExp(pattern__12027, flags__12026)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__12017_SHARP_) {
    return print_one.call(null, p1__12017_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____12037 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____12037)) {
            var and__3822__auto____12041 = function() {
              var G__12038__12039 = obj;
              if(G__12038__12039) {
                if(function() {
                  var or__3824__auto____12040 = G__12038__12039.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____12040) {
                    return or__3824__auto____12040
                  }else {
                    return G__12038__12039.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__12038__12039.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12038__12039)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12038__12039)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____12041)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____12041
            }
          }else {
            return and__3822__auto____12037
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____12042 = !(obj == null);
          if(and__3822__auto____12042) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____12042
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__12043__12044 = obj;
          if(G__12043__12044) {
            if(function() {
              var or__3824__auto____12045 = G__12043__12044.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____12045) {
                return or__3824__auto____12045
              }else {
                return G__12043__12044.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__12043__12044.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__12043__12044)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__12043__12044)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__12065 = new goog.string.StringBuffer;
  var G__12066__12067 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__12066__12067) {
    var string__12068 = cljs.core.first.call(null, G__12066__12067);
    var G__12066__12069 = G__12066__12067;
    while(true) {
      sb__12065.append(string__12068);
      var temp__3974__auto____12070 = cljs.core.next.call(null, G__12066__12069);
      if(temp__3974__auto____12070) {
        var G__12066__12071 = temp__3974__auto____12070;
        var G__12084 = cljs.core.first.call(null, G__12066__12071);
        var G__12085 = G__12066__12071;
        string__12068 = G__12084;
        G__12066__12069 = G__12085;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__12072__12073 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__12072__12073) {
    var obj__12074 = cljs.core.first.call(null, G__12072__12073);
    var G__12072__12075 = G__12072__12073;
    while(true) {
      sb__12065.append(" ");
      var G__12076__12077 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__12074, opts));
      if(G__12076__12077) {
        var string__12078 = cljs.core.first.call(null, G__12076__12077);
        var G__12076__12079 = G__12076__12077;
        while(true) {
          sb__12065.append(string__12078);
          var temp__3974__auto____12080 = cljs.core.next.call(null, G__12076__12079);
          if(temp__3974__auto____12080) {
            var G__12076__12081 = temp__3974__auto____12080;
            var G__12086 = cljs.core.first.call(null, G__12076__12081);
            var G__12087 = G__12076__12081;
            string__12078 = G__12086;
            G__12076__12079 = G__12087;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____12082 = cljs.core.next.call(null, G__12072__12075);
      if(temp__3974__auto____12082) {
        var G__12072__12083 = temp__3974__auto____12082;
        var G__12088 = cljs.core.first.call(null, G__12072__12083);
        var G__12089 = G__12072__12083;
        obj__12074 = G__12088;
        G__12072__12075 = G__12089;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__12065
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__12091 = cljs.core.pr_sb.call(null, objs, opts);
  sb__12091.append("\n");
  return[cljs.core.str(sb__12091)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__12110__12111 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__12110__12111) {
    var string__12112 = cljs.core.first.call(null, G__12110__12111);
    var G__12110__12113 = G__12110__12111;
    while(true) {
      cljs.core.string_print.call(null, string__12112);
      var temp__3974__auto____12114 = cljs.core.next.call(null, G__12110__12113);
      if(temp__3974__auto____12114) {
        var G__12110__12115 = temp__3974__auto____12114;
        var G__12128 = cljs.core.first.call(null, G__12110__12115);
        var G__12129 = G__12110__12115;
        string__12112 = G__12128;
        G__12110__12113 = G__12129;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__12116__12117 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__12116__12117) {
    var obj__12118 = cljs.core.first.call(null, G__12116__12117);
    var G__12116__12119 = G__12116__12117;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__12120__12121 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__12118, opts));
      if(G__12120__12121) {
        var string__12122 = cljs.core.first.call(null, G__12120__12121);
        var G__12120__12123 = G__12120__12121;
        while(true) {
          cljs.core.string_print.call(null, string__12122);
          var temp__3974__auto____12124 = cljs.core.next.call(null, G__12120__12123);
          if(temp__3974__auto____12124) {
            var G__12120__12125 = temp__3974__auto____12124;
            var G__12130 = cljs.core.first.call(null, G__12120__12125);
            var G__12131 = G__12120__12125;
            string__12122 = G__12130;
            G__12120__12123 = G__12131;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____12126 = cljs.core.next.call(null, G__12116__12119);
      if(temp__3974__auto____12126) {
        var G__12116__12127 = temp__3974__auto____12126;
        var G__12132 = cljs.core.first.call(null, G__12116__12127);
        var G__12133 = G__12116__12127;
        obj__12118 = G__12132;
        G__12116__12119 = G__12133;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__12134) {
    var objs = cljs.core.seq(arglist__12134);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__12135) {
    var objs = cljs.core.seq(arglist__12135);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__12136) {
    var objs = cljs.core.seq(arglist__12136);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__12137) {
    var objs = cljs.core.seq(arglist__12137);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__12138) {
    var objs = cljs.core.seq(arglist__12138);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__12139) {
    var objs = cljs.core.seq(arglist__12139);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__12140) {
    var objs = cljs.core.seq(arglist__12140);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__12141) {
    var objs = cljs.core.seq(arglist__12141);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__12142) {
    var fmt = cljs.core.first(arglist__12142);
    var args = cljs.core.rest(arglist__12142);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12143 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12143, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12144 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12144, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12145 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12145, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____12146 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____12146)) {
        var nspc__12147 = temp__3974__auto____12146;
        return[cljs.core.str(nspc__12147), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____12148 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____12148)) {
          var nspc__12149 = temp__3974__auto____12148;
          return[cljs.core.str(nspc__12149), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12150 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12150, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__12152 = function(n, len) {
    var ns__12151 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__12151) < len) {
        var G__12154 = [cljs.core.str("0"), cljs.core.str(ns__12151)].join("");
        ns__12151 = G__12154;
        continue
      }else {
        return ns__12151
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__12152.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__12152.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__12152.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__12152.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__12152.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__12152.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12153 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12153, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__12155 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__12156 = this;
  var G__12157__12158 = cljs.core.seq.call(null, this__12156.watches);
  if(G__12157__12158) {
    var G__12160__12162 = cljs.core.first.call(null, G__12157__12158);
    var vec__12161__12163 = G__12160__12162;
    var key__12164 = cljs.core.nth.call(null, vec__12161__12163, 0, null);
    var f__12165 = cljs.core.nth.call(null, vec__12161__12163, 1, null);
    var G__12157__12166 = G__12157__12158;
    var G__12160__12167 = G__12160__12162;
    var G__12157__12168 = G__12157__12166;
    while(true) {
      var vec__12169__12170 = G__12160__12167;
      var key__12171 = cljs.core.nth.call(null, vec__12169__12170, 0, null);
      var f__12172 = cljs.core.nth.call(null, vec__12169__12170, 1, null);
      var G__12157__12173 = G__12157__12168;
      f__12172.call(null, key__12171, this$, oldval, newval);
      var temp__3974__auto____12174 = cljs.core.next.call(null, G__12157__12173);
      if(temp__3974__auto____12174) {
        var G__12157__12175 = temp__3974__auto____12174;
        var G__12182 = cljs.core.first.call(null, G__12157__12175);
        var G__12183 = G__12157__12175;
        G__12160__12167 = G__12182;
        G__12157__12168 = G__12183;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__12176 = this;
  return this$.watches = cljs.core.assoc.call(null, this__12176.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__12177 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__12177.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__12178 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__12178.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__12179 = this;
  return this__12179.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__12180 = this;
  return this__12180.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__12181 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__12195__delegate = function(x, p__12184) {
      var map__12190__12191 = p__12184;
      var map__12190__12192 = cljs.core.seq_QMARK_.call(null, map__12190__12191) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12190__12191) : map__12190__12191;
      var validator__12193 = cljs.core._lookup.call(null, map__12190__12192, "\ufdd0'validator", null);
      var meta__12194 = cljs.core._lookup.call(null, map__12190__12192, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__12194, validator__12193, null)
    };
    var G__12195 = function(x, var_args) {
      var p__12184 = null;
      if(goog.isDef(var_args)) {
        p__12184 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12195__delegate.call(this, x, p__12184)
    };
    G__12195.cljs$lang$maxFixedArity = 1;
    G__12195.cljs$lang$applyTo = function(arglist__12196) {
      var x = cljs.core.first(arglist__12196);
      var p__12184 = cljs.core.rest(arglist__12196);
      return G__12195__delegate(x, p__12184)
    };
    G__12195.cljs$lang$arity$variadic = G__12195__delegate;
    return G__12195
  }();
  atom = function(x, var_args) {
    var p__12184 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____12200 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____12200)) {
    var validate__12201 = temp__3974__auto____12200;
    if(cljs.core.truth_(validate__12201.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__12202 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__12202, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__12203__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__12203 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__12203__delegate.call(this, a, f, x, y, z, more)
    };
    G__12203.cljs$lang$maxFixedArity = 5;
    G__12203.cljs$lang$applyTo = function(arglist__12204) {
      var a = cljs.core.first(arglist__12204);
      var f = cljs.core.first(cljs.core.next(arglist__12204));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12204)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12204))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12204)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12204)))));
      return G__12203__delegate(a, f, x, y, z, more)
    };
    G__12203.cljs$lang$arity$variadic = G__12203__delegate;
    return G__12203
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__12205) {
    var iref = cljs.core.first(arglist__12205);
    var f = cljs.core.first(cljs.core.next(arglist__12205));
    var args = cljs.core.rest(cljs.core.next(arglist__12205));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__12206 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__12206.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__12207 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__12207.state, function(p__12208) {
    var map__12209__12210 = p__12208;
    var map__12209__12211 = cljs.core.seq_QMARK_.call(null, map__12209__12210) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12209__12210) : map__12209__12210;
    var curr_state__12212 = map__12209__12211;
    var done__12213 = cljs.core._lookup.call(null, map__12209__12211, "\ufdd0'done", null);
    if(cljs.core.truth_(done__12213)) {
      return curr_state__12212
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__12207.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__12234__12235 = options;
    var map__12234__12236 = cljs.core.seq_QMARK_.call(null, map__12234__12235) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12234__12235) : map__12234__12235;
    var keywordize_keys__12237 = cljs.core._lookup.call(null, map__12234__12236, "\ufdd0'keywordize-keys", null);
    var keyfn__12238 = cljs.core.truth_(keywordize_keys__12237) ? cljs.core.keyword : cljs.core.str;
    var f__12253 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2478__auto____12252 = function iter__12246(s__12247) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__12247__12250 = s__12247;
                    while(true) {
                      if(cljs.core.seq.call(null, s__12247__12250)) {
                        var k__12251 = cljs.core.first.call(null, s__12247__12250);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__12238.call(null, k__12251), thisfn.call(null, x[k__12251])], true), iter__12246.call(null, cljs.core.rest.call(null, s__12247__12250)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2478__auto____12252.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__12253.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__12254) {
    var x = cljs.core.first(arglist__12254);
    var options = cljs.core.rest(arglist__12254);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__12259 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__12263__delegate = function(args) {
      var temp__3971__auto____12260 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__12259), args, null);
      if(cljs.core.truth_(temp__3971__auto____12260)) {
        var v__12261 = temp__3971__auto____12260;
        return v__12261
      }else {
        var ret__12262 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__12259, cljs.core.assoc, args, ret__12262);
        return ret__12262
      }
    };
    var G__12263 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12263__delegate.call(this, args)
    };
    G__12263.cljs$lang$maxFixedArity = 0;
    G__12263.cljs$lang$applyTo = function(arglist__12264) {
      var args = cljs.core.seq(arglist__12264);
      return G__12263__delegate(args)
    };
    G__12263.cljs$lang$arity$variadic = G__12263__delegate;
    return G__12263
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__12266 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__12266)) {
        var G__12267 = ret__12266;
        f = G__12267;
        continue
      }else {
        return ret__12266
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__12268__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__12268 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12268__delegate.call(this, f, args)
    };
    G__12268.cljs$lang$maxFixedArity = 1;
    G__12268.cljs$lang$applyTo = function(arglist__12269) {
      var f = cljs.core.first(arglist__12269);
      var args = cljs.core.rest(arglist__12269);
      return G__12268__delegate(f, args)
    };
    G__12268.cljs$lang$arity$variadic = G__12268__delegate;
    return G__12268
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__12271 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__12271, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__12271, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____12280 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____12280) {
      return or__3824__auto____12280
    }else {
      var or__3824__auto____12281 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____12281) {
        return or__3824__auto____12281
      }else {
        var and__3822__auto____12282 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____12282) {
          var and__3822__auto____12283 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____12283) {
            var and__3822__auto____12284 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____12284) {
              var ret__12285 = true;
              var i__12286 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____12287 = cljs.core.not.call(null, ret__12285);
                  if(or__3824__auto____12287) {
                    return or__3824__auto____12287
                  }else {
                    return i__12286 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__12285
                }else {
                  var G__12288 = isa_QMARK_.call(null, h, child.call(null, i__12286), parent.call(null, i__12286));
                  var G__12289 = i__12286 + 1;
                  ret__12285 = G__12288;
                  i__12286 = G__12289;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____12284
            }
          }else {
            return and__3822__auto____12283
          }
        }else {
          return and__3822__auto____12282
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__12298 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__12299 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__12300 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__12301 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____12302 = cljs.core.contains_QMARK_.call(null, tp__12298.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__12300.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__12300.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__12298, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__12301.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__12299, parent, ta__12300), "\ufdd0'descendants":tf__12301.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__12300, tag, td__12299)})
    }();
    if(cljs.core.truth_(or__3824__auto____12302)) {
      return or__3824__auto____12302
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__12307 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__12308 = cljs.core.truth_(parentMap__12307.call(null, tag)) ? cljs.core.disj.call(null, parentMap__12307.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__12309 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__12308)) ? cljs.core.assoc.call(null, parentMap__12307, tag, childsParents__12308) : cljs.core.dissoc.call(null, parentMap__12307, tag);
    var deriv_seq__12310 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__12290_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__12290_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__12290_SHARP_), cljs.core.second.call(null, p1__12290_SHARP_)))
    }, cljs.core.seq.call(null, newParents__12309)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__12307.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__12291_SHARP_, p2__12292_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__12291_SHARP_, p2__12292_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__12310))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__12318 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____12320 = cljs.core.truth_(function() {
    var and__3822__auto____12319 = xprefs__12318;
    if(cljs.core.truth_(and__3822__auto____12319)) {
      return xprefs__12318.call(null, y)
    }else {
      return and__3822__auto____12319
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____12320)) {
    return or__3824__auto____12320
  }else {
    var or__3824__auto____12322 = function() {
      var ps__12321 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__12321) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__12321), prefer_table))) {
          }else {
          }
          var G__12325 = cljs.core.rest.call(null, ps__12321);
          ps__12321 = G__12325;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____12322)) {
      return or__3824__auto____12322
    }else {
      var or__3824__auto____12324 = function() {
        var ps__12323 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__12323) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__12323), y, prefer_table))) {
            }else {
            }
            var G__12326 = cljs.core.rest.call(null, ps__12323);
            ps__12323 = G__12326;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____12324)) {
        return or__3824__auto____12324
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____12328 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____12328)) {
    return or__3824__auto____12328
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__12346 = cljs.core.reduce.call(null, function(be, p__12338) {
    var vec__12339__12340 = p__12338;
    var k__12341 = cljs.core.nth.call(null, vec__12339__12340, 0, null);
    var ___12342 = cljs.core.nth.call(null, vec__12339__12340, 1, null);
    var e__12343 = vec__12339__12340;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__12341)) {
      var be2__12345 = cljs.core.truth_(function() {
        var or__3824__auto____12344 = be == null;
        if(or__3824__auto____12344) {
          return or__3824__auto____12344
        }else {
          return cljs.core.dominates.call(null, k__12341, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__12343 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__12345), k__12341, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__12341), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__12345)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__12345
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__12346)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__12346));
      return cljs.core.second.call(null, best_entry__12346)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____12351 = mf;
    if(and__3822__auto____12351) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____12351
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2379__auto____12352 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12353 = cljs.core._reset[goog.typeOf(x__2379__auto____12352)];
      if(or__3824__auto____12353) {
        return or__3824__auto____12353
      }else {
        var or__3824__auto____12354 = cljs.core._reset["_"];
        if(or__3824__auto____12354) {
          return or__3824__auto____12354
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____12359 = mf;
    if(and__3822__auto____12359) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____12359
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2379__auto____12360 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12361 = cljs.core._add_method[goog.typeOf(x__2379__auto____12360)];
      if(or__3824__auto____12361) {
        return or__3824__auto____12361
      }else {
        var or__3824__auto____12362 = cljs.core._add_method["_"];
        if(or__3824__auto____12362) {
          return or__3824__auto____12362
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____12367 = mf;
    if(and__3822__auto____12367) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____12367
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2379__auto____12368 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12369 = cljs.core._remove_method[goog.typeOf(x__2379__auto____12368)];
      if(or__3824__auto____12369) {
        return or__3824__auto____12369
      }else {
        var or__3824__auto____12370 = cljs.core._remove_method["_"];
        if(or__3824__auto____12370) {
          return or__3824__auto____12370
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____12375 = mf;
    if(and__3822__auto____12375) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____12375
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2379__auto____12376 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12377 = cljs.core._prefer_method[goog.typeOf(x__2379__auto____12376)];
      if(or__3824__auto____12377) {
        return or__3824__auto____12377
      }else {
        var or__3824__auto____12378 = cljs.core._prefer_method["_"];
        if(or__3824__auto____12378) {
          return or__3824__auto____12378
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____12383 = mf;
    if(and__3822__auto____12383) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____12383
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2379__auto____12384 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12385 = cljs.core._get_method[goog.typeOf(x__2379__auto____12384)];
      if(or__3824__auto____12385) {
        return or__3824__auto____12385
      }else {
        var or__3824__auto____12386 = cljs.core._get_method["_"];
        if(or__3824__auto____12386) {
          return or__3824__auto____12386
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____12391 = mf;
    if(and__3822__auto____12391) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____12391
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2379__auto____12392 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12393 = cljs.core._methods[goog.typeOf(x__2379__auto____12392)];
      if(or__3824__auto____12393) {
        return or__3824__auto____12393
      }else {
        var or__3824__auto____12394 = cljs.core._methods["_"];
        if(or__3824__auto____12394) {
          return or__3824__auto____12394
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____12399 = mf;
    if(and__3822__auto____12399) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____12399
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2379__auto____12400 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12401 = cljs.core._prefers[goog.typeOf(x__2379__auto____12400)];
      if(or__3824__auto____12401) {
        return or__3824__auto____12401
      }else {
        var or__3824__auto____12402 = cljs.core._prefers["_"];
        if(or__3824__auto____12402) {
          return or__3824__auto____12402
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____12407 = mf;
    if(and__3822__auto____12407) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____12407
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2379__auto____12408 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12409 = cljs.core._dispatch[goog.typeOf(x__2379__auto____12408)];
      if(or__3824__auto____12409) {
        return or__3824__auto____12409
      }else {
        var or__3824__auto____12410 = cljs.core._dispatch["_"];
        if(or__3824__auto____12410) {
          return or__3824__auto____12410
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__12413 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__12414 = cljs.core._get_method.call(null, mf, dispatch_val__12413);
  if(cljs.core.truth_(target_fn__12414)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__12413)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__12414, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__12415 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__12416 = this;
  cljs.core.swap_BANG_.call(null, this__12416.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__12416.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__12416.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__12416.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__12417 = this;
  cljs.core.swap_BANG_.call(null, this__12417.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__12417.method_cache, this__12417.method_table, this__12417.cached_hierarchy, this__12417.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__12418 = this;
  cljs.core.swap_BANG_.call(null, this__12418.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__12418.method_cache, this__12418.method_table, this__12418.cached_hierarchy, this__12418.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__12419 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__12419.cached_hierarchy), cljs.core.deref.call(null, this__12419.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__12419.method_cache, this__12419.method_table, this__12419.cached_hierarchy, this__12419.hierarchy)
  }
  var temp__3971__auto____12420 = cljs.core.deref.call(null, this__12419.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____12420)) {
    var target_fn__12421 = temp__3971__auto____12420;
    return target_fn__12421
  }else {
    var temp__3971__auto____12422 = cljs.core.find_and_cache_best_method.call(null, this__12419.name, dispatch_val, this__12419.hierarchy, this__12419.method_table, this__12419.prefer_table, this__12419.method_cache, this__12419.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____12422)) {
      var target_fn__12423 = temp__3971__auto____12422;
      return target_fn__12423
    }else {
      return cljs.core.deref.call(null, this__12419.method_table).call(null, this__12419.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__12424 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__12424.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__12424.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__12424.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__12424.method_cache, this__12424.method_table, this__12424.cached_hierarchy, this__12424.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__12425 = this;
  return cljs.core.deref.call(null, this__12425.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__12426 = this;
  return cljs.core.deref.call(null, this__12426.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__12427 = this;
  return cljs.core.do_dispatch.call(null, mf, this__12427.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__12429__delegate = function(_, args) {
    var self__12428 = this;
    return cljs.core._dispatch.call(null, self__12428, args)
  };
  var G__12429 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__12429__delegate.call(this, _, args)
  };
  G__12429.cljs$lang$maxFixedArity = 1;
  G__12429.cljs$lang$applyTo = function(arglist__12430) {
    var _ = cljs.core.first(arglist__12430);
    var args = cljs.core.rest(arglist__12430);
    return G__12429__delegate(_, args)
  };
  G__12429.cljs$lang$arity$variadic = G__12429__delegate;
  return G__12429
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__12431 = this;
  return cljs.core._dispatch.call(null, self__12431, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__12432 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_12434, _) {
  var this__12433 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__12433.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__12435 = this;
  var and__3822__auto____12436 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____12436) {
    return this__12435.uuid === other.uuid
  }else {
    return and__3822__auto____12436
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__12437 = this;
  var this__12438 = this;
  return cljs.core.pr_str.call(null, this__12438)
};
cljs.core.UUID;
goog.provide("jayq.util");
goog.require("cljs.core");
jayq.util.map__GT_js = function map__GT_js(m) {
  var out__8283 = {};
  var G__8284__8285 = cljs.core.seq.call(null, m);
  if(G__8284__8285) {
    var G__8287__8289 = cljs.core.first.call(null, G__8284__8285);
    var vec__8288__8290 = G__8287__8289;
    var k__8291 = cljs.core.nth.call(null, vec__8288__8290, 0, null);
    var v__8292 = cljs.core.nth.call(null, vec__8288__8290, 1, null);
    var G__8284__8293 = G__8284__8285;
    var G__8287__8294 = G__8287__8289;
    var G__8284__8295 = G__8284__8293;
    while(true) {
      var vec__8296__8297 = G__8287__8294;
      var k__8298 = cljs.core.nth.call(null, vec__8296__8297, 0, null);
      var v__8299 = cljs.core.nth.call(null, vec__8296__8297, 1, null);
      var G__8284__8300 = G__8284__8295;
      out__8283[cljs.core.name.call(null, k__8298)] = v__8299;
      var temp__3974__auto____8301 = cljs.core.next.call(null, G__8284__8300);
      if(temp__3974__auto____8301) {
        var G__8284__8302 = temp__3974__auto____8301;
        var G__8303 = cljs.core.first.call(null, G__8284__8302);
        var G__8304 = G__8284__8302;
        G__8287__8294 = G__8303;
        G__8284__8295 = G__8304;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return out__8283
};
jayq.util.wait = function wait(ms, func) {
  return setTimeout(func, ms)
};
jayq.util.log = function() {
  var log__delegate = function(v, text) {
    var vs__8306 = cljs.core.string_QMARK_.call(null, v) ? cljs.core.apply.call(null, cljs.core.str, v, text) : v;
    return console.log(vs__8306)
  };
  var log = function(v, var_args) {
    var text = null;
    if(goog.isDef(var_args)) {
      text = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return log__delegate.call(this, v, text)
  };
  log.cljs$lang$maxFixedArity = 1;
  log.cljs$lang$applyTo = function(arglist__8307) {
    var v = cljs.core.first(arglist__8307);
    var text = cljs.core.rest(arglist__8307);
    return log__delegate(v, text)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
jayq.util.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.symbol_QMARK_.call(null, x)) {
        return cljs.core.name.call(null, cljs.core.name.call(null, x))
      }else {
        if(cljs.core.map_QMARK_.call(null, x)) {
          return cljs.core.reduce.call(null, function(m, p__8313) {
            var vec__8314__8315 = p__8313;
            var k__8316 = cljs.core.nth.call(null, vec__8314__8315, 0, null);
            var v__8317 = cljs.core.nth.call(null, vec__8314__8315, 1, null);
            return cljs.core.assoc.call(null, m, clj__GT_js.call(null, k__8316), clj__GT_js.call(null, v__8317))
          }, cljs.core.ObjMap.EMPTY, x).strobj
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__12972 = s;
      var limit__12973 = limit;
      var parts__12974 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__12973, 1)) {
          return cljs.core.conj.call(null, parts__12974, s__12972)
        }else {
          var temp__3971__auto____12975 = cljs.core.re_find.call(null, re, s__12972);
          if(cljs.core.truth_(temp__3971__auto____12975)) {
            var m__12976 = temp__3971__auto____12975;
            var index__12977 = s__12972.indexOf(m__12976);
            var G__12978 = s__12972.substring(index__12977 + cljs.core.count.call(null, m__12976));
            var G__12979 = limit__12973 - 1;
            var G__12980 = cljs.core.conj.call(null, parts__12974, s__12972.substring(0, index__12977));
            s__12972 = G__12978;
            limit__12973 = G__12979;
            parts__12974 = G__12980;
            continue
          }else {
            return cljs.core.conj.call(null, parts__12974, s__12972)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__12984 = s.length;
  while(true) {
    if(index__12984 === 0) {
      return""
    }else {
      var ch__12985 = cljs.core._lookup.call(null, s, index__12984 - 1, null);
      if(function() {
        var or__3824__auto____12986 = cljs.core._EQ_.call(null, ch__12985, "\n");
        if(or__3824__auto____12986) {
          return or__3824__auto____12986
        }else {
          return cljs.core._EQ_.call(null, ch__12985, "\r")
        }
      }()) {
        var G__12987 = index__12984 - 1;
        index__12984 = G__12987;
        continue
      }else {
        return s.substring(0, index__12984)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__12991 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____12992 = cljs.core.not.call(null, s__12991);
    if(or__3824__auto____12992) {
      return or__3824__auto____12992
    }else {
      var or__3824__auto____12993 = cljs.core._EQ_.call(null, "", s__12991);
      if(or__3824__auto____12993) {
        return or__3824__auto____12993
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__12991)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__13000 = new goog.string.StringBuffer;
  var length__13001 = s.length;
  var index__13002 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__13001, index__13002)) {
      return buffer__13000.toString()
    }else {
      var ch__13003 = s.charAt(index__13002);
      var temp__3971__auto____13004 = cljs.core._lookup.call(null, cmap, ch__13003, null);
      if(cljs.core.truth_(temp__3971__auto____13004)) {
        var replacement__13005 = temp__3971__auto____13004;
        buffer__13000.append([cljs.core.str(replacement__13005)].join(""))
      }else {
        buffer__13000.append(ch__13003)
      }
      var G__13006 = index__13002 + 1;
      index__13002 = G__13006;
      continue
    }
    break
  }
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("jayq.util");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    if(cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__3971__auto____8320 = jayq.core.crate_meta.call(null, sel);
      if(cljs.core.truth_(temp__3971__auto____8320)) {
        var cm__8321 = temp__3971__auto____8320;
        return[cljs.core.str("[crateGroup="), cljs.core.str(cm__8321), cljs.core.str("]")].join("")
      }else {
        return sel
      }
    }else {
      if(cljs.core.keyword_QMARK_.call(null, sel)) {
        return cljs.core.name.call(null, sel)
      }else {
        if("\ufdd0'else") {
          return sel
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.$ = function() {
  var $__delegate = function(sel, p__8322) {
    var vec__8326__8327 = p__8322;
    var context__8328 = cljs.core.nth.call(null, vec__8326__8327, 0, null);
    if(cljs.core.not.call(null, context__8328)) {
      return jQuery(jayq.core.__GT_selector.call(null, sel))
    }else {
      return jQuery(jayq.core.__GT_selector.call(null, sel), context__8328)
    }
  };
  var $ = function(sel, var_args) {
    var p__8322 = null;
    if(goog.isDef(var_args)) {
      p__8322 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return $__delegate.call(this, sel, p__8322)
  };
  $.cljs$lang$maxFixedArity = 1;
  $.cljs$lang$applyTo = function(arglist__8329) {
    var sel = cljs.core.first(arglist__8329);
    var p__8322 = cljs.core.rest(arglist__8329);
    return $__delegate(sel, p__8322)
  };
  $.cljs$lang$arity$variadic = $__delegate;
  return $
}();
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____8330 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____8330)) {
    return or__3824__auto____8330
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
jQuery.prototype.call = function() {
  var G__8331 = null;
  var G__8331__2 = function(_, k) {
    return cljs.core._lookup.call(null, this, k)
  };
  var G__8331__3 = function(_, k, not_found) {
    return cljs.core._lookup.call(null, this, k, not_found)
  };
  G__8331 = function(_, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8331__2.call(this, _, k);
      case 3:
        return G__8331__3.call(this, _, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8331
}();
jayq.core.anim = function anim(elem, props, dur) {
  return elem.animate(jayq.util.clj__GT_js.call(null, props), dur)
};
jayq.core.text = function() {
  var text = null;
  var text__1 = function($elem) {
    return $elem.text()
  };
  var text__2 = function($elem, txt) {
    return $elem.text(txt)
  };
  text = function($elem, txt) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, $elem);
      case 2:
        return text__2.call(this, $elem, txt)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
jayq.core.css = function css($elem, opts) {
  if(cljs.core.keyword_QMARK_.call(null, opts)) {
    return $elem.css(cljs.core.name.call(null, opts))
  }else {
    return $elem.css(jayq.util.clj__GT_js.call(null, opts))
  }
};
jayq.core.attr = function() {
  var attr__delegate = function($elem, a, p__8332) {
    var vec__8337__8338 = p__8332;
    var v__8339 = cljs.core.nth.call(null, vec__8337__8338, 0, null);
    if(cljs.core.map_QMARK_.call(null, a)) {
      return $elem.attr(jayq.util.clj__GT_js.call(null, a))
    }else {
      var a__8340 = cljs.core.name.call(null, a);
      if(cljs.core.not.call(null, v__8339)) {
        return $elem.attr(a__8340)
      }else {
        return $elem.attr(a__8340, v__8339)
      }
    }
  };
  var attr = function($elem, a, var_args) {
    var p__8332 = null;
    if(goog.isDef(var_args)) {
      p__8332 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return attr__delegate.call(this, $elem, a, p__8332)
  };
  attr.cljs$lang$maxFixedArity = 2;
  attr.cljs$lang$applyTo = function(arglist__8341) {
    var $elem = cljs.core.first(arglist__8341);
    var a = cljs.core.first(cljs.core.next(arglist__8341));
    var p__8332 = cljs.core.rest(cljs.core.next(arglist__8341));
    return attr__delegate($elem, a, p__8332)
  };
  attr.cljs$lang$arity$variadic = attr__delegate;
  return attr
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name.call(null, a))
};
jayq.core.data = function() {
  var data__delegate = function($elem, k, p__8342) {
    var vec__8347__8348 = p__8342;
    var v__8349 = cljs.core.nth.call(null, vec__8347__8348, 0, null);
    var k__8350 = cljs.core.name.call(null, k);
    if(cljs.core.not.call(null, v__8349)) {
      return $elem.data(k__8350)
    }else {
      return $elem.data(k__8350, v__8349)
    }
  };
  var data = function($elem, k, var_args) {
    var p__8342 = null;
    if(goog.isDef(var_args)) {
      p__8342 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return data__delegate.call(this, $elem, k, p__8342)
  };
  data.cljs$lang$maxFixedArity = 2;
  data.cljs$lang$applyTo = function(arglist__8351) {
    var $elem = cljs.core.first(arglist__8351);
    var k = cljs.core.first(cljs.core.next(arglist__8351));
    var p__8342 = cljs.core.rest(cljs.core.next(arglist__8351));
    return data__delegate($elem, k, p__8342)
  };
  data.cljs$lang$arity$variadic = data__delegate;
  return data
}();
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), "\ufdd0'keywordize-keys", true)
};
jayq.core.add_class = function add_class($elem, cl) {
  var cl__8353 = cljs.core.name.call(null, cl);
  return $elem.addClass(cl__8353)
};
jayq.core.remove_class = function remove_class($elem, cl) {
  var cl__8355 = cljs.core.name.call(null, cl);
  return $elem.removeClass(cl__8355)
};
jayq.core.toggle_class = function toggle_class($elem, cl) {
  var cl__8357 = cljs.core.name.call(null, cl);
  return $elem.toggleClass(cl__8357)
};
jayq.core.has_class = function has_class($elem, cl) {
  var cl__8359 = cljs.core.name.call(null, cl);
  return $elem.hasClass(cl__8359)
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content)
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content)
};
jayq.core.append = function append($elem, content) {
  if(cljs.core.vector_QMARK_.call(null, content)) {
    return $elem.append(jayq.util.clj__GT_js.call(null, content))
  }else {
    return $elem.append(content)
  }
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content)
};
jayq.core.remove = function remove($elem) {
  return $elem.remove()
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__8360) {
    var vec__8365__8366 = p__8360;
    var speed__8367 = cljs.core.nth.call(null, vec__8365__8366, 0, null);
    var on_finish__8368 = cljs.core.nth.call(null, vec__8365__8366, 1, null);
    return $elem.hide(speed__8367, on_finish__8368)
  };
  var hide = function($elem, var_args) {
    var p__8360 = null;
    if(goog.isDef(var_args)) {
      p__8360 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return hide__delegate.call(this, $elem, p__8360)
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__8369) {
    var $elem = cljs.core.first(arglist__8369);
    var p__8360 = cljs.core.rest(arglist__8369);
    return hide__delegate($elem, p__8360)
  };
  hide.cljs$lang$arity$variadic = hide__delegate;
  return hide
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__8370) {
    var vec__8375__8376 = p__8370;
    var speed__8377 = cljs.core.nth.call(null, vec__8375__8376, 0, null);
    var on_finish__8378 = cljs.core.nth.call(null, vec__8375__8376, 1, null);
    return $elem.show(speed__8377, on_finish__8378)
  };
  var show = function($elem, var_args) {
    var p__8370 = null;
    if(goog.isDef(var_args)) {
      p__8370 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return show__delegate.call(this, $elem, p__8370)
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__8379) {
    var $elem = cljs.core.first(arglist__8379);
    var p__8370 = cljs.core.rest(arglist__8379);
    return show__delegate($elem, p__8370)
  };
  show.cljs$lang$arity$variadic = show__delegate;
  return show
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__8380) {
    var vec__8385__8386 = p__8380;
    var speed__8387 = cljs.core.nth.call(null, vec__8385__8386, 0, null);
    var on_finish__8388 = cljs.core.nth.call(null, vec__8385__8386, 1, null);
    return $elem.toggle(speed__8387, on_finish__8388)
  };
  var toggle = function($elem, var_args) {
    var p__8380 = null;
    if(goog.isDef(var_args)) {
      p__8380 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return toggle__delegate.call(this, $elem, p__8380)
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__8389) {
    var $elem = cljs.core.first(arglist__8389);
    var p__8380 = cljs.core.rest(arglist__8389);
    return toggle__delegate($elem, p__8380)
  };
  toggle.cljs$lang$arity$variadic = toggle__delegate;
  return toggle
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__8390) {
    var vec__8395__8396 = p__8390;
    var speed__8397 = cljs.core.nth.call(null, vec__8395__8396, 0, null);
    var on_finish__8398 = cljs.core.nth.call(null, vec__8395__8396, 1, null);
    return $elem.fadeOut(speed__8397, on_finish__8398)
  };
  var fade_out = function($elem, var_args) {
    var p__8390 = null;
    if(goog.isDef(var_args)) {
      p__8390 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_out__delegate.call(this, $elem, p__8390)
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__8399) {
    var $elem = cljs.core.first(arglist__8399);
    var p__8390 = cljs.core.rest(arglist__8399);
    return fade_out__delegate($elem, p__8390)
  };
  fade_out.cljs$lang$arity$variadic = fade_out__delegate;
  return fade_out
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__8400) {
    var vec__8405__8406 = p__8400;
    var speed__8407 = cljs.core.nth.call(null, vec__8405__8406, 0, null);
    var on_finish__8408 = cljs.core.nth.call(null, vec__8405__8406, 1, null);
    return $elem.fadeIn(speed__8407, on_finish__8408)
  };
  var fade_in = function($elem, var_args) {
    var p__8400 = null;
    if(goog.isDef(var_args)) {
      p__8400 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_in__delegate.call(this, $elem, p__8400)
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__8409) {
    var $elem = cljs.core.first(arglist__8409);
    var p__8400 = cljs.core.rest(arglist__8409);
    return fade_in__delegate($elem, p__8400)
  };
  fade_in.cljs$lang$arity$variadic = fade_in__delegate;
  return fade_in
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__8410) {
    var vec__8415__8416 = p__8410;
    var speed__8417 = cljs.core.nth.call(null, vec__8415__8416, 0, null);
    var on_finish__8418 = cljs.core.nth.call(null, vec__8415__8416, 1, null);
    return $elem.slideUp(speed__8417, on_finish__8418)
  };
  var slide_up = function($elem, var_args) {
    var p__8410 = null;
    if(goog.isDef(var_args)) {
      p__8410 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_up__delegate.call(this, $elem, p__8410)
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__8419) {
    var $elem = cljs.core.first(arglist__8419);
    var p__8410 = cljs.core.rest(arglist__8419);
    return slide_up__delegate($elem, p__8410)
  };
  slide_up.cljs$lang$arity$variadic = slide_up__delegate;
  return slide_up
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__8420) {
    var vec__8425__8426 = p__8420;
    var speed__8427 = cljs.core.nth.call(null, vec__8425__8426, 0, null);
    var on_finish__8428 = cljs.core.nth.call(null, vec__8425__8426, 1, null);
    return $elem.slideDown(speed__8427, on_finish__8428)
  };
  var slide_down = function($elem, var_args) {
    var p__8420 = null;
    if(goog.isDef(var_args)) {
      p__8420 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_down__delegate.call(this, $elem, p__8420)
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__8429) {
    var $elem = cljs.core.first(arglist__8429);
    var p__8420 = cljs.core.rest(arglist__8429);
    return slide_down__delegate($elem, p__8420)
  };
  slide_down.cljs$lang$arity$variadic = slide_down__delegate;
  return slide_down
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent()
};
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector))
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__8430) {
    var vec__8434__8435 = p__8430;
    var context__8436 = cljs.core.nth.call(null, vec__8434__8435, 0, null);
    return $elem.closest(selector, context__8436)
  };
  var closest = function($elem, selector, var_args) {
    var p__8430 = null;
    if(goog.isDef(var_args)) {
      p__8430 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return closest__delegate.call(this, $elem, selector, p__8430)
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__8437) {
    var $elem = cljs.core.first(arglist__8437);
    var selector = cljs.core.first(cljs.core.next(arglist__8437));
    var p__8430 = cljs.core.rest(cljs.core.next(arglist__8437));
    return closest__delegate($elem, selector, p__8430)
  };
  closest.cljs$lang$arity$variadic = closest__delegate;
  return closest
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone()
};
jayq.core.inner = function inner($elem, v) {
  return $elem.html(v)
};
jayq.core.empty = function empty($elem) {
  return $elem.empty()
};
jayq.core.val = function() {
  var val__delegate = function($elem, p__8438) {
    var vec__8442__8443 = p__8438;
    var v__8444 = cljs.core.nth.call(null, vec__8442__8443, 0, null);
    if(cljs.core.truth_(v__8444)) {
      return $elem.val(v__8444)
    }else {
      return $elem.val()
    }
  };
  var val = function($elem, var_args) {
    var p__8438 = null;
    if(goog.isDef(var_args)) {
      p__8438 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return val__delegate.call(this, $elem, p__8438)
  };
  val.cljs$lang$maxFixedArity = 1;
  val.cljs$lang$applyTo = function(arglist__8445) {
    var $elem = cljs.core.first(arglist__8445);
    var p__8438 = cljs.core.rest(arglist__8445);
    return val__delegate($elem, p__8438)
  };
  val.cljs$lang$arity$variadic = val__delegate;
  return val
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize()
};
jayq.core.queue = function queue($elem, callback) {
  return $elem.queue(callback)
};
jayq.core.dequeue = function dequeue(elem) {
  return jayq.core.$.call(null, elem).dequeue()
};
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func)
};
jayq.core.xhr = function xhr(p__8446, content, callback) {
  var vec__8452__8453 = p__8446;
  var method__8454 = cljs.core.nth.call(null, vec__8452__8453, 0, null);
  var uri__8455 = cljs.core.nth.call(null, vec__8452__8453, 1, null);
  var params__8456 = jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'data", "\ufdd0'success"], {"\ufdd0'type":clojure.string.upper_case.call(null, cljs.core.name.call(null, method__8454)), "\ufdd0'data":jayq.util.clj__GT_js.call(null, content), "\ufdd0'success":callback}));
  return jQuery.ajax(uri__8455, params__8456)
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.util.clj__GT_js.call(null, settings))
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.util.clj__GT_js.call(null, settings))
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ajax.cljs$lang$arity$1 = ajax__1;
  ajax.cljs$lang$arity$2 = ajax__2;
  return ajax
}();
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func)
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__8457) {
    var vec__8461__8462 = p__8457;
    var func__8463 = cljs.core.nth.call(null, vec__8461__8462, 0, null);
    return $elem.unbind(cljs.core.name.call(null, ev), func__8463)
  };
  var unbind = function($elem, ev, var_args) {
    var p__8457 = null;
    if(goog.isDef(var_args)) {
      p__8457 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unbind__delegate.call(this, $elem, ev, p__8457)
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__8464) {
    var $elem = cljs.core.first(arglist__8464);
    var ev = cljs.core.first(cljs.core.next(arglist__8464));
    var p__8457 = cljs.core.rest(cljs.core.next(arglist__8464));
    return unbind__delegate($elem, ev, p__8457)
  };
  unbind.cljs$lang$arity$variadic = unbind__delegate;
  return unbind
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev))
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func)
};
jayq.core.__GT_event = function __GT_event(e) {
  if(cljs.core.keyword_QMARK_.call(null, e)) {
    return cljs.core.name.call(null, e)
  }else {
    if(cljs.core.map_QMARK_.call(null, e)) {
      return jayq.util.clj__GT_js.call(null, e)
    }else {
      if(cljs.core.coll_QMARK_.call(null, e)) {
        return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e))
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Unknown event type: "), cljs.core.str(e)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__8465) {
    var vec__8471__8472 = p__8465;
    var sel__8473 = cljs.core.nth.call(null, vec__8471__8472, 0, null);
    var data__8474 = cljs.core.nth.call(null, vec__8471__8472, 1, null);
    var handler__8475 = cljs.core.nth.call(null, vec__8471__8472, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__8473), data__8474, handler__8475)
  };
  var on = function($elem, events, var_args) {
    var p__8465 = null;
    if(goog.isDef(var_args)) {
      p__8465 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return on__delegate.call(this, $elem, events, p__8465)
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__8476) {
    var $elem = cljs.core.first(arglist__8476);
    var events = cljs.core.first(cljs.core.next(arglist__8476));
    var p__8465 = cljs.core.rest(cljs.core.next(arglist__8476));
    return on__delegate($elem, events, p__8465)
  };
  on.cljs$lang$arity$variadic = on__delegate;
  return on
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__8477) {
    var vec__8483__8484 = p__8477;
    var sel__8485 = cljs.core.nth.call(null, vec__8483__8484, 0, null);
    var data__8486 = cljs.core.nth.call(null, vec__8483__8484, 1, null);
    var handler__8487 = cljs.core.nth.call(null, vec__8483__8484, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__8485), data__8486, handler__8487)
  };
  var one = function($elem, events, var_args) {
    var p__8477 = null;
    if(goog.isDef(var_args)) {
      p__8477 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return one__delegate.call(this, $elem, events, p__8477)
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__8488) {
    var $elem = cljs.core.first(arglist__8488);
    var events = cljs.core.first(cljs.core.next(arglist__8488));
    var p__8477 = cljs.core.rest(cljs.core.next(arglist__8488));
    return one__delegate($elem, events, p__8477)
  };
  one.cljs$lang$arity$variadic = one__delegate;
  return one
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__8489) {
    var vec__8494__8495 = p__8489;
    var sel__8496 = cljs.core.nth.call(null, vec__8494__8495, 0, null);
    var handler__8497 = cljs.core.nth.call(null, vec__8494__8495, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__8496), handler__8497)
  };
  var off = function($elem, events, var_args) {
    var p__8489 = null;
    if(goog.isDef(var_args)) {
      p__8489 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return off__delegate.call(this, $elem, events, p__8489)
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__8498) {
    var $elem = cljs.core.first(arglist__8498);
    var events = cljs.core.first(cljs.core.next(arglist__8498));
    var p__8489 = cljs.core.rest(cljs.core.next(arglist__8498));
    return off__delegate($elem, events, p__8489)
  };
  off.cljs$lang$arity$variadic = off__delegate;
  return off
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault()
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("flapjax.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("jayq.core");
flapjax.core._STAR_clicksE_STAR_ = clicksE(document.body);
flapjax.core._STAR_initialize_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
flapjax.core.init_BANG_ = function init_BANG_(f) {
  return cljs.core.swap_BANG_.call(null, flapjax.core._STAR_initialize_STAR_, cljs.core.into, cljs.core.PersistentVector.fromArray([f], true))
};
flapjax.core.initialize = function initialize() {
  var fs__8091 = cljs.core.deref.call(null, flapjax.core._STAR_initialize_STAR_);
  cljs.core.swap_BANG_.call(null, flapjax.core._STAR_initialize_STAR_, function(x) {
    return cljs.core.PersistentVector.EMPTY
  });
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__8089_SHARP_) {
    return p1__8089_SHARP_.call(null)
  }, fs__8091))
};
flapjax.core.filter_id = function filter_id(id) {
  return function(v) {
    return 0 < jayq.core.$.call(null, v.target).parentsUntil("body").andSelf().filter([cljs.core.str("[hl~='"), cljs.core.str(id), cljs.core.str("']")].join("")).size()
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____12526 = reader;
    if(and__3822__auto____12526) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____12526
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2379__auto____12527 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____12528 = cljs.reader.read_char[goog.typeOf(x__2379__auto____12527)];
      if(or__3824__auto____12528) {
        return or__3824__auto____12528
      }else {
        var or__3824__auto____12529 = cljs.reader.read_char["_"];
        if(or__3824__auto____12529) {
          return or__3824__auto____12529
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____12534 = reader;
    if(and__3822__auto____12534) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____12534
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2379__auto____12535 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____12536 = cljs.reader.unread[goog.typeOf(x__2379__auto____12535)];
      if(or__3824__auto____12536) {
        return or__3824__auto____12536
      }else {
        var or__3824__auto____12537 = cljs.reader.unread["_"];
        if(or__3824__auto____12537) {
          return or__3824__auto____12537
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2325__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__12538 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__12538.buffer_atom))) {
    var idx__12539 = cljs.core.deref.call(null, this__12538.index_atom);
    cljs.core.swap_BANG_.call(null, this__12538.index_atom, cljs.core.inc);
    return this__12538.s[idx__12539]
  }else {
    var buf__12540 = cljs.core.deref.call(null, this__12538.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__12538.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__12540)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__12541 = this;
  return cljs.core.swap_BANG_.call(null, this__12541.buffer_atom, function(p1__12521_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__12521_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____12543 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____12543)) {
    return or__3824__auto____12543
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____12548 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____12548) {
    return or__3824__auto____12548
  }else {
    var and__3822__auto____12550 = function() {
      var or__3824__auto____12549 = "+" === initch;
      if(or__3824__auto____12549) {
        return or__3824__auto____12549
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____12550)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__12551 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__12551);
        return next_ch__12551
      }())
    }else {
      return and__3822__auto____12550
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__12552) {
    var rdr = cljs.core.first(arglist__12552);
    var msg = cljs.core.rest(arglist__12552);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____12556 = !(ch === "#");
  if(and__3822__auto____12556) {
    var and__3822__auto____12557 = !(ch === "'");
    if(and__3822__auto____12557) {
      var and__3822__auto____12558 = !(ch === ":");
      if(and__3822__auto____12558) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____12558
      }
    }else {
      return and__3822__auto____12557
    }
  }else {
    return and__3822__auto____12556
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__12563 = new goog.string.StringBuffer(initch);
  var ch__12564 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____12565 = ch__12564 == null;
      if(or__3824__auto____12565) {
        return or__3824__auto____12565
      }else {
        var or__3824__auto____12566 = cljs.reader.whitespace_QMARK_.call(null, ch__12564);
        if(or__3824__auto____12566) {
          return or__3824__auto____12566
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__12564)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__12564);
      return sb__12563.toString()
    }else {
      var G__12567 = function() {
        sb__12563.append(ch__12564);
        return sb__12563
      }();
      var G__12568 = cljs.reader.read_char.call(null, rdr);
      sb__12563 = G__12567;
      ch__12564 = G__12568;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__12572 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____12573 = ch__12572 === "n";
      if(or__3824__auto____12573) {
        return or__3824__auto____12573
      }else {
        var or__3824__auto____12574 = ch__12572 === "r";
        if(or__3824__auto____12574) {
          return or__3824__auto____12574
        }else {
          return ch__12572 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__12576 = re.exec(s);
  if(matches__12576 == null) {
    return null
  }else {
    if(matches__12576.length === 1) {
      return matches__12576[0]
    }else {
      return matches__12576
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__12584 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__12585 = groups__12584[2];
  if(!function() {
    var or__3824__auto____12586 = group3__12585 == null;
    if(or__3824__auto____12586) {
      return or__3824__auto____12586
    }else {
      return group3__12585.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__12587 = "-" === groups__12584[1] ? -1 : 1;
    var a__12588 = cljs.core.truth_(groups__12584[3]) ? [groups__12584[3], 10] : cljs.core.truth_(groups__12584[4]) ? [groups__12584[4], 16] : cljs.core.truth_(groups__12584[5]) ? [groups__12584[5], 8] : cljs.core.truth_(groups__12584[7]) ? [groups__12584[7], parseInt(groups__12584[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__12589 = a__12588[0];
    var radix__12590 = a__12588[1];
    if(n__12589 == null) {
      return null
    }else {
      return negate__12587 * parseInt(n__12589, radix__12590)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__12594 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__12595 = groups__12594[1];
  var denominator__12596 = groups__12594[2];
  return parseInt(numinator__12595) / parseInt(denominator__12596)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__12599 = re.exec(s);
  if(function() {
    var and__3822__auto____12600 = !(matches__12599 == null);
    if(and__3822__auto____12600) {
      return matches__12599[0] === s
    }else {
      return and__3822__auto____12600
    }
  }()) {
    if(matches__12599.length === 1) {
      return matches__12599[0]
    }else {
      return matches__12599
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__12602 = parseInt(code_str, 16);
  return String.fromCharCode(code__12602)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__12605 = cljs.reader.read_char.call(null, reader);
  var mapresult__12606 = cljs.reader.escape_char_map.call(null, ch__12605);
  if(cljs.core.truth_(mapresult__12606)) {
    return mapresult__12606
  }else {
    if(ch__12605 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__12605, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__12605 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__12605, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__12605)) {
          return String.fromCharCode(ch__12605)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__12605)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__12608 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__12608))) {
      var G__12609 = cljs.reader.read_char.call(null, rdr);
      ch__12608 = G__12609;
      continue
    }else {
      return ch__12608
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__12616 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__12617 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__12617)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__12617) {
      return cljs.core.persistent_BANG_.call(null, a__12616)
    }else {
      var temp__3971__auto____12618 = cljs.reader.macros.call(null, ch__12617);
      if(cljs.core.truth_(temp__3971__auto____12618)) {
        var macrofn__12619 = temp__3971__auto____12618;
        var mret__12620 = macrofn__12619.call(null, rdr, ch__12617);
        var G__12622 = mret__12620 === rdr ? a__12616 : cljs.core.conj_BANG_.call(null, a__12616, mret__12620);
        a__12616 = G__12622;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__12617);
        var o__12621 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__12623 = o__12621 === rdr ? a__12616 : cljs.core.conj_BANG_.call(null, a__12616, o__12621);
        a__12616 = G__12623;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__12628 = cljs.reader.read_char.call(null, rdr);
  var dm__12629 = cljs.reader.dispatch_macros.call(null, ch__12628);
  if(cljs.core.truth_(dm__12629)) {
    return dm__12629.call(null, rdr, _)
  }else {
    var temp__3971__auto____12630 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__12628);
    if(cljs.core.truth_(temp__3971__auto____12630)) {
      var obj__12631 = temp__3971__auto____12630;
      return obj__12631
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__12628)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__12633 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__12633))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__12633)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__12640 = new goog.string.StringBuffer(initch);
  var ch__12641 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____12642 = ch__12641 == null;
      if(or__3824__auto____12642) {
        return or__3824__auto____12642
      }else {
        var or__3824__auto____12643 = cljs.reader.whitespace_QMARK_.call(null, ch__12641);
        if(or__3824__auto____12643) {
          return or__3824__auto____12643
        }else {
          return cljs.reader.macros.call(null, ch__12641)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__12641);
      var s__12644 = buffer__12640.toString();
      var or__3824__auto____12645 = cljs.reader.match_number.call(null, s__12644);
      if(cljs.core.truth_(or__3824__auto____12645)) {
        return or__3824__auto____12645
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__12644, "]")
      }
    }else {
      var G__12646 = function() {
        buffer__12640.append(ch__12641);
        return buffer__12640
      }();
      var G__12647 = cljs.reader.read_char.call(null, reader);
      buffer__12640 = G__12646;
      ch__12641 = G__12647;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__12650 = new goog.string.StringBuffer;
  var ch__12651 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__12651 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__12651) {
        var G__12652 = function() {
          buffer__12650.append(cljs.reader.escape_char.call(null, buffer__12650, reader));
          return buffer__12650
        }();
        var G__12653 = cljs.reader.read_char.call(null, reader);
        buffer__12650 = G__12652;
        ch__12651 = G__12653;
        continue
      }else {
        if('"' === ch__12651) {
          return buffer__12650.toString()
        }else {
          if("\ufdd0'default") {
            var G__12654 = function() {
              buffer__12650.append(ch__12651);
              return buffer__12650
            }();
            var G__12655 = cljs.reader.read_char.call(null, reader);
            buffer__12650 = G__12654;
            ch__12651 = G__12655;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__12657 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__12657, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__12657, 0, token__12657.indexOf("/")), cljs.core.subs.call(null, token__12657, token__12657.indexOf("/") + 1, token__12657.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__12657, cljs.core.symbol.call(null, token__12657))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__12667 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__12668 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__12667);
  var token__12669 = a__12668[0];
  var ns__12670 = a__12668[1];
  var name__12671 = a__12668[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____12673 = function() {
      var and__3822__auto____12672 = !(void 0 === ns__12670);
      if(and__3822__auto____12672) {
        return ns__12670.substring(ns__12670.length - 2, ns__12670.length) === ":/"
      }else {
        return and__3822__auto____12672
      }
    }();
    if(cljs.core.truth_(or__3824__auto____12673)) {
      return or__3824__auto____12673
    }else {
      var or__3824__auto____12674 = name__12671[name__12671.length - 1] === ":";
      if(or__3824__auto____12674) {
        return or__3824__auto____12674
      }else {
        return!(token__12669.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__12669)
  }else {
    if(function() {
      var and__3822__auto____12675 = !(ns__12670 == null);
      if(and__3822__auto____12675) {
        return ns__12670.length > 0
      }else {
        return and__3822__auto____12675
      }
    }()) {
      return cljs.core.keyword.call(null, ns__12670.substring(0, ns__12670.indexOf("/")), name__12671)
    }else {
      return cljs.core.keyword.call(null, token__12669)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__12681 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__12681)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__12682 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__12683__12684 = o__12682;
    if(G__12683__12684) {
      if(function() {
        var or__3824__auto____12685 = G__12683__12684.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____12685) {
          return or__3824__auto____12685
        }else {
          return G__12683__12684.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__12683__12684.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12683__12684)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12683__12684)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__12682, cljs.core.merge.call(null, cljs.core.meta.call(null, o__12682), m__12681))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__12689 = cljs.reader.read_char.call(null, reader);
    if(ch__12689 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__12689)) {
        var G__12692 = reader;
        var G__12693 = eof_is_error;
        var G__12694 = sentinel;
        var G__12695 = is_recursive;
        reader = G__12692;
        eof_is_error = G__12693;
        sentinel = G__12694;
        is_recursive = G__12695;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__12689)) {
          var G__12696 = cljs.reader.read_comment.call(null, reader, ch__12689);
          var G__12697 = eof_is_error;
          var G__12698 = sentinel;
          var G__12699 = is_recursive;
          reader = G__12696;
          eof_is_error = G__12697;
          sentinel = G__12698;
          is_recursive = G__12699;
          continue
        }else {
          if("\ufdd0'else") {
            var f__12690 = cljs.reader.macros.call(null, ch__12689);
            var res__12691 = cljs.core.truth_(f__12690) ? f__12690.call(null, reader, ch__12689) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__12689) ? cljs.reader.read_number.call(null, reader, ch__12689) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__12689) : null;
            if(res__12691 === reader) {
              var G__12700 = reader;
              var G__12701 = eof_is_error;
              var G__12702 = sentinel;
              var G__12703 = is_recursive;
              reader = G__12700;
              eof_is_error = G__12701;
              sentinel = G__12702;
              is_recursive = G__12703;
              continue
            }else {
              return res__12691
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__12705 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__12705, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__12707 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__12707.getLength() < width) {
            var G__12708 = b__12707.append("0");
            b__12707 = G__12708;
            continue
          }else {
            return b__12707.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____12711 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____12711)) {
    var or__3824__auto____12712 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____12712)) {
      return or__3824__auto____12712
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____12711
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__12717 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__12718 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__12718 : dim_norm__12717, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__12719 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__12721 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____12720 = low <= n;
      if(and__3822__auto____12720) {
        return n <= high
      }else {
        return and__3822__auto____12720
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____12722 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__12719, ts)));
    if(cljs.core.truth_(temp__3974__auto____12722)) {
      var vec__12723__12726 = temp__3974__auto____12722;
      var vec__12724__12727 = cljs.core.nth.call(null, vec__12723__12726, 0, null);
      var ___12728 = cljs.core.nth.call(null, vec__12724__12727, 0, null);
      var years__12729 = cljs.core.nth.call(null, vec__12724__12727, 1, null);
      var months__12730 = cljs.core.nth.call(null, vec__12724__12727, 2, null);
      var days__12731 = cljs.core.nth.call(null, vec__12724__12727, 3, null);
      var hours__12732 = cljs.core.nth.call(null, vec__12724__12727, 4, null);
      var minutes__12733 = cljs.core.nth.call(null, vec__12724__12727, 5, null);
      var seconds__12734 = cljs.core.nth.call(null, vec__12724__12727, 6, null);
      var milliseconds__12735 = cljs.core.nth.call(null, vec__12724__12727, 7, null);
      var vec__12725__12736 = cljs.core.nth.call(null, vec__12723__12726, 1, null);
      var ___12737 = cljs.core.nth.call(null, vec__12725__12736, 0, null);
      var ___12738 = cljs.core.nth.call(null, vec__12725__12736, 1, null);
      var ___12739 = cljs.core.nth.call(null, vec__12725__12736, 2, null);
      var V__12740 = vec__12723__12726;
      var vec__12741__12744 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__12716_SHARP_) {
          return parseInt(p1__12716_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__12714_SHARP_, p2__12713_SHARP_) {
        return cljs.core.update_in.call(null, p2__12713_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__12714_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__12715_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__12715_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__12740));
      var vec__12742__12745 = cljs.core.nth.call(null, vec__12741__12744, 0, null);
      var ___12746 = cljs.core.nth.call(null, vec__12742__12745, 0, null);
      var y__12747 = cljs.core.nth.call(null, vec__12742__12745, 1, null);
      var mo__12748 = cljs.core.nth.call(null, vec__12742__12745, 2, null);
      var d__12749 = cljs.core.nth.call(null, vec__12742__12745, 3, null);
      var h__12750 = cljs.core.nth.call(null, vec__12742__12745, 4, null);
      var m__12751 = cljs.core.nth.call(null, vec__12742__12745, 5, null);
      var s__12752 = cljs.core.nth.call(null, vec__12742__12745, 6, null);
      var ms__12753 = cljs.core.nth.call(null, vec__12742__12745, 7, null);
      var vec__12743__12754 = cljs.core.nth.call(null, vec__12741__12744, 1, null);
      var offset_sign__12755 = cljs.core.nth.call(null, vec__12743__12754, 0, null);
      var offset_hours__12756 = cljs.core.nth.call(null, vec__12743__12754, 1, null);
      var offset_minutes__12757 = cljs.core.nth.call(null, vec__12743__12754, 2, null);
      var offset__12758 = offset_sign__12755 * (offset_hours__12756 * 60 + offset_minutes__12757);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__12729) ? 1970 : y__12747, cljs.core.not.call(null, months__12730) ? 1 : check__12721.call(null, 1, mo__12748, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__12731) ? 1 : check__12721.call(null, 1, d__12749, cljs.reader.days_in_month.call(null, mo__12748, cljs.reader.leap_year_QMARK_.call(null, y__12747)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__12732) ? 0 : check__12721.call(null, 0, h__12750, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__12733) ? 0 : check__12721.call(null, 0, m__12751, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__12734) ? 0 : check__12721.call(null, 0, s__12752, cljs.core._EQ_.call(null, m__12751, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__12735) ? 0 : check__12721.call(null, 
      0, ms__12753, 999, "timestamp millisecond field must be in range 0..999"), offset__12758], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____12770 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____12770)) {
    var vec__12771__12772 = temp__3971__auto____12770;
    var years__12773 = cljs.core.nth.call(null, vec__12771__12772, 0, null);
    var months__12774 = cljs.core.nth.call(null, vec__12771__12772, 1, null);
    var days__12775 = cljs.core.nth.call(null, vec__12771__12772, 2, null);
    var hours__12776 = cljs.core.nth.call(null, vec__12771__12772, 3, null);
    var minutes__12777 = cljs.core.nth.call(null, vec__12771__12772, 4, null);
    var seconds__12778 = cljs.core.nth.call(null, vec__12771__12772, 5, null);
    var ms__12779 = cljs.core.nth.call(null, vec__12771__12772, 6, null);
    var offset__12780 = cljs.core.nth.call(null, vec__12771__12772, 7, null);
    return new Date(Date.UTC(years__12773, months__12774 - 1, days__12775, hours__12776, minutes__12777, seconds__12778, ms__12779) - offset__12780 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__12784 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____12785 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__12784), null);
  if(cljs.core.truth_(temp__3971__auto____12785)) {
    var pfn__12786 = temp__3971__auto____12785;
    return pfn__12786.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__12784), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__12789 = cljs.core.name.call(null, tag);
  var old_parser__12790 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__12789, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__12789, f);
  return old_parser__12790
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__12793 = cljs.core.name.call(null, tag);
  var old_parser__12794 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__12793, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__12793);
  return old_parser__12794
};
goog.provide("hlisp.env");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("jayq.util");
goog.require("jayq.core");
hlisp.env.IDomNode = {};
hlisp.env.pr_node = function pr_node(n) {
  if(function() {
    var and__3822__auto____186312 = n;
    if(and__3822__auto____186312) {
      return n.hlisp$env$IDomNode$pr_node$arity$1
    }else {
      return and__3822__auto____186312
    }
  }()) {
    return n.hlisp$env$IDomNode$pr_node$arity$1(n)
  }else {
    var x__2363__auto____186313 = n == null ? null : n;
    return function() {
      var or__3824__auto____186314 = hlisp.env.pr_node[goog.typeOf(x__2363__auto____186313)];
      if(or__3824__auto____186314) {
        return or__3824__auto____186314
      }else {
        var or__3824__auto____186315 = hlisp.env.pr_node["_"];
        if(or__3824__auto____186315) {
          return or__3824__auto____186315
        }else {
          throw cljs.core.missing_protocol.call(null, "IDomNode.pr-node", n);
        }
      }
    }().call(null, n)
  }
};
hlisp.env.tag = function tag(n) {
  if(function() {
    var and__3822__auto____186320 = n;
    if(and__3822__auto____186320) {
      return n.hlisp$env$IDomNode$tag$arity$1
    }else {
      return and__3822__auto____186320
    }
  }()) {
    return n.hlisp$env$IDomNode$tag$arity$1(n)
  }else {
    var x__2363__auto____186321 = n == null ? null : n;
    return function() {
      var or__3824__auto____186322 = hlisp.env.tag[goog.typeOf(x__2363__auto____186321)];
      if(or__3824__auto____186322) {
        return or__3824__auto____186322
      }else {
        var or__3824__auto____186323 = hlisp.env.tag["_"];
        if(or__3824__auto____186323) {
          return or__3824__auto____186323
        }else {
          throw cljs.core.missing_protocol.call(null, "IDomNode.tag", n);
        }
      }
    }().call(null, n)
  }
};
hlisp.env.attrs = function attrs(n) {
  if(function() {
    var and__3822__auto____186328 = n;
    if(and__3822__auto____186328) {
      return n.hlisp$env$IDomNode$attrs$arity$1
    }else {
      return and__3822__auto____186328
    }
  }()) {
    return n.hlisp$env$IDomNode$attrs$arity$1(n)
  }else {
    var x__2363__auto____186329 = n == null ? null : n;
    return function() {
      var or__3824__auto____186330 = hlisp.env.attrs[goog.typeOf(x__2363__auto____186329)];
      if(or__3824__auto____186330) {
        return or__3824__auto____186330
      }else {
        var or__3824__auto____186331 = hlisp.env.attrs["_"];
        if(or__3824__auto____186331) {
          return or__3824__auto____186331
        }else {
          throw cljs.core.missing_protocol.call(null, "IDomNode.attrs", n);
        }
      }
    }().call(null, n)
  }
};
hlisp.env.dom = function dom(n) {
  if(function() {
    var and__3822__auto____186336 = n;
    if(and__3822__auto____186336) {
      return n.hlisp$env$IDomNode$dom$arity$1
    }else {
      return and__3822__auto____186336
    }
  }()) {
    return n.hlisp$env$IDomNode$dom$arity$1(n)
  }else {
    var x__2363__auto____186337 = n == null ? null : n;
    return function() {
      var or__3824__auto____186338 = hlisp.env.dom[goog.typeOf(x__2363__auto____186337)];
      if(or__3824__auto____186338) {
        return or__3824__auto____186338
      }else {
        var or__3824__auto____186339 = hlisp.env.dom["_"];
        if(or__3824__auto____186339) {
          return or__3824__auto____186339
        }else {
          throw cljs.core.missing_protocol.call(null, "IDomNode.dom", n);
        }
      }
    }().call(null, n)
  }
};
hlisp.env.TextNode = function(tag, text) {
  this.tag = tag;
  this.text = text;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 536870912
};
hlisp.env.TextNode.cljs$lang$type = true;
hlisp.env.TextNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "hlisp.env/TextNode")
};
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$ = true;
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$pr_node$arity$1 = function(n) {
  var this__186340 = this;
  return[cljs.core.str("("), cljs.core.str(n.tag), cljs.core.str(" "), cljs.core.str(cljs.core.pr_str.call(null, n.text)), cljs.core.str(")")].join("")
};
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$tag$arity$1 = function(n) {
  var this__186341 = this;
  return n.tag
};
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$attrs$arity$1 = function(n) {
  var this__186342 = this;
  return null
};
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$dom$arity$1 = function(n) {
  var this__186343 = this;
  return jayq.core.$.call(null, cljs.core._EQ_.call(null, "$text", n.tag) ? document.createTextNode(n.text) : document.createComment(n.text))
};
hlisp.env.TextNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(n, opts) {
  var this__186344 = this;
  console.log(n.hlisp$env$IDomNode$dom$arity$1(n));
  return n.hlisp$env$IDomNode$pr_node$arity$1(n)
};
hlisp.env.TextNode;
hlisp.env.make_text_node = function make_text_node(text) {
  return new hlisp.env.TextNode("$text", text)
};
hlisp.env.make_comment_node = function make_comment_node(text) {
  return new hlisp.env.TextNode("$comment", text)
};
hlisp.env.ElemNode = function(tag, attrs, children, ids) {
  this.tag = tag;
  this.attrs = attrs;
  this.children = children;
  this.ids = ids;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 679479263
};
hlisp.env.ElemNode.cljs$lang$type = true;
hlisp.env.ElemNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "hlisp.env/ElemNode")
};
hlisp.env.ElemNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(n, k) {
  var this__186349 = this;
  return k.call(null, n.attrs)
};
hlisp.env.ElemNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(n, k, not_found) {
  var this__186350 = this;
  return k.call(null, n.attrs, not_found)
};
hlisp.env.ElemNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(n, k) {
  var this__186351 = this;
  return cljs.core.contains_QMARK_.call(null, n.attrs, k)
};
hlisp.env.ElemNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(n, k, v) {
  var this__186352 = this;
  if(cljs.core.integer_QMARK_.call(null, k)) {
    return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, cljs.core.assoc.call(null, n.children, k, v), n.ids)
  }else {
    return hlisp.env.make_elem_node.call(null, n.tag, cljs.core.assoc.call(null, n.attrs, k, v), n.children, n.ids)
  }
};
hlisp.env.ElemNode.prototype.call = function() {
  var G__186399__delegate = function(this_sym186353, args) {
    var this_sym186353__186355 = this;
    var n__186356 = this_sym186353__186355;
    var ntag__186357 = n__186356.tag;
    var nattrs__186358 = n__186356.attrs;
    var nchildren__186359 = n__186356.children;
    var nids__186360 = n__186356.ids;
    if(cljs.core.seq.call(null, args)) {
      var vec__186361__186362 = args;
      var head__186363 = cljs.core.nth.call(null, vec__186361__186362, 0, null);
      var tail__186364 = cljs.core.nthnext.call(null, vec__186361__186362, 1);
      var typ__186365 = cljs.core.type.call(null, head__186363);
      if(function() {
        var or__3824__auto____186366 = cljs.core._EQ_.call(null, typ__186365, hlisp.env.ElemNode);
        if(or__3824__auto____186366) {
          return or__3824__auto____186366
        }else {
          return cljs.core._EQ_.call(null, typ__186365, hlisp.env.TextNode)
        }
      }()) {
        return hlisp.env.make_elem_node.call(null, ntag__186357, nattrs__186358, cljs.core.into.call(null, nchildren__186359, cljs.core.vec.call(null, args)), nids__186360)
      }else {
        return hlisp.env.make_elem_node.call(null, ntag__186357, cljs.core.into.call(null, nattrs__186358, head__186363), cljs.core.into.call(null, nchildren__186359, cljs.core.vec.call(null, tail__186364)), nids__186360)
      }
    }else {
      return n__186356
    }
  };
  var G__186399 = function(this_sym186353, var_args) {
    var this__186354 = this;
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__186399__delegate.call(this, this_sym186353, args)
  };
  G__186399.cljs$lang$maxFixedArity = 1;
  G__186399.cljs$lang$applyTo = function(arglist__186400) {
    var this_sym186353 = cljs.core.first(arglist__186400);
    var args = cljs.core.rest(arglist__186400);
    return G__186399__delegate(this_sym186353, args)
  };
  G__186399.cljs$lang$arity$variadic = G__186399__delegate;
  return G__186399
}();
hlisp.env.ElemNode.prototype.apply = function(this_sym186347, args186348) {
  var this__186367 = this;
  return this_sym186347.call.apply(this_sym186347, [this_sym186347].concat(args186348.slice()))
};
hlisp.env.ElemNode.prototype.cljs$core$INext$_next$arity$1 = function(n) {
  var this__186368 = this;
  var nx__186369 = cljs.core.next.call(null, n.children);
  if(cljs.core.seq.call(null, nx__186369)) {
    return hlisp.env.make_elem_node.call(null, "$list", cljs.core.ObjMap.EMPTY, nx__186369, cljs.core.PersistentVector.EMPTY)
  }else {
    return nx__186369
  }
};
hlisp.env.ElemNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(n, o) {
  var this__186370 = this;
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, cljs.core.conj.call(null, cljs.core.vec.call(null, n.children), o), n.ids)
};
hlisp.env.ElemNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(n) {
  var this__186371 = this;
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, cljs.core.vec.call(null, cljs.core.reverse.call(null, n.children)), n.ids)
};
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$ = true;
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$pr_node$arity$1 = function(n) {
  var this__186372 = this;
  var tag__186373 = n.tag;
  var attrs__186374 = n.attrs;
  var children__186375 = n.children;
  var o_paren__186376 = cljs.core.seq.call(null, children__186375) ? "(" : "";
  var c_paren__186377 = cljs.core.seq.call(null, children__186375) ? ")" : "";
  var attrs_str__186378 = 0 < cljs.core.count.call(null, attrs__186374) ? cljs.core.pr_str.call(null, attrs__186374) : "";
  var child_str__186379 = cljs.core.seq.call(null, children__186375) ? clojure.string.join.call(null, " ", cljs.core.map.call(null, hlisp.env.pr_node, children__186375)) : "";
  var str_parts__186380 = cljs.core.filter.call(null, function(p1__186345_SHARP_) {
    return cljs.core.not_EQ_.call(null, "", p1__186345_SHARP_)
  }, cljs.core.list.call(null, tag__186373, attrs_str__186378, child_str__186379));
  var str_all__186381 = 1 < cljs.core.count.call(null, str_parts__186380) ? cljs.core.concat.call(null, cljs.core.with_meta(cljs.core.list("("), cljs.core.hash_map("\ufdd0'line", 184)), str_parts__186380, cljs.core.with_meta(cljs.core.list(")"), cljs.core.hash_map("\ufdd0'line", 184))) : str_parts__186380;
  return clojure.string.join.call(null, " ", str_all__186381)
};
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$tag$arity$1 = function(n) {
  var this__186382 = this;
  return n.tag
};
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$attrs$arity$1 = function(n) {
  var this__186383 = this;
  return n.attrs
};
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$dom$arity$1 = function(n) {
  var this__186384 = this;
  var $elem__186385 = jayq.core.$.call(null, document.createElement(n.tag));
  var ids__186386 = n.ids;
  var attrs_noid__186387 = n.attrs;
  var attrs__186388 = cljs.core.seq.call(null, ids__186386) ? cljs.core.assoc.call(null, attrs_noid__186387, "\ufdd0'data-hl", clojure.string.join.call(null, " ", ids__186386)) : attrs_noid__186387;
  var children__186389 = cljs.core.mapv.call(null, hlisp.env.dom, n.children);
  return jayq.core.append.call(null, jayq.core.attr.call(null, $elem__186385, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.mapv.call(null, function(p1__186346_SHARP_) {
    return cljs.core.vec.call(null, cljs.core.list.call(null, cljs.core.name.call(null, cljs.core.first.call(null, p1__186346_SHARP_)), cljs.core.second.call(null, p1__186346_SHARP_)))
  }, attrs__186388))), children__186389)
};
hlisp.env.ElemNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(n) {
  var this__186390 = this;
  if(cljs.core.seq.call(null, n.children)) {
    return n
  }else {
    return null
  }
};
hlisp.env.ElemNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(n, opts) {
  var this__186391 = this;
  console.log(n.hlisp$env$IDomNode$dom$arity$1(n));
  return n.hlisp$env$IDomNode$pr_node$arity$1(n)
};
hlisp.env.ElemNode.prototype.cljs$core$ICounted$_count$arity$1 = function(n) {
  var this__186392 = this;
  return cljs.core.count.call(null, n.children)
};
hlisp.env.ElemNode.prototype.cljs$core$ISeq$_first$arity$1 = function(n) {
  var this__186393 = this;
  return cljs.core.first.call(null, n.children)
};
hlisp.env.ElemNode.prototype.cljs$core$ISeq$_rest$arity$1 = function(n) {
  var this__186394 = this;
  return hlisp.env.make_elem_node.call(null, "$list", cljs.core.ObjMap.EMPTY, cljs.core.rest.call(null, n.children), cljs.core.PersistentVector.EMPTY)
};
hlisp.env.ElemNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(n, i) {
  var this__186395 = this;
  return cljs.core.nth.call(null, n.children, i)
};
hlisp.env.ElemNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(n, i, not_found) {
  var this__186396 = this;
  return cljs.core.nth.call(null, n.children, i, not_found)
};
hlisp.env.ElemNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(n) {
  var this__186397 = this;
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, cljs.core.PersistentVector.EMPTY, n.ids)
};
hlisp.env.ElemNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(n, k) {
  var this__186398 = this;
  if(!cljs.core.integer_QMARK_.call(null, k)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't dissoc children"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not", cljs.core.with_meta(cljs.core.list("\ufdd1'integer?", "\ufdd1'k"), cljs.core.hash_map("\ufdd0'line", 157))), cljs.core.hash_map("\ufdd0'line", 157))))].join(""));
  }
  return hlisp.env.make_elem_node.call(null, n.tag, cljs.core.dissoc.call(null, n.attrs, k), n.children, n.ids)
};
hlisp.env.ElemNode;
hlisp.env.make_elem_node = function() {
  var make_elem_node = null;
  var make_elem_node__1 = function(tag) {
    return new hlisp.env.ElemNode(tag, cljs.core.ObjMap.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY)
  };
  var make_elem_node__2 = function(tag, attrs) {
    return new hlisp.env.ElemNode(tag, attrs, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY)
  };
  var make_elem_node__3 = function(tag, attrs, kids) {
    return new hlisp.env.ElemNode(tag, attrs, kids, cljs.core.PersistentVector.EMPTY)
  };
  var make_elem_node__4 = function(tag, attrs, kids, ids) {
    return new hlisp.env.ElemNode(tag, attrs, kids, ids)
  };
  make_elem_node = function(tag, attrs, kids, ids) {
    switch(arguments.length) {
      case 1:
        return make_elem_node__1.call(this, tag);
      case 2:
        return make_elem_node__2.call(this, tag, attrs);
      case 3:
        return make_elem_node__3.call(this, tag, attrs, kids);
      case 4:
        return make_elem_node__4.call(this, tag, attrs, kids, ids)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_elem_node.cljs$lang$arity$1 = make_elem_node__1;
  make_elem_node.cljs$lang$arity$2 = make_elem_node__2;
  make_elem_node.cljs$lang$arity$3 = make_elem_node__3;
  make_elem_node.cljs$lang$arity$4 = make_elem_node__4;
  return make_elem_node
}();
hlisp.env.clone = function clone(n) {
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, n.children, cljs.core.conj.call(null, n.ids, cljs.core.gensym.call(null)))
};
hlisp.env.a = hlisp.env.make_elem_node.call(null, "a");
hlisp.env.abbr = hlisp.env.make_elem_node.call(null, "abbr");
hlisp.env.acronym = hlisp.env.make_elem_node.call(null, "acronym");
hlisp.env.address = hlisp.env.make_elem_node.call(null, "address");
hlisp.env.applet = hlisp.env.make_elem_node.call(null, "applet");
hlisp.env.area = hlisp.env.make_elem_node.call(null, "area");
hlisp.env.article = hlisp.env.make_elem_node.call(null, "article");
hlisp.env.aside = hlisp.env.make_elem_node.call(null, "aside");
hlisp.env.audio = hlisp.env.make_elem_node.call(null, "audio");
hlisp.env.b = hlisp.env.make_elem_node.call(null, "b");
hlisp.env.base = hlisp.env.make_elem_node.call(null, "base");
hlisp.env.basefont = hlisp.env.make_elem_node.call(null, "basefont");
hlisp.env.bdi = hlisp.env.make_elem_node.call(null, "bdi");
hlisp.env.bdo = hlisp.env.make_elem_node.call(null, "bdo");
hlisp.env.big = hlisp.env.make_elem_node.call(null, "big");
hlisp.env.blockquote = hlisp.env.make_elem_node.call(null, "blockquote");
hlisp.env.body = hlisp.env.make_elem_node.call(null, "body");
hlisp.env.br = hlisp.env.make_elem_node.call(null, "br");
hlisp.env.button = hlisp.env.make_elem_node.call(null, "button");
hlisp.env.canvas = hlisp.env.make_elem_node.call(null, "canvas");
hlisp.env.caption = hlisp.env.make_elem_node.call(null, "caption");
hlisp.env.center = hlisp.env.make_elem_node.call(null, "center");
hlisp.env.cite = hlisp.env.make_elem_node.call(null, "cite");
hlisp.env.code = hlisp.env.make_elem_node.call(null, "code");
hlisp.env.col = hlisp.env.make_elem_node.call(null, "col");
hlisp.env.colgroup = hlisp.env.make_elem_node.call(null, "colgroup");
hlisp.env.command = hlisp.env.make_elem_node.call(null, "command");
hlisp.env.data = hlisp.env.make_elem_node.call(null, "data");
hlisp.env.datalist = hlisp.env.make_elem_node.call(null, "datalist");
hlisp.env.dd = hlisp.env.make_elem_node.call(null, "dd");
hlisp.env.del = hlisp.env.make_elem_node.call(null, "del");
hlisp.env.details = hlisp.env.make_elem_node.call(null, "details");
hlisp.env.dfn = hlisp.env.make_elem_node.call(null, "dfn");
hlisp.env.dir = hlisp.env.make_elem_node.call(null, "dir");
hlisp.env.div = hlisp.env.make_elem_node.call(null, "div");
hlisp.env.dl = hlisp.env.make_elem_node.call(null, "dl");
hlisp.env.dt = hlisp.env.make_elem_node.call(null, "dt");
hlisp.env.em = hlisp.env.make_elem_node.call(null, "em");
hlisp.env.embed = hlisp.env.make_elem_node.call(null, "embed");
hlisp.env.eventsource = hlisp.env.make_elem_node.call(null, "eventsource");
hlisp.env.fieldset = hlisp.env.make_elem_node.call(null, "fieldset");
hlisp.env.figcaption = hlisp.env.make_elem_node.call(null, "figcaption");
hlisp.env.figure = hlisp.env.make_elem_node.call(null, "figure");
hlisp.env.font = hlisp.env.make_elem_node.call(null, "font");
hlisp.env.footer = hlisp.env.make_elem_node.call(null, "footer");
hlisp.env.form = hlisp.env.make_elem_node.call(null, "form");
hlisp.env.frame = hlisp.env.make_elem_node.call(null, "frame");
hlisp.env.frameset = hlisp.env.make_elem_node.call(null, "frameset");
hlisp.env.h1 = hlisp.env.make_elem_node.call(null, "h1");
hlisp.env.h2 = hlisp.env.make_elem_node.call(null, "h2");
hlisp.env.h3 = hlisp.env.make_elem_node.call(null, "h3");
hlisp.env.h4 = hlisp.env.make_elem_node.call(null, "h4");
hlisp.env.h5 = hlisp.env.make_elem_node.call(null, "h5");
hlisp.env.h6 = hlisp.env.make_elem_node.call(null, "h6");
hlisp.env.head = hlisp.env.make_elem_node.call(null, "head");
hlisp.env.header = hlisp.env.make_elem_node.call(null, "header");
hlisp.env.hgroup = hlisp.env.make_elem_node.call(null, "hgroup");
hlisp.env.hr = hlisp.env.make_elem_node.call(null, "hr");
hlisp.env.html = hlisp.env.make_elem_node.call(null, "html");
hlisp.env.i = hlisp.env.make_elem_node.call(null, "i");
hlisp.env.iframe = hlisp.env.make_elem_node.call(null, "iframe");
hlisp.env.img = hlisp.env.make_elem_node.call(null, "img");
hlisp.env.input = hlisp.env.make_elem_node.call(null, "input");
hlisp.env.ins = hlisp.env.make_elem_node.call(null, "ins");
hlisp.env.isindex = hlisp.env.make_elem_node.call(null, "isindex");
hlisp.env.kbd = hlisp.env.make_elem_node.call(null, "kbd");
hlisp.env.keygen = hlisp.env.make_elem_node.call(null, "keygen");
hlisp.env.label = hlisp.env.make_elem_node.call(null, "label");
hlisp.env.legend = hlisp.env.make_elem_node.call(null, "legend");
hlisp.env.li = hlisp.env.make_elem_node.call(null, "li");
hlisp.env.link = hlisp.env.make_elem_node.call(null, "link");
hlisp.env.html_map = hlisp.env.make_elem_node.call(null, "map");
hlisp.env.mark = hlisp.env.make_elem_node.call(null, "mark");
hlisp.env.menu = hlisp.env.make_elem_node.call(null, "menu");
hlisp.env.html_meta = hlisp.env.make_elem_node.call(null, "meta");
hlisp.env.meter = hlisp.env.make_elem_node.call(null, "meter");
hlisp.env.nav = hlisp.env.make_elem_node.call(null, "nav");
hlisp.env.noframes = hlisp.env.make_elem_node.call(null, "noframes");
hlisp.env.noscript = hlisp.env.make_elem_node.call(null, "noscript");
hlisp.env.object = hlisp.env.make_elem_node.call(null, "object");
hlisp.env.ol = hlisp.env.make_elem_node.call(null, "ol");
hlisp.env.optgroup = hlisp.env.make_elem_node.call(null, "optgroup");
hlisp.env.option = hlisp.env.make_elem_node.call(null, "option");
hlisp.env.output = hlisp.env.make_elem_node.call(null, "output");
hlisp.env.p = hlisp.env.make_elem_node.call(null, "p");
hlisp.env.param = hlisp.env.make_elem_node.call(null, "param");
hlisp.env.pre = hlisp.env.make_elem_node.call(null, "pre");
hlisp.env.progress = hlisp.env.make_elem_node.call(null, "progress");
hlisp.env.q = hlisp.env.make_elem_node.call(null, "q");
hlisp.env.rp = hlisp.env.make_elem_node.call(null, "rp");
hlisp.env.rt = hlisp.env.make_elem_node.call(null, "rt");
hlisp.env.ruby = hlisp.env.make_elem_node.call(null, "ruby");
hlisp.env.s = hlisp.env.make_elem_node.call(null, "s");
hlisp.env.samp = hlisp.env.make_elem_node.call(null, "samp");
hlisp.env.script = hlisp.env.make_elem_node.call(null, "script");
hlisp.env.section = hlisp.env.make_elem_node.call(null, "section");
hlisp.env.select = hlisp.env.make_elem_node.call(null, "select");
hlisp.env.small = hlisp.env.make_elem_node.call(null, "small");
hlisp.env.source = hlisp.env.make_elem_node.call(null, "source");
hlisp.env.span = hlisp.env.make_elem_node.call(null, "span");
hlisp.env.strike = hlisp.env.make_elem_node.call(null, "strike");
hlisp.env.strong = hlisp.env.make_elem_node.call(null, "strong");
hlisp.env.style = hlisp.env.make_elem_node.call(null, "style");
hlisp.env.sub = hlisp.env.make_elem_node.call(null, "sub");
hlisp.env.summary = hlisp.env.make_elem_node.call(null, "summary");
hlisp.env.sup = hlisp.env.make_elem_node.call(null, "sup");
hlisp.env.table = hlisp.env.make_elem_node.call(null, "table");
hlisp.env.tbody = hlisp.env.make_elem_node.call(null, "tbody");
hlisp.env.td = hlisp.env.make_elem_node.call(null, "td");
hlisp.env.textarea = hlisp.env.make_elem_node.call(null, "textarea");
hlisp.env.tfoot = hlisp.env.make_elem_node.call(null, "tfoot");
hlisp.env.th = hlisp.env.make_elem_node.call(null, "th");
hlisp.env.thead = hlisp.env.make_elem_node.call(null, "thead");
hlisp.env.html_time = hlisp.env.make_elem_node.call(null, "time");
hlisp.env.title = hlisp.env.make_elem_node.call(null, "title");
hlisp.env.tr = hlisp.env.make_elem_node.call(null, "tr");
hlisp.env.track = hlisp.env.make_elem_node.call(null, "track");
hlisp.env.tt = hlisp.env.make_elem_node.call(null, "tt");
hlisp.env.u = hlisp.env.make_elem_node.call(null, "u");
hlisp.env.ul = hlisp.env.make_elem_node.call(null, "ul");
hlisp.env.html_var = hlisp.env.make_elem_node.call(null, "var");
hlisp.env.video = hlisp.env.make_elem_node.call(null, "video");
hlisp.env.wbr = hlisp.env.make_elem_node.call(null, "wbr");
hlisp.env.$list = hlisp.env.make_elem_node.call(null, "$list");
hlisp.env.$text = hlisp.env.make_text_node;
hlisp.env.$comment = hlisp.env.make_comment_node;
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, this.path_.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____12952 = this$;
    if(and__3822__auto____12952) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____12952
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2379__auto____12953 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____12954 = clojure.browser.event.event_types[goog.typeOf(x__2379__auto____12953)];
      if(or__3824__auto____12954) {
        return or__3824__auto____12954
      }else {
        var or__3824__auto____12955 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____12955) {
          return or__3824__auto____12955
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12956) {
    var vec__12957__12958 = p__12956;
    var k__12959 = cljs.core.nth.call(null, vec__12957__12958, 0, null);
    var v__12960 = cljs.core.nth.call(null, vec__12957__12958, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12959.toLowerCase()), v__12960], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12961) {
    var vec__12962__12963 = p__12961;
    var k__12964 = cljs.core.nth.call(null, vec__12962__12963, 0, null);
    var v__12965 = cljs.core.nth.call(null, vec__12962__12963, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12964.toLowerCase()), v__12965], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(this.isDisposed()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  delete this.send
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  this.connectDeferred_ = false;
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  this.connectCb_ = null;
  this.connectDeferred_ = false;
  this.deferredDeliveries_.length = 0;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(Boolean(this.peerWindowObject_.closed)) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(this.connectDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  this.deferredDeliveries_.length = 0
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12815) {
  var vec__12816__12817 = p__12815;
  var k__12818 = cljs.core.nth.call(null, vec__12816__12817, 0, null);
  var v__12819 = cljs.core.nth.call(null, vec__12816__12817, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12818.toLowerCase()), v__12819], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____12836 = this$;
      if(and__3822__auto____12836) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____12836
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2379__auto____12837 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12838 = clojure.browser.net.connect[goog.typeOf(x__2379__auto____12837)];
        if(or__3824__auto____12838) {
          return or__3824__auto____12838
        }else {
          var or__3824__auto____12839 = clojure.browser.net.connect["_"];
          if(or__3824__auto____12839) {
            return or__3824__auto____12839
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____12840 = this$;
      if(and__3822__auto____12840) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____12840
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2379__auto____12841 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12842 = clojure.browser.net.connect[goog.typeOf(x__2379__auto____12841)];
        if(or__3824__auto____12842) {
          return or__3824__auto____12842
        }else {
          var or__3824__auto____12843 = clojure.browser.net.connect["_"];
          if(or__3824__auto____12843) {
            return or__3824__auto____12843
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____12844 = this$;
      if(and__3822__auto____12844) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____12844
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2379__auto____12845 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12846 = clojure.browser.net.connect[goog.typeOf(x__2379__auto____12845)];
        if(or__3824__auto____12846) {
          return or__3824__auto____12846
        }else {
          var or__3824__auto____12847 = clojure.browser.net.connect["_"];
          if(or__3824__auto____12847) {
            return or__3824__auto____12847
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____12848 = this$;
      if(and__3822__auto____12848) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____12848
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2379__auto____12849 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12850 = clojure.browser.net.connect[goog.typeOf(x__2379__auto____12849)];
        if(or__3824__auto____12850) {
          return or__3824__auto____12850
        }else {
          var or__3824__auto____12851 = clojure.browser.net.connect["_"];
          if(or__3824__auto____12851) {
            return or__3824__auto____12851
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____12872 = this$;
      if(and__3822__auto____12872) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____12872
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2379__auto____12873 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12874 = clojure.browser.net.transmit[goog.typeOf(x__2379__auto____12873)];
        if(or__3824__auto____12874) {
          return or__3824__auto____12874
        }else {
          var or__3824__auto____12875 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____12875) {
            return or__3824__auto____12875
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____12876 = this$;
      if(and__3822__auto____12876) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____12876
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2379__auto____12877 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12878 = clojure.browser.net.transmit[goog.typeOf(x__2379__auto____12877)];
        if(or__3824__auto____12878) {
          return or__3824__auto____12878
        }else {
          var or__3824__auto____12879 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____12879) {
            return or__3824__auto____12879
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____12880 = this$;
      if(and__3822__auto____12880) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____12880
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2379__auto____12881 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12882 = clojure.browser.net.transmit[goog.typeOf(x__2379__auto____12881)];
        if(or__3824__auto____12882) {
          return or__3824__auto____12882
        }else {
          var or__3824__auto____12883 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____12883) {
            return or__3824__auto____12883
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____12884 = this$;
      if(and__3822__auto____12884) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____12884
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2379__auto____12885 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12886 = clojure.browser.net.transmit[goog.typeOf(x__2379__auto____12885)];
        if(or__3824__auto____12886) {
          return or__3824__auto____12886
        }else {
          var or__3824__auto____12887 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____12887) {
            return or__3824__auto____12887
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____12888 = this$;
      if(and__3822__auto____12888) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____12888
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2379__auto____12889 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12890 = clojure.browser.net.transmit[goog.typeOf(x__2379__auto____12889)];
        if(or__3824__auto____12890) {
          return or__3824__auto____12890
        }else {
          var or__3824__auto____12891 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____12891) {
            return or__3824__auto____12891
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____12896 = this$;
    if(and__3822__auto____12896) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____12896
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2379__auto____12897 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____12898 = clojure.browser.net.close[goog.typeOf(x__2379__auto____12897)];
      if(or__3824__auto____12898) {
        return or__3824__auto____12898
      }else {
        var or__3824__auto____12899 = clojure.browser.net.close["_"];
        if(or__3824__auto____12899) {
          return or__3824__auto____12899
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12900) {
    var vec__12901__12902 = p__12900;
    var k__12903 = cljs.core.nth.call(null, vec__12901__12902, 0, null);
    var v__12904 = cljs.core.nth.call(null, vec__12901__12902, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12903.toLowerCase()), v__12904], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12905) {
  var vec__12906__12907 = p__12905;
  var k__12908 = cljs.core.nth.call(null, vec__12906__12907, 0, null);
  var v__12909 = cljs.core.nth.call(null, vec__12906__12907, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12908.toLowerCase()), v__12909], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____12918 = this$;
      if(and__3822__auto____12918) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____12918
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2379__auto____12919 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12920 = clojure.browser.net.register_service[goog.typeOf(x__2379__auto____12919)];
        if(or__3824__auto____12920) {
          return or__3824__auto____12920
        }else {
          var or__3824__auto____12921 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____12921) {
            return or__3824__auto____12921
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____12922 = this$;
      if(and__3822__auto____12922) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____12922
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2379__auto____12923 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12924 = clojure.browser.net.register_service[goog.typeOf(x__2379__auto____12923)];
        if(or__3824__auto____12924) {
          return or__3824__auto____12924
        }else {
          var or__3824__auto____12925 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____12925) {
            return or__3824__auto____12925
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____12937 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____12937)) {
      var config__12938 = temp__3974__auto____12937;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__12938))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__12939) {
      var vec__12940__12941 = p__12939;
      var k__12942 = cljs.core.nth.call(null, vec__12940__12941, 0, null);
      var v__12943 = cljs.core.nth.call(null, vec__12940__12941, 1, null);
      var temp__3971__auto____12944 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__12942, null);
      if(cljs.core.truth_(temp__3971__auto____12944)) {
        var field__12945 = temp__3971__auto____12944;
        var G__12946__12947 = sum;
        G__12946__12947[field__12945] = v__12943;
        return G__12946__12947
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____12797 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____12797)) {
    var conn__12798 = temp__3971__auto____12797;
    return clojure.browser.net.transmit.call(null, conn__12798, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__12804 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e12802) {
      if(cljs.core.instance_QMARK_.call(null, Error, e12802)) {
        var e__12803 = e12802;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__12803), "\ufdd0'stacktrace":cljs.core.truth_(e__12803.hasOwnProperty("stack")) ? e__12803.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e12802;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__12804)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__12806 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__12806, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__12806, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____12810 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____12810)) {
    var repl_connection__12811 = temp__3971__auto____12810;
    var connection__12812 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__12812, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__12811, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__12811, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__12812, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__12811, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__12811, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__12812, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__12814 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__12814));
  clojure.browser.net.register_service.call(null, repl_connection__12814, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__12814, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__12814, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__12814, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("hlisp.repl");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
goog.provide("hlisp.test");
goog.require("cljs.core");
goog.require("hlisp.env");
goog.require("hlisp.env");
