var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__47529 = x == null ? null : x;
  if(p[goog.typeOf(x__47529)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__47530__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__47530 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__47530__delegate.call(this, array, i, idxs)
    };
    G__47530.cljs$lang$maxFixedArity = 2;
    G__47530.cljs$lang$applyTo = function(arglist__47531) {
      var array = cljs.core.first(arglist__47531);
      var i = cljs.core.first(cljs.core.next(arglist__47531));
      var idxs = cljs.core.rest(cljs.core.next(arglist__47531));
      return G__47530__delegate(array, i, idxs)
    };
    G__47530.cljs$lang$arity$variadic = G__47530__delegate;
    return G__47530
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____47616 = this$;
      if(and__3822__auto____47616) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____47616
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2363__auto____47617 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47618 = cljs.core._invoke[goog.typeOf(x__2363__auto____47617)];
        if(or__3824__auto____47618) {
          return or__3824__auto____47618
        }else {
          var or__3824__auto____47619 = cljs.core._invoke["_"];
          if(or__3824__auto____47619) {
            return or__3824__auto____47619
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____47620 = this$;
      if(and__3822__auto____47620) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____47620
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2363__auto____47621 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47622 = cljs.core._invoke[goog.typeOf(x__2363__auto____47621)];
        if(or__3824__auto____47622) {
          return or__3824__auto____47622
        }else {
          var or__3824__auto____47623 = cljs.core._invoke["_"];
          if(or__3824__auto____47623) {
            return or__3824__auto____47623
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____47624 = this$;
      if(and__3822__auto____47624) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____47624
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2363__auto____47625 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47626 = cljs.core._invoke[goog.typeOf(x__2363__auto____47625)];
        if(or__3824__auto____47626) {
          return or__3824__auto____47626
        }else {
          var or__3824__auto____47627 = cljs.core._invoke["_"];
          if(or__3824__auto____47627) {
            return or__3824__auto____47627
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____47628 = this$;
      if(and__3822__auto____47628) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____47628
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2363__auto____47629 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47630 = cljs.core._invoke[goog.typeOf(x__2363__auto____47629)];
        if(or__3824__auto____47630) {
          return or__3824__auto____47630
        }else {
          var or__3824__auto____47631 = cljs.core._invoke["_"];
          if(or__3824__auto____47631) {
            return or__3824__auto____47631
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____47632 = this$;
      if(and__3822__auto____47632) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____47632
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2363__auto____47633 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47634 = cljs.core._invoke[goog.typeOf(x__2363__auto____47633)];
        if(or__3824__auto____47634) {
          return or__3824__auto____47634
        }else {
          var or__3824__auto____47635 = cljs.core._invoke["_"];
          if(or__3824__auto____47635) {
            return or__3824__auto____47635
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____47636 = this$;
      if(and__3822__auto____47636) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____47636
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2363__auto____47637 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47638 = cljs.core._invoke[goog.typeOf(x__2363__auto____47637)];
        if(or__3824__auto____47638) {
          return or__3824__auto____47638
        }else {
          var or__3824__auto____47639 = cljs.core._invoke["_"];
          if(or__3824__auto____47639) {
            return or__3824__auto____47639
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____47640 = this$;
      if(and__3822__auto____47640) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____47640
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2363__auto____47641 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47642 = cljs.core._invoke[goog.typeOf(x__2363__auto____47641)];
        if(or__3824__auto____47642) {
          return or__3824__auto____47642
        }else {
          var or__3824__auto____47643 = cljs.core._invoke["_"];
          if(or__3824__auto____47643) {
            return or__3824__auto____47643
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____47644 = this$;
      if(and__3822__auto____47644) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____47644
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2363__auto____47645 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47646 = cljs.core._invoke[goog.typeOf(x__2363__auto____47645)];
        if(or__3824__auto____47646) {
          return or__3824__auto____47646
        }else {
          var or__3824__auto____47647 = cljs.core._invoke["_"];
          if(or__3824__auto____47647) {
            return or__3824__auto____47647
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____47648 = this$;
      if(and__3822__auto____47648) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____47648
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2363__auto____47649 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47650 = cljs.core._invoke[goog.typeOf(x__2363__auto____47649)];
        if(or__3824__auto____47650) {
          return or__3824__auto____47650
        }else {
          var or__3824__auto____47651 = cljs.core._invoke["_"];
          if(or__3824__auto____47651) {
            return or__3824__auto____47651
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____47652 = this$;
      if(and__3822__auto____47652) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____47652
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2363__auto____47653 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47654 = cljs.core._invoke[goog.typeOf(x__2363__auto____47653)];
        if(or__3824__auto____47654) {
          return or__3824__auto____47654
        }else {
          var or__3824__auto____47655 = cljs.core._invoke["_"];
          if(or__3824__auto____47655) {
            return or__3824__auto____47655
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____47656 = this$;
      if(and__3822__auto____47656) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____47656
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2363__auto____47657 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47658 = cljs.core._invoke[goog.typeOf(x__2363__auto____47657)];
        if(or__3824__auto____47658) {
          return or__3824__auto____47658
        }else {
          var or__3824__auto____47659 = cljs.core._invoke["_"];
          if(or__3824__auto____47659) {
            return or__3824__auto____47659
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____47660 = this$;
      if(and__3822__auto____47660) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____47660
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2363__auto____47661 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47662 = cljs.core._invoke[goog.typeOf(x__2363__auto____47661)];
        if(or__3824__auto____47662) {
          return or__3824__auto____47662
        }else {
          var or__3824__auto____47663 = cljs.core._invoke["_"];
          if(or__3824__auto____47663) {
            return or__3824__auto____47663
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____47664 = this$;
      if(and__3822__auto____47664) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____47664
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2363__auto____47665 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47666 = cljs.core._invoke[goog.typeOf(x__2363__auto____47665)];
        if(or__3824__auto____47666) {
          return or__3824__auto____47666
        }else {
          var or__3824__auto____47667 = cljs.core._invoke["_"];
          if(or__3824__auto____47667) {
            return or__3824__auto____47667
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____47668 = this$;
      if(and__3822__auto____47668) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____47668
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2363__auto____47669 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47670 = cljs.core._invoke[goog.typeOf(x__2363__auto____47669)];
        if(or__3824__auto____47670) {
          return or__3824__auto____47670
        }else {
          var or__3824__auto____47671 = cljs.core._invoke["_"];
          if(or__3824__auto____47671) {
            return or__3824__auto____47671
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____47672 = this$;
      if(and__3822__auto____47672) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____47672
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2363__auto____47673 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47674 = cljs.core._invoke[goog.typeOf(x__2363__auto____47673)];
        if(or__3824__auto____47674) {
          return or__3824__auto____47674
        }else {
          var or__3824__auto____47675 = cljs.core._invoke["_"];
          if(or__3824__auto____47675) {
            return or__3824__auto____47675
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____47676 = this$;
      if(and__3822__auto____47676) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____47676
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2363__auto____47677 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47678 = cljs.core._invoke[goog.typeOf(x__2363__auto____47677)];
        if(or__3824__auto____47678) {
          return or__3824__auto____47678
        }else {
          var or__3824__auto____47679 = cljs.core._invoke["_"];
          if(or__3824__auto____47679) {
            return or__3824__auto____47679
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____47680 = this$;
      if(and__3822__auto____47680) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____47680
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2363__auto____47681 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47682 = cljs.core._invoke[goog.typeOf(x__2363__auto____47681)];
        if(or__3824__auto____47682) {
          return or__3824__auto____47682
        }else {
          var or__3824__auto____47683 = cljs.core._invoke["_"];
          if(or__3824__auto____47683) {
            return or__3824__auto____47683
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____47684 = this$;
      if(and__3822__auto____47684) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____47684
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2363__auto____47685 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47686 = cljs.core._invoke[goog.typeOf(x__2363__auto____47685)];
        if(or__3824__auto____47686) {
          return or__3824__auto____47686
        }else {
          var or__3824__auto____47687 = cljs.core._invoke["_"];
          if(or__3824__auto____47687) {
            return or__3824__auto____47687
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____47688 = this$;
      if(and__3822__auto____47688) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____47688
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2363__auto____47689 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47690 = cljs.core._invoke[goog.typeOf(x__2363__auto____47689)];
        if(or__3824__auto____47690) {
          return or__3824__auto____47690
        }else {
          var or__3824__auto____47691 = cljs.core._invoke["_"];
          if(or__3824__auto____47691) {
            return or__3824__auto____47691
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____47692 = this$;
      if(and__3822__auto____47692) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____47692
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2363__auto____47693 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47694 = cljs.core._invoke[goog.typeOf(x__2363__auto____47693)];
        if(or__3824__auto____47694) {
          return or__3824__auto____47694
        }else {
          var or__3824__auto____47695 = cljs.core._invoke["_"];
          if(or__3824__auto____47695) {
            return or__3824__auto____47695
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____47696 = this$;
      if(and__3822__auto____47696) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____47696
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2363__auto____47697 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____47698 = cljs.core._invoke[goog.typeOf(x__2363__auto____47697)];
        if(or__3824__auto____47698) {
          return or__3824__auto____47698
        }else {
          var or__3824__auto____47699 = cljs.core._invoke["_"];
          if(or__3824__auto____47699) {
            return or__3824__auto____47699
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____47704 = coll;
    if(and__3822__auto____47704) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____47704
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2363__auto____47705 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47706 = cljs.core._count[goog.typeOf(x__2363__auto____47705)];
      if(or__3824__auto____47706) {
        return or__3824__auto____47706
      }else {
        var or__3824__auto____47707 = cljs.core._count["_"];
        if(or__3824__auto____47707) {
          return or__3824__auto____47707
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____47712 = coll;
    if(and__3822__auto____47712) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____47712
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2363__auto____47713 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47714 = cljs.core._empty[goog.typeOf(x__2363__auto____47713)];
      if(or__3824__auto____47714) {
        return or__3824__auto____47714
      }else {
        var or__3824__auto____47715 = cljs.core._empty["_"];
        if(or__3824__auto____47715) {
          return or__3824__auto____47715
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____47720 = coll;
    if(and__3822__auto____47720) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____47720
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2363__auto____47721 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47722 = cljs.core._conj[goog.typeOf(x__2363__auto____47721)];
      if(or__3824__auto____47722) {
        return or__3824__auto____47722
      }else {
        var or__3824__auto____47723 = cljs.core._conj["_"];
        if(or__3824__auto____47723) {
          return or__3824__auto____47723
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____47732 = coll;
      if(and__3822__auto____47732) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____47732
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2363__auto____47733 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____47734 = cljs.core._nth[goog.typeOf(x__2363__auto____47733)];
        if(or__3824__auto____47734) {
          return or__3824__auto____47734
        }else {
          var or__3824__auto____47735 = cljs.core._nth["_"];
          if(or__3824__auto____47735) {
            return or__3824__auto____47735
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____47736 = coll;
      if(and__3822__auto____47736) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____47736
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2363__auto____47737 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____47738 = cljs.core._nth[goog.typeOf(x__2363__auto____47737)];
        if(or__3824__auto____47738) {
          return or__3824__auto____47738
        }else {
          var or__3824__auto____47739 = cljs.core._nth["_"];
          if(or__3824__auto____47739) {
            return or__3824__auto____47739
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____47744 = coll;
    if(and__3822__auto____47744) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____47744
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2363__auto____47745 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47746 = cljs.core._first[goog.typeOf(x__2363__auto____47745)];
      if(or__3824__auto____47746) {
        return or__3824__auto____47746
      }else {
        var or__3824__auto____47747 = cljs.core._first["_"];
        if(or__3824__auto____47747) {
          return or__3824__auto____47747
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____47752 = coll;
    if(and__3822__auto____47752) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____47752
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2363__auto____47753 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47754 = cljs.core._rest[goog.typeOf(x__2363__auto____47753)];
      if(or__3824__auto____47754) {
        return or__3824__auto____47754
      }else {
        var or__3824__auto____47755 = cljs.core._rest["_"];
        if(or__3824__auto____47755) {
          return or__3824__auto____47755
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____47760 = coll;
    if(and__3822__auto____47760) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____47760
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2363__auto____47761 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47762 = cljs.core._next[goog.typeOf(x__2363__auto____47761)];
      if(or__3824__auto____47762) {
        return or__3824__auto____47762
      }else {
        var or__3824__auto____47763 = cljs.core._next["_"];
        if(or__3824__auto____47763) {
          return or__3824__auto____47763
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____47772 = o;
      if(and__3822__auto____47772) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____47772
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2363__auto____47773 = o == null ? null : o;
      return function() {
        var or__3824__auto____47774 = cljs.core._lookup[goog.typeOf(x__2363__auto____47773)];
        if(or__3824__auto____47774) {
          return or__3824__auto____47774
        }else {
          var or__3824__auto____47775 = cljs.core._lookup["_"];
          if(or__3824__auto____47775) {
            return or__3824__auto____47775
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____47776 = o;
      if(and__3822__auto____47776) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____47776
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2363__auto____47777 = o == null ? null : o;
      return function() {
        var or__3824__auto____47778 = cljs.core._lookup[goog.typeOf(x__2363__auto____47777)];
        if(or__3824__auto____47778) {
          return or__3824__auto____47778
        }else {
          var or__3824__auto____47779 = cljs.core._lookup["_"];
          if(or__3824__auto____47779) {
            return or__3824__auto____47779
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____47784 = coll;
    if(and__3822__auto____47784) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____47784
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2363__auto____47785 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47786 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2363__auto____47785)];
      if(or__3824__auto____47786) {
        return or__3824__auto____47786
      }else {
        var or__3824__auto____47787 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____47787) {
          return or__3824__auto____47787
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____47792 = coll;
    if(and__3822__auto____47792) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____47792
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2363__auto____47793 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47794 = cljs.core._assoc[goog.typeOf(x__2363__auto____47793)];
      if(or__3824__auto____47794) {
        return or__3824__auto____47794
      }else {
        var or__3824__auto____47795 = cljs.core._assoc["_"];
        if(or__3824__auto____47795) {
          return or__3824__auto____47795
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____47800 = coll;
    if(and__3822__auto____47800) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____47800
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2363__auto____47801 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47802 = cljs.core._dissoc[goog.typeOf(x__2363__auto____47801)];
      if(or__3824__auto____47802) {
        return or__3824__auto____47802
      }else {
        var or__3824__auto____47803 = cljs.core._dissoc["_"];
        if(or__3824__auto____47803) {
          return or__3824__auto____47803
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____47808 = coll;
    if(and__3822__auto____47808) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____47808
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2363__auto____47809 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47810 = cljs.core._key[goog.typeOf(x__2363__auto____47809)];
      if(or__3824__auto____47810) {
        return or__3824__auto____47810
      }else {
        var or__3824__auto____47811 = cljs.core._key["_"];
        if(or__3824__auto____47811) {
          return or__3824__auto____47811
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____47816 = coll;
    if(and__3822__auto____47816) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____47816
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2363__auto____47817 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47818 = cljs.core._val[goog.typeOf(x__2363__auto____47817)];
      if(or__3824__auto____47818) {
        return or__3824__auto____47818
      }else {
        var or__3824__auto____47819 = cljs.core._val["_"];
        if(or__3824__auto____47819) {
          return or__3824__auto____47819
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____47824 = coll;
    if(and__3822__auto____47824) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____47824
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2363__auto____47825 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47826 = cljs.core._disjoin[goog.typeOf(x__2363__auto____47825)];
      if(or__3824__auto____47826) {
        return or__3824__auto____47826
      }else {
        var or__3824__auto____47827 = cljs.core._disjoin["_"];
        if(or__3824__auto____47827) {
          return or__3824__auto____47827
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____47832 = coll;
    if(and__3822__auto____47832) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____47832
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2363__auto____47833 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47834 = cljs.core._peek[goog.typeOf(x__2363__auto____47833)];
      if(or__3824__auto____47834) {
        return or__3824__auto____47834
      }else {
        var or__3824__auto____47835 = cljs.core._peek["_"];
        if(or__3824__auto____47835) {
          return or__3824__auto____47835
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____47840 = coll;
    if(and__3822__auto____47840) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____47840
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2363__auto____47841 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47842 = cljs.core._pop[goog.typeOf(x__2363__auto____47841)];
      if(or__3824__auto____47842) {
        return or__3824__auto____47842
      }else {
        var or__3824__auto____47843 = cljs.core._pop["_"];
        if(or__3824__auto____47843) {
          return or__3824__auto____47843
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____47848 = coll;
    if(and__3822__auto____47848) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____47848
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2363__auto____47849 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47850 = cljs.core._assoc_n[goog.typeOf(x__2363__auto____47849)];
      if(or__3824__auto____47850) {
        return or__3824__auto____47850
      }else {
        var or__3824__auto____47851 = cljs.core._assoc_n["_"];
        if(or__3824__auto____47851) {
          return or__3824__auto____47851
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____47856 = o;
    if(and__3822__auto____47856) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____47856
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2363__auto____47857 = o == null ? null : o;
    return function() {
      var or__3824__auto____47858 = cljs.core._deref[goog.typeOf(x__2363__auto____47857)];
      if(or__3824__auto____47858) {
        return or__3824__auto____47858
      }else {
        var or__3824__auto____47859 = cljs.core._deref["_"];
        if(or__3824__auto____47859) {
          return or__3824__auto____47859
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____47864 = o;
    if(and__3822__auto____47864) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____47864
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2363__auto____47865 = o == null ? null : o;
    return function() {
      var or__3824__auto____47866 = cljs.core._deref_with_timeout[goog.typeOf(x__2363__auto____47865)];
      if(or__3824__auto____47866) {
        return or__3824__auto____47866
      }else {
        var or__3824__auto____47867 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____47867) {
          return or__3824__auto____47867
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____47872 = o;
    if(and__3822__auto____47872) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____47872
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2363__auto____47873 = o == null ? null : o;
    return function() {
      var or__3824__auto____47874 = cljs.core._meta[goog.typeOf(x__2363__auto____47873)];
      if(or__3824__auto____47874) {
        return or__3824__auto____47874
      }else {
        var or__3824__auto____47875 = cljs.core._meta["_"];
        if(or__3824__auto____47875) {
          return or__3824__auto____47875
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____47880 = o;
    if(and__3822__auto____47880) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____47880
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2363__auto____47881 = o == null ? null : o;
    return function() {
      var or__3824__auto____47882 = cljs.core._with_meta[goog.typeOf(x__2363__auto____47881)];
      if(or__3824__auto____47882) {
        return or__3824__auto____47882
      }else {
        var or__3824__auto____47883 = cljs.core._with_meta["_"];
        if(or__3824__auto____47883) {
          return or__3824__auto____47883
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____47892 = coll;
      if(and__3822__auto____47892) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____47892
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2363__auto____47893 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____47894 = cljs.core._reduce[goog.typeOf(x__2363__auto____47893)];
        if(or__3824__auto____47894) {
          return or__3824__auto____47894
        }else {
          var or__3824__auto____47895 = cljs.core._reduce["_"];
          if(or__3824__auto____47895) {
            return or__3824__auto____47895
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____47896 = coll;
      if(and__3822__auto____47896) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____47896
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2363__auto____47897 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____47898 = cljs.core._reduce[goog.typeOf(x__2363__auto____47897)];
        if(or__3824__auto____47898) {
          return or__3824__auto____47898
        }else {
          var or__3824__auto____47899 = cljs.core._reduce["_"];
          if(or__3824__auto____47899) {
            return or__3824__auto____47899
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____47904 = coll;
    if(and__3822__auto____47904) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____47904
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2363__auto____47905 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47906 = cljs.core._kv_reduce[goog.typeOf(x__2363__auto____47905)];
      if(or__3824__auto____47906) {
        return or__3824__auto____47906
      }else {
        var or__3824__auto____47907 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____47907) {
          return or__3824__auto____47907
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____47912 = o;
    if(and__3822__auto____47912) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____47912
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2363__auto____47913 = o == null ? null : o;
    return function() {
      var or__3824__auto____47914 = cljs.core._equiv[goog.typeOf(x__2363__auto____47913)];
      if(or__3824__auto____47914) {
        return or__3824__auto____47914
      }else {
        var or__3824__auto____47915 = cljs.core._equiv["_"];
        if(or__3824__auto____47915) {
          return or__3824__auto____47915
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____47920 = o;
    if(and__3822__auto____47920) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____47920
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2363__auto____47921 = o == null ? null : o;
    return function() {
      var or__3824__auto____47922 = cljs.core._hash[goog.typeOf(x__2363__auto____47921)];
      if(or__3824__auto____47922) {
        return or__3824__auto____47922
      }else {
        var or__3824__auto____47923 = cljs.core._hash["_"];
        if(or__3824__auto____47923) {
          return or__3824__auto____47923
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____47928 = o;
    if(and__3822__auto____47928) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____47928
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2363__auto____47929 = o == null ? null : o;
    return function() {
      var or__3824__auto____47930 = cljs.core._seq[goog.typeOf(x__2363__auto____47929)];
      if(or__3824__auto____47930) {
        return or__3824__auto____47930
      }else {
        var or__3824__auto____47931 = cljs.core._seq["_"];
        if(or__3824__auto____47931) {
          return or__3824__auto____47931
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____47936 = coll;
    if(and__3822__auto____47936) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____47936
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2363__auto____47937 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47938 = cljs.core._rseq[goog.typeOf(x__2363__auto____47937)];
      if(or__3824__auto____47938) {
        return or__3824__auto____47938
      }else {
        var or__3824__auto____47939 = cljs.core._rseq["_"];
        if(or__3824__auto____47939) {
          return or__3824__auto____47939
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____47944 = coll;
    if(and__3822__auto____47944) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____47944
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2363__auto____47945 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47946 = cljs.core._sorted_seq[goog.typeOf(x__2363__auto____47945)];
      if(or__3824__auto____47946) {
        return or__3824__auto____47946
      }else {
        var or__3824__auto____47947 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____47947) {
          return or__3824__auto____47947
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____47952 = coll;
    if(and__3822__auto____47952) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____47952
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2363__auto____47953 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47954 = cljs.core._sorted_seq_from[goog.typeOf(x__2363__auto____47953)];
      if(or__3824__auto____47954) {
        return or__3824__auto____47954
      }else {
        var or__3824__auto____47955 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____47955) {
          return or__3824__auto____47955
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____47960 = coll;
    if(and__3822__auto____47960) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____47960
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2363__auto____47961 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47962 = cljs.core._entry_key[goog.typeOf(x__2363__auto____47961)];
      if(or__3824__auto____47962) {
        return or__3824__auto____47962
      }else {
        var or__3824__auto____47963 = cljs.core._entry_key["_"];
        if(or__3824__auto____47963) {
          return or__3824__auto____47963
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____47968 = coll;
    if(and__3822__auto____47968) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____47968
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2363__auto____47969 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____47970 = cljs.core._comparator[goog.typeOf(x__2363__auto____47969)];
      if(or__3824__auto____47970) {
        return or__3824__auto____47970
      }else {
        var or__3824__auto____47971 = cljs.core._comparator["_"];
        if(or__3824__auto____47971) {
          return or__3824__auto____47971
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____47976 = o;
    if(and__3822__auto____47976) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____47976
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2363__auto____47977 = o == null ? null : o;
    return function() {
      var or__3824__auto____47978 = cljs.core._pr_seq[goog.typeOf(x__2363__auto____47977)];
      if(or__3824__auto____47978) {
        return or__3824__auto____47978
      }else {
        var or__3824__auto____47979 = cljs.core._pr_seq["_"];
        if(or__3824__auto____47979) {
          return or__3824__auto____47979
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____47984 = d;
    if(and__3822__auto____47984) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____47984
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2363__auto____47985 = d == null ? null : d;
    return function() {
      var or__3824__auto____47986 = cljs.core._realized_QMARK_[goog.typeOf(x__2363__auto____47985)];
      if(or__3824__auto____47986) {
        return or__3824__auto____47986
      }else {
        var or__3824__auto____47987 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____47987) {
          return or__3824__auto____47987
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____47992 = this$;
    if(and__3822__auto____47992) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____47992
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2363__auto____47993 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____47994 = cljs.core._notify_watches[goog.typeOf(x__2363__auto____47993)];
      if(or__3824__auto____47994) {
        return or__3824__auto____47994
      }else {
        var or__3824__auto____47995 = cljs.core._notify_watches["_"];
        if(or__3824__auto____47995) {
          return or__3824__auto____47995
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____48000 = this$;
    if(and__3822__auto____48000) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____48000
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2363__auto____48001 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____48002 = cljs.core._add_watch[goog.typeOf(x__2363__auto____48001)];
      if(or__3824__auto____48002) {
        return or__3824__auto____48002
      }else {
        var or__3824__auto____48003 = cljs.core._add_watch["_"];
        if(or__3824__auto____48003) {
          return or__3824__auto____48003
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____48008 = this$;
    if(and__3822__auto____48008) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____48008
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2363__auto____48009 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____48010 = cljs.core._remove_watch[goog.typeOf(x__2363__auto____48009)];
      if(or__3824__auto____48010) {
        return or__3824__auto____48010
      }else {
        var or__3824__auto____48011 = cljs.core._remove_watch["_"];
        if(or__3824__auto____48011) {
          return or__3824__auto____48011
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____48016 = coll;
    if(and__3822__auto____48016) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____48016
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2363__auto____48017 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____48018 = cljs.core._as_transient[goog.typeOf(x__2363__auto____48017)];
      if(or__3824__auto____48018) {
        return or__3824__auto____48018
      }else {
        var or__3824__auto____48019 = cljs.core._as_transient["_"];
        if(or__3824__auto____48019) {
          return or__3824__auto____48019
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____48024 = tcoll;
    if(and__3822__auto____48024) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____48024
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2363__auto____48025 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____48026 = cljs.core._conj_BANG_[goog.typeOf(x__2363__auto____48025)];
      if(or__3824__auto____48026) {
        return or__3824__auto____48026
      }else {
        var or__3824__auto____48027 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____48027) {
          return or__3824__auto____48027
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____48032 = tcoll;
    if(and__3822__auto____48032) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____48032
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____48033 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____48034 = cljs.core._persistent_BANG_[goog.typeOf(x__2363__auto____48033)];
      if(or__3824__auto____48034) {
        return or__3824__auto____48034
      }else {
        var or__3824__auto____48035 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____48035) {
          return or__3824__auto____48035
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____48040 = tcoll;
    if(and__3822__auto____48040) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____48040
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2363__auto____48041 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____48042 = cljs.core._assoc_BANG_[goog.typeOf(x__2363__auto____48041)];
      if(or__3824__auto____48042) {
        return or__3824__auto____48042
      }else {
        var or__3824__auto____48043 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____48043) {
          return or__3824__auto____48043
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____48048 = tcoll;
    if(and__3822__auto____48048) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____48048
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2363__auto____48049 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____48050 = cljs.core._dissoc_BANG_[goog.typeOf(x__2363__auto____48049)];
      if(or__3824__auto____48050) {
        return or__3824__auto____48050
      }else {
        var or__3824__auto____48051 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____48051) {
          return or__3824__auto____48051
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____48056 = tcoll;
    if(and__3822__auto____48056) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____48056
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2363__auto____48057 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____48058 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2363__auto____48057)];
      if(or__3824__auto____48058) {
        return or__3824__auto____48058
      }else {
        var or__3824__auto____48059 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____48059) {
          return or__3824__auto____48059
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____48064 = tcoll;
    if(and__3822__auto____48064) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____48064
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____48065 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____48066 = cljs.core._pop_BANG_[goog.typeOf(x__2363__auto____48065)];
      if(or__3824__auto____48066) {
        return or__3824__auto____48066
      }else {
        var or__3824__auto____48067 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____48067) {
          return or__3824__auto____48067
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____48072 = tcoll;
    if(and__3822__auto____48072) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____48072
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2363__auto____48073 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____48074 = cljs.core._disjoin_BANG_[goog.typeOf(x__2363__auto____48073)];
      if(or__3824__auto____48074) {
        return or__3824__auto____48074
      }else {
        var or__3824__auto____48075 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____48075) {
          return or__3824__auto____48075
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____48080 = x;
    if(and__3822__auto____48080) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____48080
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2363__auto____48081 = x == null ? null : x;
    return function() {
      var or__3824__auto____48082 = cljs.core._compare[goog.typeOf(x__2363__auto____48081)];
      if(or__3824__auto____48082) {
        return or__3824__auto____48082
      }else {
        var or__3824__auto____48083 = cljs.core._compare["_"];
        if(or__3824__auto____48083) {
          return or__3824__auto____48083
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____48088 = coll;
    if(and__3822__auto____48088) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____48088
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2363__auto____48089 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____48090 = cljs.core._drop_first[goog.typeOf(x__2363__auto____48089)];
      if(or__3824__auto____48090) {
        return or__3824__auto____48090
      }else {
        var or__3824__auto____48091 = cljs.core._drop_first["_"];
        if(or__3824__auto____48091) {
          return or__3824__auto____48091
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____48096 = coll;
    if(and__3822__auto____48096) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____48096
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2363__auto____48097 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____48098 = cljs.core._chunked_first[goog.typeOf(x__2363__auto____48097)];
      if(or__3824__auto____48098) {
        return or__3824__auto____48098
      }else {
        var or__3824__auto____48099 = cljs.core._chunked_first["_"];
        if(or__3824__auto____48099) {
          return or__3824__auto____48099
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____48104 = coll;
    if(and__3822__auto____48104) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____48104
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2363__auto____48105 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____48106 = cljs.core._chunked_rest[goog.typeOf(x__2363__auto____48105)];
      if(or__3824__auto____48106) {
        return or__3824__auto____48106
      }else {
        var or__3824__auto____48107 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____48107) {
          return or__3824__auto____48107
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____48112 = coll;
    if(and__3822__auto____48112) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____48112
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2363__auto____48113 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____48114 = cljs.core._chunked_next[goog.typeOf(x__2363__auto____48113)];
      if(or__3824__auto____48114) {
        return or__3824__auto____48114
      }else {
        var or__3824__auto____48115 = cljs.core._chunked_next["_"];
        if(or__3824__auto____48115) {
          return or__3824__auto____48115
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____48117 = x === y;
    if(or__3824__auto____48117) {
      return or__3824__auto____48117
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__48118__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__48119 = y;
            var G__48120 = cljs.core.first.call(null, more);
            var G__48121 = cljs.core.next.call(null, more);
            x = G__48119;
            y = G__48120;
            more = G__48121;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__48118 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48118__delegate.call(this, x, y, more)
    };
    G__48118.cljs$lang$maxFixedArity = 2;
    G__48118.cljs$lang$applyTo = function(arglist__48122) {
      var x = cljs.core.first(arglist__48122);
      var y = cljs.core.first(cljs.core.next(arglist__48122));
      var more = cljs.core.rest(cljs.core.next(arglist__48122));
      return G__48118__delegate(x, y, more)
    };
    G__48118.cljs$lang$arity$variadic = G__48118__delegate;
    return G__48118
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__48123 = null;
  var G__48123__2 = function(o, k) {
    return null
  };
  var G__48123__3 = function(o, k, not_found) {
    return not_found
  };
  G__48123 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__48123__2.call(this, o, k);
      case 3:
        return G__48123__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__48123
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__48124 = null;
  var G__48124__2 = function(_, f) {
    return f.call(null)
  };
  var G__48124__3 = function(_, f, start) {
    return start
  };
  G__48124 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__48124__2.call(this, _, f);
      case 3:
        return G__48124__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__48124
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__48125 = null;
  var G__48125__2 = function(_, n) {
    return null
  };
  var G__48125__3 = function(_, n, not_found) {
    return not_found
  };
  G__48125 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__48125__2.call(this, _, n);
      case 3:
        return G__48125__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__48125
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____48126 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____48126) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____48126
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__48139 = cljs.core._count.call(null, cicoll);
    if(cnt__48139 === 0) {
      return f.call(null)
    }else {
      var val__48140 = cljs.core._nth.call(null, cicoll, 0);
      var n__48141 = 1;
      while(true) {
        if(n__48141 < cnt__48139) {
          var nval__48142 = f.call(null, val__48140, cljs.core._nth.call(null, cicoll, n__48141));
          if(cljs.core.reduced_QMARK_.call(null, nval__48142)) {
            return cljs.core.deref.call(null, nval__48142)
          }else {
            var G__48151 = nval__48142;
            var G__48152 = n__48141 + 1;
            val__48140 = G__48151;
            n__48141 = G__48152;
            continue
          }
        }else {
          return val__48140
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__48143 = cljs.core._count.call(null, cicoll);
    var val__48144 = val;
    var n__48145 = 0;
    while(true) {
      if(n__48145 < cnt__48143) {
        var nval__48146 = f.call(null, val__48144, cljs.core._nth.call(null, cicoll, n__48145));
        if(cljs.core.reduced_QMARK_.call(null, nval__48146)) {
          return cljs.core.deref.call(null, nval__48146)
        }else {
          var G__48153 = nval__48146;
          var G__48154 = n__48145 + 1;
          val__48144 = G__48153;
          n__48145 = G__48154;
          continue
        }
      }else {
        return val__48144
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__48147 = cljs.core._count.call(null, cicoll);
    var val__48148 = val;
    var n__48149 = idx;
    while(true) {
      if(n__48149 < cnt__48147) {
        var nval__48150 = f.call(null, val__48148, cljs.core._nth.call(null, cicoll, n__48149));
        if(cljs.core.reduced_QMARK_.call(null, nval__48150)) {
          return cljs.core.deref.call(null, nval__48150)
        }else {
          var G__48155 = nval__48150;
          var G__48156 = n__48149 + 1;
          val__48148 = G__48155;
          n__48149 = G__48156;
          continue
        }
      }else {
        return val__48148
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__48169 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__48170 = arr[0];
      var n__48171 = 1;
      while(true) {
        if(n__48171 < cnt__48169) {
          var nval__48172 = f.call(null, val__48170, arr[n__48171]);
          if(cljs.core.reduced_QMARK_.call(null, nval__48172)) {
            return cljs.core.deref.call(null, nval__48172)
          }else {
            var G__48181 = nval__48172;
            var G__48182 = n__48171 + 1;
            val__48170 = G__48181;
            n__48171 = G__48182;
            continue
          }
        }else {
          return val__48170
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__48173 = arr.length;
    var val__48174 = val;
    var n__48175 = 0;
    while(true) {
      if(n__48175 < cnt__48173) {
        var nval__48176 = f.call(null, val__48174, arr[n__48175]);
        if(cljs.core.reduced_QMARK_.call(null, nval__48176)) {
          return cljs.core.deref.call(null, nval__48176)
        }else {
          var G__48183 = nval__48176;
          var G__48184 = n__48175 + 1;
          val__48174 = G__48183;
          n__48175 = G__48184;
          continue
        }
      }else {
        return val__48174
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__48177 = arr.length;
    var val__48178 = val;
    var n__48179 = idx;
    while(true) {
      if(n__48179 < cnt__48177) {
        var nval__48180 = f.call(null, val__48178, arr[n__48179]);
        if(cljs.core.reduced_QMARK_.call(null, nval__48180)) {
          return cljs.core.deref.call(null, nval__48180)
        }else {
          var G__48185 = nval__48180;
          var G__48186 = n__48179 + 1;
          val__48178 = G__48185;
          n__48179 = G__48186;
          continue
        }
      }else {
        return val__48178
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__48187 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__48188 = this;
  if(this__48188.i + 1 < this__48188.a.length) {
    return new cljs.core.IndexedSeq(this__48188.a, this__48188.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__48189 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__48190 = this;
  var c__48191 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__48191 > 0) {
    return new cljs.core.RSeq(coll, c__48191 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__48192 = this;
  var this__48193 = this;
  return cljs.core.pr_str.call(null, this__48193)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__48194 = this;
  if(cljs.core.counted_QMARK_.call(null, this__48194.a)) {
    return cljs.core.ci_reduce.call(null, this__48194.a, f, this__48194.a[this__48194.i], this__48194.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__48194.a[this__48194.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__48195 = this;
  if(cljs.core.counted_QMARK_.call(null, this__48195.a)) {
    return cljs.core.ci_reduce.call(null, this__48195.a, f, start, this__48195.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__48196 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__48197 = this;
  return this__48197.a.length - this__48197.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__48198 = this;
  return this__48198.a[this__48198.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__48199 = this;
  if(this__48199.i + 1 < this__48199.a.length) {
    return new cljs.core.IndexedSeq(this__48199.a, this__48199.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__48200 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__48201 = this;
  var i__48202 = n + this__48201.i;
  if(i__48202 < this__48201.a.length) {
    return this__48201.a[i__48202]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__48203 = this;
  var i__48204 = n + this__48203.i;
  if(i__48204 < this__48203.a.length) {
    return this__48203.a[i__48204]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__48205 = null;
  var G__48205__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__48205__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__48205 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__48205__2.call(this, array, f);
      case 3:
        return G__48205__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__48205
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__48206 = null;
  var G__48206__2 = function(array, k) {
    return array[k]
  };
  var G__48206__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__48206 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__48206__2.call(this, array, k);
      case 3:
        return G__48206__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__48206
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__48207 = null;
  var G__48207__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__48207__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__48207 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__48207__2.call(this, array, n);
      case 3:
        return G__48207__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__48207
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__48208 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__48209 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__48210 = this;
  var this__48211 = this;
  return cljs.core.pr_str.call(null, this__48211)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__48212 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__48213 = this;
  return this__48213.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__48214 = this;
  return cljs.core._nth.call(null, this__48214.ci, this__48214.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__48215 = this;
  if(this__48215.i > 0) {
    return new cljs.core.RSeq(this__48215.ci, this__48215.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__48216 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__48217 = this;
  return new cljs.core.RSeq(this__48217.ci, this__48217.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__48218 = this;
  return this__48218.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__48222__48223 = coll;
      if(G__48222__48223) {
        if(function() {
          var or__3824__auto____48224 = G__48222__48223.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____48224) {
            return or__3824__auto____48224
          }else {
            return G__48222__48223.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__48222__48223.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__48222__48223)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__48222__48223)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__48229__48230 = coll;
      if(G__48229__48230) {
        if(function() {
          var or__3824__auto____48231 = G__48229__48230.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____48231) {
            return or__3824__auto____48231
          }else {
            return G__48229__48230.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__48229__48230.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__48229__48230)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__48229__48230)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__48232 = cljs.core.seq.call(null, coll);
      if(s__48232 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__48232)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__48237__48238 = coll;
      if(G__48237__48238) {
        if(function() {
          var or__3824__auto____48239 = G__48237__48238.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____48239) {
            return or__3824__auto____48239
          }else {
            return G__48237__48238.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__48237__48238.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__48237__48238)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__48237__48238)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__48240 = cljs.core.seq.call(null, coll);
      if(!(s__48240 == null)) {
        return cljs.core._rest.call(null, s__48240)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__48244__48245 = coll;
      if(G__48244__48245) {
        if(function() {
          var or__3824__auto____48246 = G__48244__48245.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____48246) {
            return or__3824__auto____48246
          }else {
            return G__48244__48245.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__48244__48245.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__48244__48245)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__48244__48245)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__48248 = cljs.core.next.call(null, s);
    if(!(sn__48248 == null)) {
      var G__48249 = sn__48248;
      s = G__48249;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__48250__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__48251 = conj.call(null, coll, x);
          var G__48252 = cljs.core.first.call(null, xs);
          var G__48253 = cljs.core.next.call(null, xs);
          coll = G__48251;
          x = G__48252;
          xs = G__48253;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__48250 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48250__delegate.call(this, coll, x, xs)
    };
    G__48250.cljs$lang$maxFixedArity = 2;
    G__48250.cljs$lang$applyTo = function(arglist__48254) {
      var coll = cljs.core.first(arglist__48254);
      var x = cljs.core.first(cljs.core.next(arglist__48254));
      var xs = cljs.core.rest(cljs.core.next(arglist__48254));
      return G__48250__delegate(coll, x, xs)
    };
    G__48250.cljs$lang$arity$variadic = G__48250__delegate;
    return G__48250
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__48257 = cljs.core.seq.call(null, coll);
  var acc__48258 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__48257)) {
      return acc__48258 + cljs.core._count.call(null, s__48257)
    }else {
      var G__48259 = cljs.core.next.call(null, s__48257);
      var G__48260 = acc__48258 + 1;
      s__48257 = G__48259;
      acc__48258 = G__48260;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__48267__48268 = coll;
        if(G__48267__48268) {
          if(function() {
            var or__3824__auto____48269 = G__48267__48268.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____48269) {
              return or__3824__auto____48269
            }else {
              return G__48267__48268.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__48267__48268.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__48267__48268)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__48267__48268)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__48270__48271 = coll;
        if(G__48270__48271) {
          if(function() {
            var or__3824__auto____48272 = G__48270__48271.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____48272) {
              return or__3824__auto____48272
            }else {
              return G__48270__48271.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__48270__48271.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__48270__48271)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__48270__48271)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__48275__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__48274 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__48276 = ret__48274;
          var G__48277 = cljs.core.first.call(null, kvs);
          var G__48278 = cljs.core.second.call(null, kvs);
          var G__48279 = cljs.core.nnext.call(null, kvs);
          coll = G__48276;
          k = G__48277;
          v = G__48278;
          kvs = G__48279;
          continue
        }else {
          return ret__48274
        }
        break
      }
    };
    var G__48275 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__48275__delegate.call(this, coll, k, v, kvs)
    };
    G__48275.cljs$lang$maxFixedArity = 3;
    G__48275.cljs$lang$applyTo = function(arglist__48280) {
      var coll = cljs.core.first(arglist__48280);
      var k = cljs.core.first(cljs.core.next(arglist__48280));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__48280)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__48280)));
      return G__48275__delegate(coll, k, v, kvs)
    };
    G__48275.cljs$lang$arity$variadic = G__48275__delegate;
    return G__48275
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__48283__delegate = function(coll, k, ks) {
      while(true) {
        var ret__48282 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__48284 = ret__48282;
          var G__48285 = cljs.core.first.call(null, ks);
          var G__48286 = cljs.core.next.call(null, ks);
          coll = G__48284;
          k = G__48285;
          ks = G__48286;
          continue
        }else {
          return ret__48282
        }
        break
      }
    };
    var G__48283 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48283__delegate.call(this, coll, k, ks)
    };
    G__48283.cljs$lang$maxFixedArity = 2;
    G__48283.cljs$lang$applyTo = function(arglist__48287) {
      var coll = cljs.core.first(arglist__48287);
      var k = cljs.core.first(cljs.core.next(arglist__48287));
      var ks = cljs.core.rest(cljs.core.next(arglist__48287));
      return G__48283__delegate(coll, k, ks)
    };
    G__48283.cljs$lang$arity$variadic = G__48283__delegate;
    return G__48283
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__48291__48292 = o;
    if(G__48291__48292) {
      if(function() {
        var or__3824__auto____48293 = G__48291__48292.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____48293) {
          return or__3824__auto____48293
        }else {
          return G__48291__48292.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__48291__48292.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__48291__48292)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__48291__48292)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__48296__delegate = function(coll, k, ks) {
      while(true) {
        var ret__48295 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__48297 = ret__48295;
          var G__48298 = cljs.core.first.call(null, ks);
          var G__48299 = cljs.core.next.call(null, ks);
          coll = G__48297;
          k = G__48298;
          ks = G__48299;
          continue
        }else {
          return ret__48295
        }
        break
      }
    };
    var G__48296 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48296__delegate.call(this, coll, k, ks)
    };
    G__48296.cljs$lang$maxFixedArity = 2;
    G__48296.cljs$lang$applyTo = function(arglist__48300) {
      var coll = cljs.core.first(arglist__48300);
      var k = cljs.core.first(cljs.core.next(arglist__48300));
      var ks = cljs.core.rest(cljs.core.next(arglist__48300));
      return G__48296__delegate(coll, k, ks)
    };
    G__48296.cljs$lang$arity$variadic = G__48296__delegate;
    return G__48296
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__48302 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__48302;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__48302
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__48304 = cljs.core.string_hash_cache[k];
  if(!(h__48304 == null)) {
    return h__48304
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____48306 = goog.isString(o);
      if(and__3822__auto____48306) {
        return check_cache
      }else {
        return and__3822__auto____48306
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__48310__48311 = x;
    if(G__48310__48311) {
      if(function() {
        var or__3824__auto____48312 = G__48310__48311.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____48312) {
          return or__3824__auto____48312
        }else {
          return G__48310__48311.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__48310__48311.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__48310__48311)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__48310__48311)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__48316__48317 = x;
    if(G__48316__48317) {
      if(function() {
        var or__3824__auto____48318 = G__48316__48317.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____48318) {
          return or__3824__auto____48318
        }else {
          return G__48316__48317.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__48316__48317.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__48316__48317)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__48316__48317)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__48322__48323 = x;
  if(G__48322__48323) {
    if(function() {
      var or__3824__auto____48324 = G__48322__48323.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____48324) {
        return or__3824__auto____48324
      }else {
        return G__48322__48323.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__48322__48323.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__48322__48323)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__48322__48323)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__48328__48329 = x;
  if(G__48328__48329) {
    if(function() {
      var or__3824__auto____48330 = G__48328__48329.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____48330) {
        return or__3824__auto____48330
      }else {
        return G__48328__48329.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__48328__48329.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__48328__48329)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__48328__48329)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__48334__48335 = x;
  if(G__48334__48335) {
    if(function() {
      var or__3824__auto____48336 = G__48334__48335.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____48336) {
        return or__3824__auto____48336
      }else {
        return G__48334__48335.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__48334__48335.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__48334__48335)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__48334__48335)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__48340__48341 = x;
  if(G__48340__48341) {
    if(function() {
      var or__3824__auto____48342 = G__48340__48341.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____48342) {
        return or__3824__auto____48342
      }else {
        return G__48340__48341.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__48340__48341.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__48340__48341)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__48340__48341)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__48346__48347 = x;
  if(G__48346__48347) {
    if(function() {
      var or__3824__auto____48348 = G__48346__48347.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____48348) {
        return or__3824__auto____48348
      }else {
        return G__48346__48347.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__48346__48347.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__48346__48347)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__48346__48347)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__48352__48353 = x;
    if(G__48352__48353) {
      if(function() {
        var or__3824__auto____48354 = G__48352__48353.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____48354) {
          return or__3824__auto____48354
        }else {
          return G__48352__48353.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__48352__48353.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__48352__48353)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__48352__48353)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__48358__48359 = x;
  if(G__48358__48359) {
    if(function() {
      var or__3824__auto____48360 = G__48358__48359.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____48360) {
        return or__3824__auto____48360
      }else {
        return G__48358__48359.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__48358__48359.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__48358__48359)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__48358__48359)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__48364__48365 = x;
  if(G__48364__48365) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____48366 = null;
      if(cljs.core.truth_(or__3824__auto____48366)) {
        return or__3824__auto____48366
      }else {
        return G__48364__48365.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__48364__48365.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__48364__48365)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__48364__48365)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__48367__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__48367 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__48367__delegate.call(this, keyvals)
    };
    G__48367.cljs$lang$maxFixedArity = 0;
    G__48367.cljs$lang$applyTo = function(arglist__48368) {
      var keyvals = cljs.core.seq(arglist__48368);
      return G__48367__delegate(keyvals)
    };
    G__48367.cljs$lang$arity$variadic = G__48367__delegate;
    return G__48367
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__48370 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__48370.push(key)
  });
  return keys__48370
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__48374 = i;
  var j__48375 = j;
  var len__48376 = len;
  while(true) {
    if(len__48376 === 0) {
      return to
    }else {
      to[j__48375] = from[i__48374];
      var G__48377 = i__48374 + 1;
      var G__48378 = j__48375 + 1;
      var G__48379 = len__48376 - 1;
      i__48374 = G__48377;
      j__48375 = G__48378;
      len__48376 = G__48379;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__48383 = i + (len - 1);
  var j__48384 = j + (len - 1);
  var len__48385 = len;
  while(true) {
    if(len__48385 === 0) {
      return to
    }else {
      to[j__48384] = from[i__48383];
      var G__48386 = i__48383 - 1;
      var G__48387 = j__48384 - 1;
      var G__48388 = len__48385 - 1;
      i__48383 = G__48386;
      j__48384 = G__48387;
      len__48385 = G__48388;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__48392__48393 = s;
    if(G__48392__48393) {
      if(function() {
        var or__3824__auto____48394 = G__48392__48393.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____48394) {
          return or__3824__auto____48394
        }else {
          return G__48392__48393.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__48392__48393.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__48392__48393)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__48392__48393)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__48398__48399 = s;
  if(G__48398__48399) {
    if(function() {
      var or__3824__auto____48400 = G__48398__48399.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____48400) {
        return or__3824__auto____48400
      }else {
        return G__48398__48399.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__48398__48399.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__48398__48399)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__48398__48399)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____48403 = goog.isString(x);
  if(and__3822__auto____48403) {
    return!function() {
      var or__3824__auto____48404 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____48404) {
        return or__3824__auto____48404
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____48403
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____48406 = goog.isString(x);
  if(and__3822__auto____48406) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____48406
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____48408 = goog.isString(x);
  if(and__3822__auto____48408) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____48408
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____48413 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____48413) {
    return or__3824__auto____48413
  }else {
    var G__48414__48415 = f;
    if(G__48414__48415) {
      if(function() {
        var or__3824__auto____48416 = G__48414__48415.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____48416) {
          return or__3824__auto____48416
        }else {
          return G__48414__48415.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__48414__48415.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__48414__48415)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__48414__48415)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____48418 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____48418) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____48418
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____48421 = coll;
    if(cljs.core.truth_(and__3822__auto____48421)) {
      var and__3822__auto____48422 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____48422) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____48422
      }
    }else {
      return and__3822__auto____48421
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__48431__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__48427 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__48428 = more;
        while(true) {
          var x__48429 = cljs.core.first.call(null, xs__48428);
          var etc__48430 = cljs.core.next.call(null, xs__48428);
          if(cljs.core.truth_(xs__48428)) {
            if(cljs.core.contains_QMARK_.call(null, s__48427, x__48429)) {
              return false
            }else {
              var G__48432 = cljs.core.conj.call(null, s__48427, x__48429);
              var G__48433 = etc__48430;
              s__48427 = G__48432;
              xs__48428 = G__48433;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__48431 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48431__delegate.call(this, x, y, more)
    };
    G__48431.cljs$lang$maxFixedArity = 2;
    G__48431.cljs$lang$applyTo = function(arglist__48434) {
      var x = cljs.core.first(arglist__48434);
      var y = cljs.core.first(cljs.core.next(arglist__48434));
      var more = cljs.core.rest(cljs.core.next(arglist__48434));
      return G__48431__delegate(x, y, more)
    };
    G__48431.cljs$lang$arity$variadic = G__48431__delegate;
    return G__48431
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__48438__48439 = x;
            if(G__48438__48439) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____48440 = null;
                if(cljs.core.truth_(or__3824__auto____48440)) {
                  return or__3824__auto____48440
                }else {
                  return G__48438__48439.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__48438__48439.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__48438__48439)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__48438__48439)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__48445 = cljs.core.count.call(null, xs);
    var yl__48446 = cljs.core.count.call(null, ys);
    if(xl__48445 < yl__48446) {
      return-1
    }else {
      if(xl__48445 > yl__48446) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__48445, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__48447 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____48448 = d__48447 === 0;
        if(and__3822__auto____48448) {
          return n + 1 < len
        }else {
          return and__3822__auto____48448
        }
      }()) {
        var G__48449 = xs;
        var G__48450 = ys;
        var G__48451 = len;
        var G__48452 = n + 1;
        xs = G__48449;
        ys = G__48450;
        len = G__48451;
        n = G__48452;
        continue
      }else {
        return d__48447
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__48454 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__48454)) {
        return r__48454
      }else {
        if(cljs.core.truth_(r__48454)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__48456 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__48456, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__48456)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____48462 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____48462) {
      var s__48463 = temp__3971__auto____48462;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__48463), cljs.core.next.call(null, s__48463))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__48464 = val;
    var coll__48465 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__48465) {
        var nval__48466 = f.call(null, val__48464, cljs.core.first.call(null, coll__48465));
        if(cljs.core.reduced_QMARK_.call(null, nval__48466)) {
          return cljs.core.deref.call(null, nval__48466)
        }else {
          var G__48467 = nval__48466;
          var G__48468 = cljs.core.next.call(null, coll__48465);
          val__48464 = G__48467;
          coll__48465 = G__48468;
          continue
        }
      }else {
        return val__48464
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__48470 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__48470);
  return cljs.core.vec.call(null, a__48470)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__48477__48478 = coll;
      if(G__48477__48478) {
        if(function() {
          var or__3824__auto____48479 = G__48477__48478.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____48479) {
            return or__3824__auto____48479
          }else {
            return G__48477__48478.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__48477__48478.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__48477__48478)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__48477__48478)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__48480__48481 = coll;
      if(G__48480__48481) {
        if(function() {
          var or__3824__auto____48482 = G__48480__48481.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____48482) {
            return or__3824__auto____48482
          }else {
            return G__48480__48481.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__48480__48481.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__48480__48481)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__48480__48481)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__48483 = this;
  return this__48483.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__48484__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__48484 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48484__delegate.call(this, x, y, more)
    };
    G__48484.cljs$lang$maxFixedArity = 2;
    G__48484.cljs$lang$applyTo = function(arglist__48485) {
      var x = cljs.core.first(arglist__48485);
      var y = cljs.core.first(cljs.core.next(arglist__48485));
      var more = cljs.core.rest(cljs.core.next(arglist__48485));
      return G__48484__delegate(x, y, more)
    };
    G__48484.cljs$lang$arity$variadic = G__48484__delegate;
    return G__48484
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__48486__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__48486 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48486__delegate.call(this, x, y, more)
    };
    G__48486.cljs$lang$maxFixedArity = 2;
    G__48486.cljs$lang$applyTo = function(arglist__48487) {
      var x = cljs.core.first(arglist__48487);
      var y = cljs.core.first(cljs.core.next(arglist__48487));
      var more = cljs.core.rest(cljs.core.next(arglist__48487));
      return G__48486__delegate(x, y, more)
    };
    G__48486.cljs$lang$arity$variadic = G__48486__delegate;
    return G__48486
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__48488__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__48488 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48488__delegate.call(this, x, y, more)
    };
    G__48488.cljs$lang$maxFixedArity = 2;
    G__48488.cljs$lang$applyTo = function(arglist__48489) {
      var x = cljs.core.first(arglist__48489);
      var y = cljs.core.first(cljs.core.next(arglist__48489));
      var more = cljs.core.rest(cljs.core.next(arglist__48489));
      return G__48488__delegate(x, y, more)
    };
    G__48488.cljs$lang$arity$variadic = G__48488__delegate;
    return G__48488
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__48490__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__48490 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48490__delegate.call(this, x, y, more)
    };
    G__48490.cljs$lang$maxFixedArity = 2;
    G__48490.cljs$lang$applyTo = function(arglist__48491) {
      var x = cljs.core.first(arglist__48491);
      var y = cljs.core.first(cljs.core.next(arglist__48491));
      var more = cljs.core.rest(cljs.core.next(arglist__48491));
      return G__48490__delegate(x, y, more)
    };
    G__48490.cljs$lang$arity$variadic = G__48490__delegate;
    return G__48490
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__48492__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__48493 = y;
            var G__48494 = cljs.core.first.call(null, more);
            var G__48495 = cljs.core.next.call(null, more);
            x = G__48493;
            y = G__48494;
            more = G__48495;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__48492 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48492__delegate.call(this, x, y, more)
    };
    G__48492.cljs$lang$maxFixedArity = 2;
    G__48492.cljs$lang$applyTo = function(arglist__48496) {
      var x = cljs.core.first(arglist__48496);
      var y = cljs.core.first(cljs.core.next(arglist__48496));
      var more = cljs.core.rest(cljs.core.next(arglist__48496));
      return G__48492__delegate(x, y, more)
    };
    G__48492.cljs$lang$arity$variadic = G__48492__delegate;
    return G__48492
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__48497__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__48498 = y;
            var G__48499 = cljs.core.first.call(null, more);
            var G__48500 = cljs.core.next.call(null, more);
            x = G__48498;
            y = G__48499;
            more = G__48500;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__48497 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48497__delegate.call(this, x, y, more)
    };
    G__48497.cljs$lang$maxFixedArity = 2;
    G__48497.cljs$lang$applyTo = function(arglist__48501) {
      var x = cljs.core.first(arglist__48501);
      var y = cljs.core.first(cljs.core.next(arglist__48501));
      var more = cljs.core.rest(cljs.core.next(arglist__48501));
      return G__48497__delegate(x, y, more)
    };
    G__48497.cljs$lang$arity$variadic = G__48497__delegate;
    return G__48497
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__48502__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__48503 = y;
            var G__48504 = cljs.core.first.call(null, more);
            var G__48505 = cljs.core.next.call(null, more);
            x = G__48503;
            y = G__48504;
            more = G__48505;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__48502 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48502__delegate.call(this, x, y, more)
    };
    G__48502.cljs$lang$maxFixedArity = 2;
    G__48502.cljs$lang$applyTo = function(arglist__48506) {
      var x = cljs.core.first(arglist__48506);
      var y = cljs.core.first(cljs.core.next(arglist__48506));
      var more = cljs.core.rest(cljs.core.next(arglist__48506));
      return G__48502__delegate(x, y, more)
    };
    G__48502.cljs$lang$arity$variadic = G__48502__delegate;
    return G__48502
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__48507__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__48508 = y;
            var G__48509 = cljs.core.first.call(null, more);
            var G__48510 = cljs.core.next.call(null, more);
            x = G__48508;
            y = G__48509;
            more = G__48510;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__48507 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48507__delegate.call(this, x, y, more)
    };
    G__48507.cljs$lang$maxFixedArity = 2;
    G__48507.cljs$lang$applyTo = function(arglist__48511) {
      var x = cljs.core.first(arglist__48511);
      var y = cljs.core.first(cljs.core.next(arglist__48511));
      var more = cljs.core.rest(cljs.core.next(arglist__48511));
      return G__48507__delegate(x, y, more)
    };
    G__48507.cljs$lang$arity$variadic = G__48507__delegate;
    return G__48507
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__48512__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__48512 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48512__delegate.call(this, x, y, more)
    };
    G__48512.cljs$lang$maxFixedArity = 2;
    G__48512.cljs$lang$applyTo = function(arglist__48513) {
      var x = cljs.core.first(arglist__48513);
      var y = cljs.core.first(cljs.core.next(arglist__48513));
      var more = cljs.core.rest(cljs.core.next(arglist__48513));
      return G__48512__delegate(x, y, more)
    };
    G__48512.cljs$lang$arity$variadic = G__48512__delegate;
    return G__48512
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__48514__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__48514 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48514__delegate.call(this, x, y, more)
    };
    G__48514.cljs$lang$maxFixedArity = 2;
    G__48514.cljs$lang$applyTo = function(arglist__48515) {
      var x = cljs.core.first(arglist__48515);
      var y = cljs.core.first(cljs.core.next(arglist__48515));
      var more = cljs.core.rest(cljs.core.next(arglist__48515));
      return G__48514__delegate(x, y, more)
    };
    G__48514.cljs$lang$arity$variadic = G__48514__delegate;
    return G__48514
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__48517 = n % d;
  return cljs.core.fix.call(null, (n - rem__48517) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__48519 = cljs.core.quot.call(null, n, d);
  return n - d * q__48519
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__48522 = v - (v >> 1 & 1431655765);
  var v__48523 = (v__48522 & 858993459) + (v__48522 >> 2 & 858993459);
  return(v__48523 + (v__48523 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__48524__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__48525 = y;
            var G__48526 = cljs.core.first.call(null, more);
            var G__48527 = cljs.core.next.call(null, more);
            x = G__48525;
            y = G__48526;
            more = G__48527;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__48524 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48524__delegate.call(this, x, y, more)
    };
    G__48524.cljs$lang$maxFixedArity = 2;
    G__48524.cljs$lang$applyTo = function(arglist__48528) {
      var x = cljs.core.first(arglist__48528);
      var y = cljs.core.first(cljs.core.next(arglist__48528));
      var more = cljs.core.rest(cljs.core.next(arglist__48528));
      return G__48524__delegate(x, y, more)
    };
    G__48524.cljs$lang$arity$variadic = G__48524__delegate;
    return G__48524
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__48532 = n;
  var xs__48533 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____48534 = xs__48533;
      if(and__3822__auto____48534) {
        return n__48532 > 0
      }else {
        return and__3822__auto____48534
      }
    }())) {
      var G__48535 = n__48532 - 1;
      var G__48536 = cljs.core.next.call(null, xs__48533);
      n__48532 = G__48535;
      xs__48533 = G__48536;
      continue
    }else {
      return xs__48533
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__48537__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__48538 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__48539 = cljs.core.next.call(null, more);
            sb = G__48538;
            more = G__48539;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__48537 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__48537__delegate.call(this, x, ys)
    };
    G__48537.cljs$lang$maxFixedArity = 1;
    G__48537.cljs$lang$applyTo = function(arglist__48540) {
      var x = cljs.core.first(arglist__48540);
      var ys = cljs.core.rest(arglist__48540);
      return G__48537__delegate(x, ys)
    };
    G__48537.cljs$lang$arity$variadic = G__48537__delegate;
    return G__48537
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__48541__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__48542 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__48543 = cljs.core.next.call(null, more);
            sb = G__48542;
            more = G__48543;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__48541 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__48541__delegate.call(this, x, ys)
    };
    G__48541.cljs$lang$maxFixedArity = 1;
    G__48541.cljs$lang$applyTo = function(arglist__48544) {
      var x = cljs.core.first(arglist__48544);
      var ys = cljs.core.rest(arglist__48544);
      return G__48541__delegate(x, ys)
    };
    G__48541.cljs$lang$arity$variadic = G__48541__delegate;
    return G__48541
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__48545) {
    var fmt = cljs.core.first(arglist__48545);
    var args = cljs.core.rest(arglist__48545);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__48548 = cljs.core.seq.call(null, x);
    var ys__48549 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__48548 == null) {
        return ys__48549 == null
      }else {
        if(ys__48549 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__48548), cljs.core.first.call(null, ys__48549))) {
            var G__48550 = cljs.core.next.call(null, xs__48548);
            var G__48551 = cljs.core.next.call(null, ys__48549);
            xs__48548 = G__48550;
            ys__48549 = G__48551;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__48552_SHARP_, p2__48553_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__48552_SHARP_, cljs.core.hash.call(null, p2__48553_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__48557 = 0;
  var s__48558 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__48558) {
      var e__48559 = cljs.core.first.call(null, s__48558);
      var G__48560 = (h__48557 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__48559)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__48559)))) % 4503599627370496;
      var G__48561 = cljs.core.next.call(null, s__48558);
      h__48557 = G__48560;
      s__48558 = G__48561;
      continue
    }else {
      return h__48557
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__48565 = 0;
  var s__48566 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__48566) {
      var e__48567 = cljs.core.first.call(null, s__48566);
      var G__48568 = (h__48565 + cljs.core.hash.call(null, e__48567)) % 4503599627370496;
      var G__48569 = cljs.core.next.call(null, s__48566);
      h__48565 = G__48568;
      s__48566 = G__48569;
      continue
    }else {
      return h__48565
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__48590__48591 = cljs.core.seq.call(null, fn_map);
  if(G__48590__48591) {
    var G__48593__48595 = cljs.core.first.call(null, G__48590__48591);
    var vec__48594__48596 = G__48593__48595;
    var key_name__48597 = cljs.core.nth.call(null, vec__48594__48596, 0, null);
    var f__48598 = cljs.core.nth.call(null, vec__48594__48596, 1, null);
    var G__48590__48599 = G__48590__48591;
    var G__48593__48600 = G__48593__48595;
    var G__48590__48601 = G__48590__48599;
    while(true) {
      var vec__48602__48603 = G__48593__48600;
      var key_name__48604 = cljs.core.nth.call(null, vec__48602__48603, 0, null);
      var f__48605 = cljs.core.nth.call(null, vec__48602__48603, 1, null);
      var G__48590__48606 = G__48590__48601;
      var str_name__48607 = cljs.core.name.call(null, key_name__48604);
      obj[str_name__48607] = f__48605;
      var temp__3974__auto____48608 = cljs.core.next.call(null, G__48590__48606);
      if(temp__3974__auto____48608) {
        var G__48590__48609 = temp__3974__auto____48608;
        var G__48610 = cljs.core.first.call(null, G__48590__48609);
        var G__48611 = G__48590__48609;
        G__48593__48600 = G__48610;
        G__48590__48601 = G__48611;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__48612 = this;
  var h__2192__auto____48613 = this__48612.__hash;
  if(!(h__2192__auto____48613 == null)) {
    return h__2192__auto____48613
  }else {
    var h__2192__auto____48614 = cljs.core.hash_coll.call(null, coll);
    this__48612.__hash = h__2192__auto____48614;
    return h__2192__auto____48614
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__48615 = this;
  if(this__48615.count === 1) {
    return null
  }else {
    return this__48615.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__48616 = this;
  return new cljs.core.List(this__48616.meta, o, coll, this__48616.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__48617 = this;
  var this__48618 = this;
  return cljs.core.pr_str.call(null, this__48618)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__48619 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__48620 = this;
  return this__48620.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__48621 = this;
  return this__48621.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__48622 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__48623 = this;
  return this__48623.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__48624 = this;
  if(this__48624.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__48624.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__48625 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__48626 = this;
  return new cljs.core.List(meta, this__48626.first, this__48626.rest, this__48626.count, this__48626.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__48627 = this;
  return this__48627.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__48628 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__48629 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__48630 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__48631 = this;
  return new cljs.core.List(this__48631.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__48632 = this;
  var this__48633 = this;
  return cljs.core.pr_str.call(null, this__48633)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__48634 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__48635 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__48636 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__48637 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__48638 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__48639 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__48640 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__48641 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__48642 = this;
  return this__48642.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__48643 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__48647__48648 = coll;
  if(G__48647__48648) {
    if(function() {
      var or__3824__auto____48649 = G__48647__48648.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____48649) {
        return or__3824__auto____48649
      }else {
        return G__48647__48648.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__48647__48648.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__48647__48648)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__48647__48648)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__48650__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__48650 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__48650__delegate.call(this, x, y, z, items)
    };
    G__48650.cljs$lang$maxFixedArity = 3;
    G__48650.cljs$lang$applyTo = function(arglist__48651) {
      var x = cljs.core.first(arglist__48651);
      var y = cljs.core.first(cljs.core.next(arglist__48651));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__48651)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__48651)));
      return G__48650__delegate(x, y, z, items)
    };
    G__48650.cljs$lang$arity$variadic = G__48650__delegate;
    return G__48650
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__48652 = this;
  var h__2192__auto____48653 = this__48652.__hash;
  if(!(h__2192__auto____48653 == null)) {
    return h__2192__auto____48653
  }else {
    var h__2192__auto____48654 = cljs.core.hash_coll.call(null, coll);
    this__48652.__hash = h__2192__auto____48654;
    return h__2192__auto____48654
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__48655 = this;
  if(this__48655.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__48655.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__48656 = this;
  return new cljs.core.Cons(null, o, coll, this__48656.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__48657 = this;
  var this__48658 = this;
  return cljs.core.pr_str.call(null, this__48658)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__48659 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__48660 = this;
  return this__48660.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__48661 = this;
  if(this__48661.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__48661.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__48662 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__48663 = this;
  return new cljs.core.Cons(meta, this__48663.first, this__48663.rest, this__48663.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__48664 = this;
  return this__48664.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__48665 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__48665.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____48670 = coll == null;
    if(or__3824__auto____48670) {
      return or__3824__auto____48670
    }else {
      var G__48671__48672 = coll;
      if(G__48671__48672) {
        if(function() {
          var or__3824__auto____48673 = G__48671__48672.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____48673) {
            return or__3824__auto____48673
          }else {
            return G__48671__48672.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__48671__48672.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__48671__48672)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__48671__48672)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__48677__48678 = x;
  if(G__48677__48678) {
    if(function() {
      var or__3824__auto____48679 = G__48677__48678.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____48679) {
        return or__3824__auto____48679
      }else {
        return G__48677__48678.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__48677__48678.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__48677__48678)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__48677__48678)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__48680 = null;
  var G__48680__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__48680__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__48680 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__48680__2.call(this, string, f);
      case 3:
        return G__48680__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__48680
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__48681 = null;
  var G__48681__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__48681__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__48681 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__48681__2.call(this, string, k);
      case 3:
        return G__48681__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__48681
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__48682 = null;
  var G__48682__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__48682__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__48682 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__48682__2.call(this, string, n);
      case 3:
        return G__48682__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__48682
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__48694 = null;
  var G__48694__2 = function(this_sym48685, coll) {
    var this__48687 = this;
    var this_sym48685__48688 = this;
    var ___48689 = this_sym48685__48688;
    if(coll == null) {
      return null
    }else {
      var strobj__48690 = coll.strobj;
      if(strobj__48690 == null) {
        return cljs.core._lookup.call(null, coll, this__48687.k, null)
      }else {
        return strobj__48690[this__48687.k]
      }
    }
  };
  var G__48694__3 = function(this_sym48686, coll, not_found) {
    var this__48687 = this;
    var this_sym48686__48691 = this;
    var ___48692 = this_sym48686__48691;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__48687.k, not_found)
    }
  };
  G__48694 = function(this_sym48686, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__48694__2.call(this, this_sym48686, coll);
      case 3:
        return G__48694__3.call(this, this_sym48686, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__48694
}();
cljs.core.Keyword.prototype.apply = function(this_sym48683, args48684) {
  var this__48693 = this;
  return this_sym48683.call.apply(this_sym48683, [this_sym48683].concat(args48684.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__48703 = null;
  var G__48703__2 = function(this_sym48697, coll) {
    var this_sym48697__48699 = this;
    var this__48700 = this_sym48697__48699;
    return cljs.core._lookup.call(null, coll, this__48700.toString(), null)
  };
  var G__48703__3 = function(this_sym48698, coll, not_found) {
    var this_sym48698__48701 = this;
    var this__48702 = this_sym48698__48701;
    return cljs.core._lookup.call(null, coll, this__48702.toString(), not_found)
  };
  G__48703 = function(this_sym48698, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__48703__2.call(this, this_sym48698, coll);
      case 3:
        return G__48703__3.call(this, this_sym48698, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__48703
}();
String.prototype.apply = function(this_sym48695, args48696) {
  return this_sym48695.call.apply(this_sym48695, [this_sym48695].concat(args48696.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__48705 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__48705
  }else {
    lazy_seq.x = x__48705.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__48706 = this;
  var h__2192__auto____48707 = this__48706.__hash;
  if(!(h__2192__auto____48707 == null)) {
    return h__2192__auto____48707
  }else {
    var h__2192__auto____48708 = cljs.core.hash_coll.call(null, coll);
    this__48706.__hash = h__2192__auto____48708;
    return h__2192__auto____48708
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__48709 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__48710 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__48711 = this;
  var this__48712 = this;
  return cljs.core.pr_str.call(null, this__48712)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__48713 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__48714 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__48715 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__48716 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__48717 = this;
  return new cljs.core.LazySeq(meta, this__48717.realized, this__48717.x, this__48717.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__48718 = this;
  return this__48718.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__48719 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__48719.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__48720 = this;
  return this__48720.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__48721 = this;
  var ___48722 = this;
  this__48721.buf[this__48721.end] = o;
  return this__48721.end = this__48721.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__48723 = this;
  var ___48724 = this;
  var ret__48725 = new cljs.core.ArrayChunk(this__48723.buf, 0, this__48723.end);
  this__48723.buf = null;
  return ret__48725
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__48726 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__48726.arr[this__48726.off], this__48726.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__48727 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__48727.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__48728 = this;
  if(this__48728.off === this__48728.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__48728.arr, this__48728.off + 1, this__48728.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__48729 = this;
  return this__48729.arr[this__48729.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__48730 = this;
  if(function() {
    var and__3822__auto____48731 = i >= 0;
    if(and__3822__auto____48731) {
      return i < this__48730.end - this__48730.off
    }else {
      return and__3822__auto____48731
    }
  }()) {
    return this__48730.arr[this__48730.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__48732 = this;
  return this__48732.end - this__48732.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__48733 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__48734 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__48735 = this;
  return cljs.core._nth.call(null, this__48735.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__48736 = this;
  if(cljs.core._count.call(null, this__48736.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__48736.chunk), this__48736.more, this__48736.meta)
  }else {
    if(this__48736.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__48736.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__48737 = this;
  if(this__48737.more == null) {
    return null
  }else {
    return this__48737.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__48738 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__48739 = this;
  return new cljs.core.ChunkedCons(this__48739.chunk, this__48739.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__48740 = this;
  return this__48740.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__48741 = this;
  return this__48741.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__48742 = this;
  if(this__48742.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__48742.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__48746__48747 = s;
    if(G__48746__48747) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____48748 = null;
        if(cljs.core.truth_(or__3824__auto____48748)) {
          return or__3824__auto____48748
        }else {
          return G__48746__48747.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__48746__48747.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__48746__48747)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__48746__48747)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__48751 = [];
  var s__48752 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__48752)) {
      ary__48751.push(cljs.core.first.call(null, s__48752));
      var G__48753 = cljs.core.next.call(null, s__48752);
      s__48752 = G__48753;
      continue
    }else {
      return ary__48751
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__48757 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__48758 = 0;
  var xs__48759 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__48759) {
      ret__48757[i__48758] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__48759));
      var G__48760 = i__48758 + 1;
      var G__48761 = cljs.core.next.call(null, xs__48759);
      i__48758 = G__48760;
      xs__48759 = G__48761;
      continue
    }else {
    }
    break
  }
  return ret__48757
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__48769 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__48770 = cljs.core.seq.call(null, init_val_or_seq);
      var i__48771 = 0;
      var s__48772 = s__48770;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____48773 = s__48772;
          if(and__3822__auto____48773) {
            return i__48771 < size
          }else {
            return and__3822__auto____48773
          }
        }())) {
          a__48769[i__48771] = cljs.core.first.call(null, s__48772);
          var G__48776 = i__48771 + 1;
          var G__48777 = cljs.core.next.call(null, s__48772);
          i__48771 = G__48776;
          s__48772 = G__48777;
          continue
        }else {
          return a__48769
        }
        break
      }
    }else {
      var n__2527__auto____48774 = size;
      var i__48775 = 0;
      while(true) {
        if(i__48775 < n__2527__auto____48774) {
          a__48769[i__48775] = init_val_or_seq;
          var G__48778 = i__48775 + 1;
          i__48775 = G__48778;
          continue
        }else {
        }
        break
      }
      return a__48769
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__48786 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__48787 = cljs.core.seq.call(null, init_val_or_seq);
      var i__48788 = 0;
      var s__48789 = s__48787;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____48790 = s__48789;
          if(and__3822__auto____48790) {
            return i__48788 < size
          }else {
            return and__3822__auto____48790
          }
        }())) {
          a__48786[i__48788] = cljs.core.first.call(null, s__48789);
          var G__48793 = i__48788 + 1;
          var G__48794 = cljs.core.next.call(null, s__48789);
          i__48788 = G__48793;
          s__48789 = G__48794;
          continue
        }else {
          return a__48786
        }
        break
      }
    }else {
      var n__2527__auto____48791 = size;
      var i__48792 = 0;
      while(true) {
        if(i__48792 < n__2527__auto____48791) {
          a__48786[i__48792] = init_val_or_seq;
          var G__48795 = i__48792 + 1;
          i__48792 = G__48795;
          continue
        }else {
        }
        break
      }
      return a__48786
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__48803 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__48804 = cljs.core.seq.call(null, init_val_or_seq);
      var i__48805 = 0;
      var s__48806 = s__48804;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____48807 = s__48806;
          if(and__3822__auto____48807) {
            return i__48805 < size
          }else {
            return and__3822__auto____48807
          }
        }())) {
          a__48803[i__48805] = cljs.core.first.call(null, s__48806);
          var G__48810 = i__48805 + 1;
          var G__48811 = cljs.core.next.call(null, s__48806);
          i__48805 = G__48810;
          s__48806 = G__48811;
          continue
        }else {
          return a__48803
        }
        break
      }
    }else {
      var n__2527__auto____48808 = size;
      var i__48809 = 0;
      while(true) {
        if(i__48809 < n__2527__auto____48808) {
          a__48803[i__48809] = init_val_or_seq;
          var G__48812 = i__48809 + 1;
          i__48809 = G__48812;
          continue
        }else {
        }
        break
      }
      return a__48803
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__48817 = s;
    var i__48818 = n;
    var sum__48819 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____48820 = i__48818 > 0;
        if(and__3822__auto____48820) {
          return cljs.core.seq.call(null, s__48817)
        }else {
          return and__3822__auto____48820
        }
      }())) {
        var G__48821 = cljs.core.next.call(null, s__48817);
        var G__48822 = i__48818 - 1;
        var G__48823 = sum__48819 + 1;
        s__48817 = G__48821;
        i__48818 = G__48822;
        sum__48819 = G__48823;
        continue
      }else {
        return sum__48819
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__48828 = cljs.core.seq.call(null, x);
      if(s__48828) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__48828)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__48828), concat.call(null, cljs.core.chunk_rest.call(null, s__48828), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__48828), concat.call(null, cljs.core.rest.call(null, s__48828), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__48832__delegate = function(x, y, zs) {
      var cat__48831 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__48830 = cljs.core.seq.call(null, xys);
          if(xys__48830) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__48830)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__48830), cat.call(null, cljs.core.chunk_rest.call(null, xys__48830), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__48830), cat.call(null, cljs.core.rest.call(null, xys__48830), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__48831.call(null, concat.call(null, x, y), zs)
    };
    var G__48832 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48832__delegate.call(this, x, y, zs)
    };
    G__48832.cljs$lang$maxFixedArity = 2;
    G__48832.cljs$lang$applyTo = function(arglist__48833) {
      var x = cljs.core.first(arglist__48833);
      var y = cljs.core.first(cljs.core.next(arglist__48833));
      var zs = cljs.core.rest(cljs.core.next(arglist__48833));
      return G__48832__delegate(x, y, zs)
    };
    G__48832.cljs$lang$arity$variadic = G__48832__delegate;
    return G__48832
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__48834__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__48834 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__48834__delegate.call(this, a, b, c, d, more)
    };
    G__48834.cljs$lang$maxFixedArity = 4;
    G__48834.cljs$lang$applyTo = function(arglist__48835) {
      var a = cljs.core.first(arglist__48835);
      var b = cljs.core.first(cljs.core.next(arglist__48835));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__48835)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__48835))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__48835))));
      return G__48834__delegate(a, b, c, d, more)
    };
    G__48834.cljs$lang$arity$variadic = G__48834__delegate;
    return G__48834
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__48877 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__48878 = cljs.core._first.call(null, args__48877);
    var args__48879 = cljs.core._rest.call(null, args__48877);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__48878)
      }else {
        return f.call(null, a__48878)
      }
    }else {
      var b__48880 = cljs.core._first.call(null, args__48879);
      var args__48881 = cljs.core._rest.call(null, args__48879);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__48878, b__48880)
        }else {
          return f.call(null, a__48878, b__48880)
        }
      }else {
        var c__48882 = cljs.core._first.call(null, args__48881);
        var args__48883 = cljs.core._rest.call(null, args__48881);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__48878, b__48880, c__48882)
          }else {
            return f.call(null, a__48878, b__48880, c__48882)
          }
        }else {
          var d__48884 = cljs.core._first.call(null, args__48883);
          var args__48885 = cljs.core._rest.call(null, args__48883);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__48878, b__48880, c__48882, d__48884)
            }else {
              return f.call(null, a__48878, b__48880, c__48882, d__48884)
            }
          }else {
            var e__48886 = cljs.core._first.call(null, args__48885);
            var args__48887 = cljs.core._rest.call(null, args__48885);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__48878, b__48880, c__48882, d__48884, e__48886)
              }else {
                return f.call(null, a__48878, b__48880, c__48882, d__48884, e__48886)
              }
            }else {
              var f__48888 = cljs.core._first.call(null, args__48887);
              var args__48889 = cljs.core._rest.call(null, args__48887);
              if(argc === 6) {
                if(f__48888.cljs$lang$arity$6) {
                  return f__48888.cljs$lang$arity$6(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888)
                }else {
                  return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888)
                }
              }else {
                var g__48890 = cljs.core._first.call(null, args__48889);
                var args__48891 = cljs.core._rest.call(null, args__48889);
                if(argc === 7) {
                  if(f__48888.cljs$lang$arity$7) {
                    return f__48888.cljs$lang$arity$7(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890)
                  }else {
                    return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890)
                  }
                }else {
                  var h__48892 = cljs.core._first.call(null, args__48891);
                  var args__48893 = cljs.core._rest.call(null, args__48891);
                  if(argc === 8) {
                    if(f__48888.cljs$lang$arity$8) {
                      return f__48888.cljs$lang$arity$8(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892)
                    }else {
                      return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892)
                    }
                  }else {
                    var i__48894 = cljs.core._first.call(null, args__48893);
                    var args__48895 = cljs.core._rest.call(null, args__48893);
                    if(argc === 9) {
                      if(f__48888.cljs$lang$arity$9) {
                        return f__48888.cljs$lang$arity$9(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894)
                      }else {
                        return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894)
                      }
                    }else {
                      var j__48896 = cljs.core._first.call(null, args__48895);
                      var args__48897 = cljs.core._rest.call(null, args__48895);
                      if(argc === 10) {
                        if(f__48888.cljs$lang$arity$10) {
                          return f__48888.cljs$lang$arity$10(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896)
                        }else {
                          return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896)
                        }
                      }else {
                        var k__48898 = cljs.core._first.call(null, args__48897);
                        var args__48899 = cljs.core._rest.call(null, args__48897);
                        if(argc === 11) {
                          if(f__48888.cljs$lang$arity$11) {
                            return f__48888.cljs$lang$arity$11(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898)
                          }else {
                            return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898)
                          }
                        }else {
                          var l__48900 = cljs.core._first.call(null, args__48899);
                          var args__48901 = cljs.core._rest.call(null, args__48899);
                          if(argc === 12) {
                            if(f__48888.cljs$lang$arity$12) {
                              return f__48888.cljs$lang$arity$12(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900)
                            }else {
                              return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900)
                            }
                          }else {
                            var m__48902 = cljs.core._first.call(null, args__48901);
                            var args__48903 = cljs.core._rest.call(null, args__48901);
                            if(argc === 13) {
                              if(f__48888.cljs$lang$arity$13) {
                                return f__48888.cljs$lang$arity$13(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902)
                              }else {
                                return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902)
                              }
                            }else {
                              var n__48904 = cljs.core._first.call(null, args__48903);
                              var args__48905 = cljs.core._rest.call(null, args__48903);
                              if(argc === 14) {
                                if(f__48888.cljs$lang$arity$14) {
                                  return f__48888.cljs$lang$arity$14(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904)
                                }else {
                                  return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904)
                                }
                              }else {
                                var o__48906 = cljs.core._first.call(null, args__48905);
                                var args__48907 = cljs.core._rest.call(null, args__48905);
                                if(argc === 15) {
                                  if(f__48888.cljs$lang$arity$15) {
                                    return f__48888.cljs$lang$arity$15(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906)
                                  }else {
                                    return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906)
                                  }
                                }else {
                                  var p__48908 = cljs.core._first.call(null, args__48907);
                                  var args__48909 = cljs.core._rest.call(null, args__48907);
                                  if(argc === 16) {
                                    if(f__48888.cljs$lang$arity$16) {
                                      return f__48888.cljs$lang$arity$16(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906, p__48908)
                                    }else {
                                      return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906, p__48908)
                                    }
                                  }else {
                                    var q__48910 = cljs.core._first.call(null, args__48909);
                                    var args__48911 = cljs.core._rest.call(null, args__48909);
                                    if(argc === 17) {
                                      if(f__48888.cljs$lang$arity$17) {
                                        return f__48888.cljs$lang$arity$17(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906, p__48908, q__48910)
                                      }else {
                                        return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906, p__48908, q__48910)
                                      }
                                    }else {
                                      var r__48912 = cljs.core._first.call(null, args__48911);
                                      var args__48913 = cljs.core._rest.call(null, args__48911);
                                      if(argc === 18) {
                                        if(f__48888.cljs$lang$arity$18) {
                                          return f__48888.cljs$lang$arity$18(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906, p__48908, q__48910, r__48912)
                                        }else {
                                          return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906, p__48908, q__48910, r__48912)
                                        }
                                      }else {
                                        var s__48914 = cljs.core._first.call(null, args__48913);
                                        var args__48915 = cljs.core._rest.call(null, args__48913);
                                        if(argc === 19) {
                                          if(f__48888.cljs$lang$arity$19) {
                                            return f__48888.cljs$lang$arity$19(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906, p__48908, q__48910, r__48912, s__48914)
                                          }else {
                                            return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906, p__48908, q__48910, r__48912, s__48914)
                                          }
                                        }else {
                                          var t__48916 = cljs.core._first.call(null, args__48915);
                                          var args__48917 = cljs.core._rest.call(null, args__48915);
                                          if(argc === 20) {
                                            if(f__48888.cljs$lang$arity$20) {
                                              return f__48888.cljs$lang$arity$20(a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906, p__48908, q__48910, r__48912, s__48914, t__48916)
                                            }else {
                                              return f__48888.call(null, a__48878, b__48880, c__48882, d__48884, e__48886, f__48888, g__48890, h__48892, i__48894, j__48896, k__48898, l__48900, m__48902, n__48904, o__48906, p__48908, q__48910, r__48912, s__48914, t__48916)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__48932 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__48933 = cljs.core.bounded_count.call(null, args, fixed_arity__48932 + 1);
      if(bc__48933 <= fixed_arity__48932) {
        return cljs.core.apply_to.call(null, f, bc__48933, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__48934 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__48935 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__48936 = cljs.core.bounded_count.call(null, arglist__48934, fixed_arity__48935 + 1);
      if(bc__48936 <= fixed_arity__48935) {
        return cljs.core.apply_to.call(null, f, bc__48936, arglist__48934)
      }else {
        return f.cljs$lang$applyTo(arglist__48934)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__48934))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__48937 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__48938 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__48939 = cljs.core.bounded_count.call(null, arglist__48937, fixed_arity__48938 + 1);
      if(bc__48939 <= fixed_arity__48938) {
        return cljs.core.apply_to.call(null, f, bc__48939, arglist__48937)
      }else {
        return f.cljs$lang$applyTo(arglist__48937)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__48937))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__48940 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__48941 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__48942 = cljs.core.bounded_count.call(null, arglist__48940, fixed_arity__48941 + 1);
      if(bc__48942 <= fixed_arity__48941) {
        return cljs.core.apply_to.call(null, f, bc__48942, arglist__48940)
      }else {
        return f.cljs$lang$applyTo(arglist__48940)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__48940))
    }
  };
  var apply__6 = function() {
    var G__48946__delegate = function(f, a, b, c, d, args) {
      var arglist__48943 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__48944 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__48945 = cljs.core.bounded_count.call(null, arglist__48943, fixed_arity__48944 + 1);
        if(bc__48945 <= fixed_arity__48944) {
          return cljs.core.apply_to.call(null, f, bc__48945, arglist__48943)
        }else {
          return f.cljs$lang$applyTo(arglist__48943)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__48943))
      }
    };
    var G__48946 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__48946__delegate.call(this, f, a, b, c, d, args)
    };
    G__48946.cljs$lang$maxFixedArity = 5;
    G__48946.cljs$lang$applyTo = function(arglist__48947) {
      var f = cljs.core.first(arglist__48947);
      var a = cljs.core.first(cljs.core.next(arglist__48947));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__48947)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__48947))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__48947)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__48947)))));
      return G__48946__delegate(f, a, b, c, d, args)
    };
    G__48946.cljs$lang$arity$variadic = G__48946__delegate;
    return G__48946
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__48948) {
    var obj = cljs.core.first(arglist__48948);
    var f = cljs.core.first(cljs.core.next(arglist__48948));
    var args = cljs.core.rest(cljs.core.next(arglist__48948));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__48949__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__48949 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__48949__delegate.call(this, x, y, more)
    };
    G__48949.cljs$lang$maxFixedArity = 2;
    G__48949.cljs$lang$applyTo = function(arglist__48950) {
      var x = cljs.core.first(arglist__48950);
      var y = cljs.core.first(cljs.core.next(arglist__48950));
      var more = cljs.core.rest(cljs.core.next(arglist__48950));
      return G__48949__delegate(x, y, more)
    };
    G__48949.cljs$lang$arity$variadic = G__48949__delegate;
    return G__48949
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__48951 = pred;
        var G__48952 = cljs.core.next.call(null, coll);
        pred = G__48951;
        coll = G__48952;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____48954 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____48954)) {
        return or__3824__auto____48954
      }else {
        var G__48955 = pred;
        var G__48956 = cljs.core.next.call(null, coll);
        pred = G__48955;
        coll = G__48956;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__48957 = null;
    var G__48957__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__48957__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__48957__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__48957__3 = function() {
      var G__48958__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__48958 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__48958__delegate.call(this, x, y, zs)
      };
      G__48958.cljs$lang$maxFixedArity = 2;
      G__48958.cljs$lang$applyTo = function(arglist__48959) {
        var x = cljs.core.first(arglist__48959);
        var y = cljs.core.first(cljs.core.next(arglist__48959));
        var zs = cljs.core.rest(cljs.core.next(arglist__48959));
        return G__48958__delegate(x, y, zs)
      };
      G__48958.cljs$lang$arity$variadic = G__48958__delegate;
      return G__48958
    }();
    G__48957 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__48957__0.call(this);
        case 1:
          return G__48957__1.call(this, x);
        case 2:
          return G__48957__2.call(this, x, y);
        default:
          return G__48957__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__48957.cljs$lang$maxFixedArity = 2;
    G__48957.cljs$lang$applyTo = G__48957__3.cljs$lang$applyTo;
    return G__48957
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__48960__delegate = function(args) {
      return x
    };
    var G__48960 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__48960__delegate.call(this, args)
    };
    G__48960.cljs$lang$maxFixedArity = 0;
    G__48960.cljs$lang$applyTo = function(arglist__48961) {
      var args = cljs.core.seq(arglist__48961);
      return G__48960__delegate(args)
    };
    G__48960.cljs$lang$arity$variadic = G__48960__delegate;
    return G__48960
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__48968 = null;
      var G__48968__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__48968__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__48968__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__48968__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__48968__4 = function() {
        var G__48969__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__48969 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__48969__delegate.call(this, x, y, z, args)
        };
        G__48969.cljs$lang$maxFixedArity = 3;
        G__48969.cljs$lang$applyTo = function(arglist__48970) {
          var x = cljs.core.first(arglist__48970);
          var y = cljs.core.first(cljs.core.next(arglist__48970));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__48970)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__48970)));
          return G__48969__delegate(x, y, z, args)
        };
        G__48969.cljs$lang$arity$variadic = G__48969__delegate;
        return G__48969
      }();
      G__48968 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__48968__0.call(this);
          case 1:
            return G__48968__1.call(this, x);
          case 2:
            return G__48968__2.call(this, x, y);
          case 3:
            return G__48968__3.call(this, x, y, z);
          default:
            return G__48968__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__48968.cljs$lang$maxFixedArity = 3;
      G__48968.cljs$lang$applyTo = G__48968__4.cljs$lang$applyTo;
      return G__48968
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__48971 = null;
      var G__48971__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__48971__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__48971__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__48971__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__48971__4 = function() {
        var G__48972__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__48972 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__48972__delegate.call(this, x, y, z, args)
        };
        G__48972.cljs$lang$maxFixedArity = 3;
        G__48972.cljs$lang$applyTo = function(arglist__48973) {
          var x = cljs.core.first(arglist__48973);
          var y = cljs.core.first(cljs.core.next(arglist__48973));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__48973)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__48973)));
          return G__48972__delegate(x, y, z, args)
        };
        G__48972.cljs$lang$arity$variadic = G__48972__delegate;
        return G__48972
      }();
      G__48971 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__48971__0.call(this);
          case 1:
            return G__48971__1.call(this, x);
          case 2:
            return G__48971__2.call(this, x, y);
          case 3:
            return G__48971__3.call(this, x, y, z);
          default:
            return G__48971__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__48971.cljs$lang$maxFixedArity = 3;
      G__48971.cljs$lang$applyTo = G__48971__4.cljs$lang$applyTo;
      return G__48971
    }()
  };
  var comp__4 = function() {
    var G__48974__delegate = function(f1, f2, f3, fs) {
      var fs__48965 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__48975__delegate = function(args) {
          var ret__48966 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__48965), args);
          var fs__48967 = cljs.core.next.call(null, fs__48965);
          while(true) {
            if(fs__48967) {
              var G__48976 = cljs.core.first.call(null, fs__48967).call(null, ret__48966);
              var G__48977 = cljs.core.next.call(null, fs__48967);
              ret__48966 = G__48976;
              fs__48967 = G__48977;
              continue
            }else {
              return ret__48966
            }
            break
          }
        };
        var G__48975 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__48975__delegate.call(this, args)
        };
        G__48975.cljs$lang$maxFixedArity = 0;
        G__48975.cljs$lang$applyTo = function(arglist__48978) {
          var args = cljs.core.seq(arglist__48978);
          return G__48975__delegate(args)
        };
        G__48975.cljs$lang$arity$variadic = G__48975__delegate;
        return G__48975
      }()
    };
    var G__48974 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__48974__delegate.call(this, f1, f2, f3, fs)
    };
    G__48974.cljs$lang$maxFixedArity = 3;
    G__48974.cljs$lang$applyTo = function(arglist__48979) {
      var f1 = cljs.core.first(arglist__48979);
      var f2 = cljs.core.first(cljs.core.next(arglist__48979));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__48979)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__48979)));
      return G__48974__delegate(f1, f2, f3, fs)
    };
    G__48974.cljs$lang$arity$variadic = G__48974__delegate;
    return G__48974
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__48980__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__48980 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__48980__delegate.call(this, args)
      };
      G__48980.cljs$lang$maxFixedArity = 0;
      G__48980.cljs$lang$applyTo = function(arglist__48981) {
        var args = cljs.core.seq(arglist__48981);
        return G__48980__delegate(args)
      };
      G__48980.cljs$lang$arity$variadic = G__48980__delegate;
      return G__48980
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__48982__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__48982 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__48982__delegate.call(this, args)
      };
      G__48982.cljs$lang$maxFixedArity = 0;
      G__48982.cljs$lang$applyTo = function(arglist__48983) {
        var args = cljs.core.seq(arglist__48983);
        return G__48982__delegate(args)
      };
      G__48982.cljs$lang$arity$variadic = G__48982__delegate;
      return G__48982
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__48984__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__48984 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__48984__delegate.call(this, args)
      };
      G__48984.cljs$lang$maxFixedArity = 0;
      G__48984.cljs$lang$applyTo = function(arglist__48985) {
        var args = cljs.core.seq(arglist__48985);
        return G__48984__delegate(args)
      };
      G__48984.cljs$lang$arity$variadic = G__48984__delegate;
      return G__48984
    }()
  };
  var partial__5 = function() {
    var G__48986__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__48987__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__48987 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__48987__delegate.call(this, args)
        };
        G__48987.cljs$lang$maxFixedArity = 0;
        G__48987.cljs$lang$applyTo = function(arglist__48988) {
          var args = cljs.core.seq(arglist__48988);
          return G__48987__delegate(args)
        };
        G__48987.cljs$lang$arity$variadic = G__48987__delegate;
        return G__48987
      }()
    };
    var G__48986 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__48986__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__48986.cljs$lang$maxFixedArity = 4;
    G__48986.cljs$lang$applyTo = function(arglist__48989) {
      var f = cljs.core.first(arglist__48989);
      var arg1 = cljs.core.first(cljs.core.next(arglist__48989));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__48989)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__48989))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__48989))));
      return G__48986__delegate(f, arg1, arg2, arg3, more)
    };
    G__48986.cljs$lang$arity$variadic = G__48986__delegate;
    return G__48986
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__48990 = null;
      var G__48990__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__48990__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__48990__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__48990__4 = function() {
        var G__48991__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__48991 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__48991__delegate.call(this, a, b, c, ds)
        };
        G__48991.cljs$lang$maxFixedArity = 3;
        G__48991.cljs$lang$applyTo = function(arglist__48992) {
          var a = cljs.core.first(arglist__48992);
          var b = cljs.core.first(cljs.core.next(arglist__48992));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__48992)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__48992)));
          return G__48991__delegate(a, b, c, ds)
        };
        G__48991.cljs$lang$arity$variadic = G__48991__delegate;
        return G__48991
      }();
      G__48990 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__48990__1.call(this, a);
          case 2:
            return G__48990__2.call(this, a, b);
          case 3:
            return G__48990__3.call(this, a, b, c);
          default:
            return G__48990__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__48990.cljs$lang$maxFixedArity = 3;
      G__48990.cljs$lang$applyTo = G__48990__4.cljs$lang$applyTo;
      return G__48990
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__48993 = null;
      var G__48993__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__48993__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__48993__4 = function() {
        var G__48994__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__48994 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__48994__delegate.call(this, a, b, c, ds)
        };
        G__48994.cljs$lang$maxFixedArity = 3;
        G__48994.cljs$lang$applyTo = function(arglist__48995) {
          var a = cljs.core.first(arglist__48995);
          var b = cljs.core.first(cljs.core.next(arglist__48995));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__48995)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__48995)));
          return G__48994__delegate(a, b, c, ds)
        };
        G__48994.cljs$lang$arity$variadic = G__48994__delegate;
        return G__48994
      }();
      G__48993 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__48993__2.call(this, a, b);
          case 3:
            return G__48993__3.call(this, a, b, c);
          default:
            return G__48993__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__48993.cljs$lang$maxFixedArity = 3;
      G__48993.cljs$lang$applyTo = G__48993__4.cljs$lang$applyTo;
      return G__48993
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__48996 = null;
      var G__48996__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__48996__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__48996__4 = function() {
        var G__48997__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__48997 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__48997__delegate.call(this, a, b, c, ds)
        };
        G__48997.cljs$lang$maxFixedArity = 3;
        G__48997.cljs$lang$applyTo = function(arglist__48998) {
          var a = cljs.core.first(arglist__48998);
          var b = cljs.core.first(cljs.core.next(arglist__48998));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__48998)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__48998)));
          return G__48997__delegate(a, b, c, ds)
        };
        G__48997.cljs$lang$arity$variadic = G__48997__delegate;
        return G__48997
      }();
      G__48996 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__48996__2.call(this, a, b);
          case 3:
            return G__48996__3.call(this, a, b, c);
          default:
            return G__48996__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__48996.cljs$lang$maxFixedArity = 3;
      G__48996.cljs$lang$applyTo = G__48996__4.cljs$lang$applyTo;
      return G__48996
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__49014 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____49022 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____49022) {
        var s__49023 = temp__3974__auto____49022;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__49023)) {
          var c__49024 = cljs.core.chunk_first.call(null, s__49023);
          var size__49025 = cljs.core.count.call(null, c__49024);
          var b__49026 = cljs.core.chunk_buffer.call(null, size__49025);
          var n__2527__auto____49027 = size__49025;
          var i__49028 = 0;
          while(true) {
            if(i__49028 < n__2527__auto____49027) {
              cljs.core.chunk_append.call(null, b__49026, f.call(null, idx + i__49028, cljs.core._nth.call(null, c__49024, i__49028)));
              var G__49029 = i__49028 + 1;
              i__49028 = G__49029;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__49026), mapi.call(null, idx + size__49025, cljs.core.chunk_rest.call(null, s__49023)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__49023)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__49023)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__49014.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____49039 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____49039) {
      var s__49040 = temp__3974__auto____49039;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__49040)) {
        var c__49041 = cljs.core.chunk_first.call(null, s__49040);
        var size__49042 = cljs.core.count.call(null, c__49041);
        var b__49043 = cljs.core.chunk_buffer.call(null, size__49042);
        var n__2527__auto____49044 = size__49042;
        var i__49045 = 0;
        while(true) {
          if(i__49045 < n__2527__auto____49044) {
            var x__49046 = f.call(null, cljs.core._nth.call(null, c__49041, i__49045));
            if(x__49046 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__49043, x__49046)
            }
            var G__49048 = i__49045 + 1;
            i__49045 = G__49048;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__49043), keep.call(null, f, cljs.core.chunk_rest.call(null, s__49040)))
      }else {
        var x__49047 = f.call(null, cljs.core.first.call(null, s__49040));
        if(x__49047 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__49040))
        }else {
          return cljs.core.cons.call(null, x__49047, keep.call(null, f, cljs.core.rest.call(null, s__49040)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__49074 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____49084 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____49084) {
        var s__49085 = temp__3974__auto____49084;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__49085)) {
          var c__49086 = cljs.core.chunk_first.call(null, s__49085);
          var size__49087 = cljs.core.count.call(null, c__49086);
          var b__49088 = cljs.core.chunk_buffer.call(null, size__49087);
          var n__2527__auto____49089 = size__49087;
          var i__49090 = 0;
          while(true) {
            if(i__49090 < n__2527__auto____49089) {
              var x__49091 = f.call(null, idx + i__49090, cljs.core._nth.call(null, c__49086, i__49090));
              if(x__49091 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__49088, x__49091)
              }
              var G__49093 = i__49090 + 1;
              i__49090 = G__49093;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__49088), keepi.call(null, idx + size__49087, cljs.core.chunk_rest.call(null, s__49085)))
        }else {
          var x__49092 = f.call(null, idx, cljs.core.first.call(null, s__49085));
          if(x__49092 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__49085))
          }else {
            return cljs.core.cons.call(null, x__49092, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__49085)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__49074.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____49179 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____49179)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____49179
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____49180 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____49180)) {
            var and__3822__auto____49181 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____49181)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____49181
            }
          }else {
            return and__3822__auto____49180
          }
        }())
      };
      var ep1__4 = function() {
        var G__49250__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____49182 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____49182)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____49182
            }
          }())
        };
        var G__49250 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__49250__delegate.call(this, x, y, z, args)
        };
        G__49250.cljs$lang$maxFixedArity = 3;
        G__49250.cljs$lang$applyTo = function(arglist__49251) {
          var x = cljs.core.first(arglist__49251);
          var y = cljs.core.first(cljs.core.next(arglist__49251));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49251)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__49251)));
          return G__49250__delegate(x, y, z, args)
        };
        G__49250.cljs$lang$arity$variadic = G__49250__delegate;
        return G__49250
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____49194 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____49194)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____49194
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____49195 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____49195)) {
            var and__3822__auto____49196 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____49196)) {
              var and__3822__auto____49197 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____49197)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____49197
              }
            }else {
              return and__3822__auto____49196
            }
          }else {
            return and__3822__auto____49195
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____49198 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____49198)) {
            var and__3822__auto____49199 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____49199)) {
              var and__3822__auto____49200 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____49200)) {
                var and__3822__auto____49201 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____49201)) {
                  var and__3822__auto____49202 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____49202)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____49202
                  }
                }else {
                  return and__3822__auto____49201
                }
              }else {
                return and__3822__auto____49200
              }
            }else {
              return and__3822__auto____49199
            }
          }else {
            return and__3822__auto____49198
          }
        }())
      };
      var ep2__4 = function() {
        var G__49252__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____49203 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____49203)) {
              return cljs.core.every_QMARK_.call(null, function(p1__49049_SHARP_) {
                var and__3822__auto____49204 = p1.call(null, p1__49049_SHARP_);
                if(cljs.core.truth_(and__3822__auto____49204)) {
                  return p2.call(null, p1__49049_SHARP_)
                }else {
                  return and__3822__auto____49204
                }
              }, args)
            }else {
              return and__3822__auto____49203
            }
          }())
        };
        var G__49252 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__49252__delegate.call(this, x, y, z, args)
        };
        G__49252.cljs$lang$maxFixedArity = 3;
        G__49252.cljs$lang$applyTo = function(arglist__49253) {
          var x = cljs.core.first(arglist__49253);
          var y = cljs.core.first(cljs.core.next(arglist__49253));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49253)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__49253)));
          return G__49252__delegate(x, y, z, args)
        };
        G__49252.cljs$lang$arity$variadic = G__49252__delegate;
        return G__49252
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____49223 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____49223)) {
            var and__3822__auto____49224 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____49224)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____49224
            }
          }else {
            return and__3822__auto____49223
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____49225 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____49225)) {
            var and__3822__auto____49226 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____49226)) {
              var and__3822__auto____49227 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____49227)) {
                var and__3822__auto____49228 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____49228)) {
                  var and__3822__auto____49229 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____49229)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____49229
                  }
                }else {
                  return and__3822__auto____49228
                }
              }else {
                return and__3822__auto____49227
              }
            }else {
              return and__3822__auto____49226
            }
          }else {
            return and__3822__auto____49225
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____49230 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____49230)) {
            var and__3822__auto____49231 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____49231)) {
              var and__3822__auto____49232 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____49232)) {
                var and__3822__auto____49233 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____49233)) {
                  var and__3822__auto____49234 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____49234)) {
                    var and__3822__auto____49235 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____49235)) {
                      var and__3822__auto____49236 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____49236)) {
                        var and__3822__auto____49237 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____49237)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____49237
                        }
                      }else {
                        return and__3822__auto____49236
                      }
                    }else {
                      return and__3822__auto____49235
                    }
                  }else {
                    return and__3822__auto____49234
                  }
                }else {
                  return and__3822__auto____49233
                }
              }else {
                return and__3822__auto____49232
              }
            }else {
              return and__3822__auto____49231
            }
          }else {
            return and__3822__auto____49230
          }
        }())
      };
      var ep3__4 = function() {
        var G__49254__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____49238 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____49238)) {
              return cljs.core.every_QMARK_.call(null, function(p1__49050_SHARP_) {
                var and__3822__auto____49239 = p1.call(null, p1__49050_SHARP_);
                if(cljs.core.truth_(and__3822__auto____49239)) {
                  var and__3822__auto____49240 = p2.call(null, p1__49050_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____49240)) {
                    return p3.call(null, p1__49050_SHARP_)
                  }else {
                    return and__3822__auto____49240
                  }
                }else {
                  return and__3822__auto____49239
                }
              }, args)
            }else {
              return and__3822__auto____49238
            }
          }())
        };
        var G__49254 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__49254__delegate.call(this, x, y, z, args)
        };
        G__49254.cljs$lang$maxFixedArity = 3;
        G__49254.cljs$lang$applyTo = function(arglist__49255) {
          var x = cljs.core.first(arglist__49255);
          var y = cljs.core.first(cljs.core.next(arglist__49255));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49255)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__49255)));
          return G__49254__delegate(x, y, z, args)
        };
        G__49254.cljs$lang$arity$variadic = G__49254__delegate;
        return G__49254
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__49256__delegate = function(p1, p2, p3, ps) {
      var ps__49241 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__49051_SHARP_) {
            return p1__49051_SHARP_.call(null, x)
          }, ps__49241)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__49052_SHARP_) {
            var and__3822__auto____49246 = p1__49052_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____49246)) {
              return p1__49052_SHARP_.call(null, y)
            }else {
              return and__3822__auto____49246
            }
          }, ps__49241)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__49053_SHARP_) {
            var and__3822__auto____49247 = p1__49053_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____49247)) {
              var and__3822__auto____49248 = p1__49053_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____49248)) {
                return p1__49053_SHARP_.call(null, z)
              }else {
                return and__3822__auto____49248
              }
            }else {
              return and__3822__auto____49247
            }
          }, ps__49241)
        };
        var epn__4 = function() {
          var G__49257__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____49249 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____49249)) {
                return cljs.core.every_QMARK_.call(null, function(p1__49054_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__49054_SHARP_, args)
                }, ps__49241)
              }else {
                return and__3822__auto____49249
              }
            }())
          };
          var G__49257 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__49257__delegate.call(this, x, y, z, args)
          };
          G__49257.cljs$lang$maxFixedArity = 3;
          G__49257.cljs$lang$applyTo = function(arglist__49258) {
            var x = cljs.core.first(arglist__49258);
            var y = cljs.core.first(cljs.core.next(arglist__49258));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49258)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__49258)));
            return G__49257__delegate(x, y, z, args)
          };
          G__49257.cljs$lang$arity$variadic = G__49257__delegate;
          return G__49257
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__49256 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__49256__delegate.call(this, p1, p2, p3, ps)
    };
    G__49256.cljs$lang$maxFixedArity = 3;
    G__49256.cljs$lang$applyTo = function(arglist__49259) {
      var p1 = cljs.core.first(arglist__49259);
      var p2 = cljs.core.first(cljs.core.next(arglist__49259));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49259)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__49259)));
      return G__49256__delegate(p1, p2, p3, ps)
    };
    G__49256.cljs$lang$arity$variadic = G__49256__delegate;
    return G__49256
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____49340 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____49340)) {
          return or__3824__auto____49340
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____49341 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____49341)) {
          return or__3824__auto____49341
        }else {
          var or__3824__auto____49342 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____49342)) {
            return or__3824__auto____49342
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__49411__delegate = function(x, y, z, args) {
          var or__3824__auto____49343 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____49343)) {
            return or__3824__auto____49343
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__49411 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__49411__delegate.call(this, x, y, z, args)
        };
        G__49411.cljs$lang$maxFixedArity = 3;
        G__49411.cljs$lang$applyTo = function(arglist__49412) {
          var x = cljs.core.first(arglist__49412);
          var y = cljs.core.first(cljs.core.next(arglist__49412));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49412)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__49412)));
          return G__49411__delegate(x, y, z, args)
        };
        G__49411.cljs$lang$arity$variadic = G__49411__delegate;
        return G__49411
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____49355 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____49355)) {
          return or__3824__auto____49355
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____49356 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____49356)) {
          return or__3824__auto____49356
        }else {
          var or__3824__auto____49357 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____49357)) {
            return or__3824__auto____49357
          }else {
            var or__3824__auto____49358 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____49358)) {
              return or__3824__auto____49358
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____49359 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____49359)) {
          return or__3824__auto____49359
        }else {
          var or__3824__auto____49360 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____49360)) {
            return or__3824__auto____49360
          }else {
            var or__3824__auto____49361 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____49361)) {
              return or__3824__auto____49361
            }else {
              var or__3824__auto____49362 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____49362)) {
                return or__3824__auto____49362
              }else {
                var or__3824__auto____49363 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____49363)) {
                  return or__3824__auto____49363
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__49413__delegate = function(x, y, z, args) {
          var or__3824__auto____49364 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____49364)) {
            return or__3824__auto____49364
          }else {
            return cljs.core.some.call(null, function(p1__49094_SHARP_) {
              var or__3824__auto____49365 = p1.call(null, p1__49094_SHARP_);
              if(cljs.core.truth_(or__3824__auto____49365)) {
                return or__3824__auto____49365
              }else {
                return p2.call(null, p1__49094_SHARP_)
              }
            }, args)
          }
        };
        var G__49413 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__49413__delegate.call(this, x, y, z, args)
        };
        G__49413.cljs$lang$maxFixedArity = 3;
        G__49413.cljs$lang$applyTo = function(arglist__49414) {
          var x = cljs.core.first(arglist__49414);
          var y = cljs.core.first(cljs.core.next(arglist__49414));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49414)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__49414)));
          return G__49413__delegate(x, y, z, args)
        };
        G__49413.cljs$lang$arity$variadic = G__49413__delegate;
        return G__49413
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____49384 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____49384)) {
          return or__3824__auto____49384
        }else {
          var or__3824__auto____49385 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____49385)) {
            return or__3824__auto____49385
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____49386 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____49386)) {
          return or__3824__auto____49386
        }else {
          var or__3824__auto____49387 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____49387)) {
            return or__3824__auto____49387
          }else {
            var or__3824__auto____49388 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____49388)) {
              return or__3824__auto____49388
            }else {
              var or__3824__auto____49389 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____49389)) {
                return or__3824__auto____49389
              }else {
                var or__3824__auto____49390 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____49390)) {
                  return or__3824__auto____49390
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____49391 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____49391)) {
          return or__3824__auto____49391
        }else {
          var or__3824__auto____49392 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____49392)) {
            return or__3824__auto____49392
          }else {
            var or__3824__auto____49393 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____49393)) {
              return or__3824__auto____49393
            }else {
              var or__3824__auto____49394 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____49394)) {
                return or__3824__auto____49394
              }else {
                var or__3824__auto____49395 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____49395)) {
                  return or__3824__auto____49395
                }else {
                  var or__3824__auto____49396 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____49396)) {
                    return or__3824__auto____49396
                  }else {
                    var or__3824__auto____49397 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____49397)) {
                      return or__3824__auto____49397
                    }else {
                      var or__3824__auto____49398 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____49398)) {
                        return or__3824__auto____49398
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__49415__delegate = function(x, y, z, args) {
          var or__3824__auto____49399 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____49399)) {
            return or__3824__auto____49399
          }else {
            return cljs.core.some.call(null, function(p1__49095_SHARP_) {
              var or__3824__auto____49400 = p1.call(null, p1__49095_SHARP_);
              if(cljs.core.truth_(or__3824__auto____49400)) {
                return or__3824__auto____49400
              }else {
                var or__3824__auto____49401 = p2.call(null, p1__49095_SHARP_);
                if(cljs.core.truth_(or__3824__auto____49401)) {
                  return or__3824__auto____49401
                }else {
                  return p3.call(null, p1__49095_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__49415 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__49415__delegate.call(this, x, y, z, args)
        };
        G__49415.cljs$lang$maxFixedArity = 3;
        G__49415.cljs$lang$applyTo = function(arglist__49416) {
          var x = cljs.core.first(arglist__49416);
          var y = cljs.core.first(cljs.core.next(arglist__49416));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49416)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__49416)));
          return G__49415__delegate(x, y, z, args)
        };
        G__49415.cljs$lang$arity$variadic = G__49415__delegate;
        return G__49415
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__49417__delegate = function(p1, p2, p3, ps) {
      var ps__49402 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__49096_SHARP_) {
            return p1__49096_SHARP_.call(null, x)
          }, ps__49402)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__49097_SHARP_) {
            var or__3824__auto____49407 = p1__49097_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____49407)) {
              return or__3824__auto____49407
            }else {
              return p1__49097_SHARP_.call(null, y)
            }
          }, ps__49402)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__49098_SHARP_) {
            var or__3824__auto____49408 = p1__49098_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____49408)) {
              return or__3824__auto____49408
            }else {
              var or__3824__auto____49409 = p1__49098_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____49409)) {
                return or__3824__auto____49409
              }else {
                return p1__49098_SHARP_.call(null, z)
              }
            }
          }, ps__49402)
        };
        var spn__4 = function() {
          var G__49418__delegate = function(x, y, z, args) {
            var or__3824__auto____49410 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____49410)) {
              return or__3824__auto____49410
            }else {
              return cljs.core.some.call(null, function(p1__49099_SHARP_) {
                return cljs.core.some.call(null, p1__49099_SHARP_, args)
              }, ps__49402)
            }
          };
          var G__49418 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__49418__delegate.call(this, x, y, z, args)
          };
          G__49418.cljs$lang$maxFixedArity = 3;
          G__49418.cljs$lang$applyTo = function(arglist__49419) {
            var x = cljs.core.first(arglist__49419);
            var y = cljs.core.first(cljs.core.next(arglist__49419));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49419)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__49419)));
            return G__49418__delegate(x, y, z, args)
          };
          G__49418.cljs$lang$arity$variadic = G__49418__delegate;
          return G__49418
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__49417 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__49417__delegate.call(this, p1, p2, p3, ps)
    };
    G__49417.cljs$lang$maxFixedArity = 3;
    G__49417.cljs$lang$applyTo = function(arglist__49420) {
      var p1 = cljs.core.first(arglist__49420);
      var p2 = cljs.core.first(cljs.core.next(arglist__49420));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49420)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__49420)));
      return G__49417__delegate(p1, p2, p3, ps)
    };
    G__49417.cljs$lang$arity$variadic = G__49417__delegate;
    return G__49417
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____49439 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____49439) {
        var s__49440 = temp__3974__auto____49439;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__49440)) {
          var c__49441 = cljs.core.chunk_first.call(null, s__49440);
          var size__49442 = cljs.core.count.call(null, c__49441);
          var b__49443 = cljs.core.chunk_buffer.call(null, size__49442);
          var n__2527__auto____49444 = size__49442;
          var i__49445 = 0;
          while(true) {
            if(i__49445 < n__2527__auto____49444) {
              cljs.core.chunk_append.call(null, b__49443, f.call(null, cljs.core._nth.call(null, c__49441, i__49445)));
              var G__49457 = i__49445 + 1;
              i__49445 = G__49457;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__49443), map.call(null, f, cljs.core.chunk_rest.call(null, s__49440)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__49440)), map.call(null, f, cljs.core.rest.call(null, s__49440)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__49446 = cljs.core.seq.call(null, c1);
      var s2__49447 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____49448 = s1__49446;
        if(and__3822__auto____49448) {
          return s2__49447
        }else {
          return and__3822__auto____49448
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__49446), cljs.core.first.call(null, s2__49447)), map.call(null, f, cljs.core.rest.call(null, s1__49446), cljs.core.rest.call(null, s2__49447)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__49449 = cljs.core.seq.call(null, c1);
      var s2__49450 = cljs.core.seq.call(null, c2);
      var s3__49451 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____49452 = s1__49449;
        if(and__3822__auto____49452) {
          var and__3822__auto____49453 = s2__49450;
          if(and__3822__auto____49453) {
            return s3__49451
          }else {
            return and__3822__auto____49453
          }
        }else {
          return and__3822__auto____49452
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__49449), cljs.core.first.call(null, s2__49450), cljs.core.first.call(null, s3__49451)), map.call(null, f, cljs.core.rest.call(null, s1__49449), cljs.core.rest.call(null, s2__49450), cljs.core.rest.call(null, s3__49451)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__49458__delegate = function(f, c1, c2, c3, colls) {
      var step__49456 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__49455 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__49455)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__49455), step.call(null, map.call(null, cljs.core.rest, ss__49455)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__49260_SHARP_) {
        return cljs.core.apply.call(null, f, p1__49260_SHARP_)
      }, step__49456.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__49458 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__49458__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__49458.cljs$lang$maxFixedArity = 4;
    G__49458.cljs$lang$applyTo = function(arglist__49459) {
      var f = cljs.core.first(arglist__49459);
      var c1 = cljs.core.first(cljs.core.next(arglist__49459));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49459)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__49459))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__49459))));
      return G__49458__delegate(f, c1, c2, c3, colls)
    };
    G__49458.cljs$lang$arity$variadic = G__49458__delegate;
    return G__49458
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____49462 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____49462) {
        var s__49463 = temp__3974__auto____49462;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__49463), take.call(null, n - 1, cljs.core.rest.call(null, s__49463)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__49469 = function(n, coll) {
    while(true) {
      var s__49467 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____49468 = n > 0;
        if(and__3822__auto____49468) {
          return s__49467
        }else {
          return and__3822__auto____49468
        }
      }())) {
        var G__49470 = n - 1;
        var G__49471 = cljs.core.rest.call(null, s__49467);
        n = G__49470;
        coll = G__49471;
        continue
      }else {
        return s__49467
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__49469.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__49474 = cljs.core.seq.call(null, coll);
  var lead__49475 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__49475) {
      var G__49476 = cljs.core.next.call(null, s__49474);
      var G__49477 = cljs.core.next.call(null, lead__49475);
      s__49474 = G__49476;
      lead__49475 = G__49477;
      continue
    }else {
      return s__49474
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__49483 = function(pred, coll) {
    while(true) {
      var s__49481 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____49482 = s__49481;
        if(and__3822__auto____49482) {
          return pred.call(null, cljs.core.first.call(null, s__49481))
        }else {
          return and__3822__auto____49482
        }
      }())) {
        var G__49484 = pred;
        var G__49485 = cljs.core.rest.call(null, s__49481);
        pred = G__49484;
        coll = G__49485;
        continue
      }else {
        return s__49481
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__49483.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____49488 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____49488) {
      var s__49489 = temp__3974__auto____49488;
      return cljs.core.concat.call(null, s__49489, cycle.call(null, s__49489))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__49494 = cljs.core.seq.call(null, c1);
      var s2__49495 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____49496 = s1__49494;
        if(and__3822__auto____49496) {
          return s2__49495
        }else {
          return and__3822__auto____49496
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__49494), cljs.core.cons.call(null, cljs.core.first.call(null, s2__49495), interleave.call(null, cljs.core.rest.call(null, s1__49494), cljs.core.rest.call(null, s2__49495))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__49498__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__49497 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__49497)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__49497), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__49497)))
        }else {
          return null
        }
      }, null)
    };
    var G__49498 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__49498__delegate.call(this, c1, c2, colls)
    };
    G__49498.cljs$lang$maxFixedArity = 2;
    G__49498.cljs$lang$applyTo = function(arglist__49499) {
      var c1 = cljs.core.first(arglist__49499);
      var c2 = cljs.core.first(cljs.core.next(arglist__49499));
      var colls = cljs.core.rest(cljs.core.next(arglist__49499));
      return G__49498__delegate(c1, c2, colls)
    };
    G__49498.cljs$lang$arity$variadic = G__49498__delegate;
    return G__49498
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__49509 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____49507 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____49507) {
        var coll__49508 = temp__3971__auto____49507;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__49508), cat.call(null, cljs.core.rest.call(null, coll__49508), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__49509.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__49510__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__49510 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__49510__delegate.call(this, f, coll, colls)
    };
    G__49510.cljs$lang$maxFixedArity = 2;
    G__49510.cljs$lang$applyTo = function(arglist__49511) {
      var f = cljs.core.first(arglist__49511);
      var coll = cljs.core.first(cljs.core.next(arglist__49511));
      var colls = cljs.core.rest(cljs.core.next(arglist__49511));
      return G__49510__delegate(f, coll, colls)
    };
    G__49510.cljs$lang$arity$variadic = G__49510__delegate;
    return G__49510
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____49521 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____49521) {
      var s__49522 = temp__3974__auto____49521;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__49522)) {
        var c__49523 = cljs.core.chunk_first.call(null, s__49522);
        var size__49524 = cljs.core.count.call(null, c__49523);
        var b__49525 = cljs.core.chunk_buffer.call(null, size__49524);
        var n__2527__auto____49526 = size__49524;
        var i__49527 = 0;
        while(true) {
          if(i__49527 < n__2527__auto____49526) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__49523, i__49527)))) {
              cljs.core.chunk_append.call(null, b__49525, cljs.core._nth.call(null, c__49523, i__49527))
            }else {
            }
            var G__49530 = i__49527 + 1;
            i__49527 = G__49530;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__49525), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__49522)))
      }else {
        var f__49528 = cljs.core.first.call(null, s__49522);
        var r__49529 = cljs.core.rest.call(null, s__49522);
        if(cljs.core.truth_(pred.call(null, f__49528))) {
          return cljs.core.cons.call(null, f__49528, filter.call(null, pred, r__49529))
        }else {
          return filter.call(null, pred, r__49529)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__49533 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__49533.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__49531_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__49531_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__49537__49538 = to;
    if(G__49537__49538) {
      if(function() {
        var or__3824__auto____49539 = G__49537__49538.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____49539) {
          return or__3824__auto____49539
        }else {
          return G__49537__49538.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__49537__49538.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__49537__49538)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__49537__49538)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__49540__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__49540 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__49540__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__49540.cljs$lang$maxFixedArity = 4;
    G__49540.cljs$lang$applyTo = function(arglist__49541) {
      var f = cljs.core.first(arglist__49541);
      var c1 = cljs.core.first(cljs.core.next(arglist__49541));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49541)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__49541))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__49541))));
      return G__49540__delegate(f, c1, c2, c3, colls)
    };
    G__49540.cljs$lang$arity$variadic = G__49540__delegate;
    return G__49540
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____49548 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____49548) {
        var s__49549 = temp__3974__auto____49548;
        var p__49550 = cljs.core.take.call(null, n, s__49549);
        if(n === cljs.core.count.call(null, p__49550)) {
          return cljs.core.cons.call(null, p__49550, partition.call(null, n, step, cljs.core.drop.call(null, step, s__49549)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____49551 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____49551) {
        var s__49552 = temp__3974__auto____49551;
        var p__49553 = cljs.core.take.call(null, n, s__49552);
        if(n === cljs.core.count.call(null, p__49553)) {
          return cljs.core.cons.call(null, p__49553, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__49552)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__49553, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__49558 = cljs.core.lookup_sentinel;
    var m__49559 = m;
    var ks__49560 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__49560) {
        var m__49561 = cljs.core._lookup.call(null, m__49559, cljs.core.first.call(null, ks__49560), sentinel__49558);
        if(sentinel__49558 === m__49561) {
          return not_found
        }else {
          var G__49562 = sentinel__49558;
          var G__49563 = m__49561;
          var G__49564 = cljs.core.next.call(null, ks__49560);
          sentinel__49558 = G__49562;
          m__49559 = G__49563;
          ks__49560 = G__49564;
          continue
        }
      }else {
        return m__49559
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__49565, v) {
  var vec__49570__49571 = p__49565;
  var k__49572 = cljs.core.nth.call(null, vec__49570__49571, 0, null);
  var ks__49573 = cljs.core.nthnext.call(null, vec__49570__49571, 1);
  if(cljs.core.truth_(ks__49573)) {
    return cljs.core.assoc.call(null, m, k__49572, assoc_in.call(null, cljs.core._lookup.call(null, m, k__49572, null), ks__49573, v))
  }else {
    return cljs.core.assoc.call(null, m, k__49572, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__49574, f, args) {
    var vec__49579__49580 = p__49574;
    var k__49581 = cljs.core.nth.call(null, vec__49579__49580, 0, null);
    var ks__49582 = cljs.core.nthnext.call(null, vec__49579__49580, 1);
    if(cljs.core.truth_(ks__49582)) {
      return cljs.core.assoc.call(null, m, k__49581, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__49581, null), ks__49582, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__49581, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__49581, null), args))
    }
  };
  var update_in = function(m, p__49574, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__49574, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__49583) {
    var m = cljs.core.first(arglist__49583);
    var p__49574 = cljs.core.first(cljs.core.next(arglist__49583));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__49583)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__49583)));
    return update_in__delegate(m, p__49574, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__49586 = this;
  var h__2192__auto____49587 = this__49586.__hash;
  if(!(h__2192__auto____49587 == null)) {
    return h__2192__auto____49587
  }else {
    var h__2192__auto____49588 = cljs.core.hash_coll.call(null, coll);
    this__49586.__hash = h__2192__auto____49588;
    return h__2192__auto____49588
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__49589 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__49590 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__49591 = this;
  var new_array__49592 = this__49591.array.slice();
  new_array__49592[k] = v;
  return new cljs.core.Vector(this__49591.meta, new_array__49592, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__49623 = null;
  var G__49623__2 = function(this_sym49593, k) {
    var this__49595 = this;
    var this_sym49593__49596 = this;
    var coll__49597 = this_sym49593__49596;
    return coll__49597.cljs$core$ILookup$_lookup$arity$2(coll__49597, k)
  };
  var G__49623__3 = function(this_sym49594, k, not_found) {
    var this__49595 = this;
    var this_sym49594__49598 = this;
    var coll__49599 = this_sym49594__49598;
    return coll__49599.cljs$core$ILookup$_lookup$arity$3(coll__49599, k, not_found)
  };
  G__49623 = function(this_sym49594, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__49623__2.call(this, this_sym49594, k);
      case 3:
        return G__49623__3.call(this, this_sym49594, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__49623
}();
cljs.core.Vector.prototype.apply = function(this_sym49584, args49585) {
  var this__49600 = this;
  return this_sym49584.call.apply(this_sym49584, [this_sym49584].concat(args49585.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__49601 = this;
  var new_array__49602 = this__49601.array.slice();
  new_array__49602.push(o);
  return new cljs.core.Vector(this__49601.meta, new_array__49602, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__49603 = this;
  var this__49604 = this;
  return cljs.core.pr_str.call(null, this__49604)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__49605 = this;
  return cljs.core.ci_reduce.call(null, this__49605.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__49606 = this;
  return cljs.core.ci_reduce.call(null, this__49606.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__49607 = this;
  if(this__49607.array.length > 0) {
    var vector_seq__49608 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__49607.array.length) {
          return cljs.core.cons.call(null, this__49607.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__49608.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__49609 = this;
  return this__49609.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__49610 = this;
  var count__49611 = this__49610.array.length;
  if(count__49611 > 0) {
    return this__49610.array[count__49611 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__49612 = this;
  if(this__49612.array.length > 0) {
    var new_array__49613 = this__49612.array.slice();
    new_array__49613.pop();
    return new cljs.core.Vector(this__49612.meta, new_array__49613, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__49614 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__49615 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__49616 = this;
  return new cljs.core.Vector(meta, this__49616.array, this__49616.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__49617 = this;
  return this__49617.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__49618 = this;
  if(function() {
    var and__3822__auto____49619 = 0 <= n;
    if(and__3822__auto____49619) {
      return n < this__49618.array.length
    }else {
      return and__3822__auto____49619
    }
  }()) {
    return this__49618.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__49620 = this;
  if(function() {
    var and__3822__auto____49621 = 0 <= n;
    if(and__3822__auto____49621) {
      return n < this__49620.array.length
    }else {
      return and__3822__auto____49621
    }
  }()) {
    return this__49620.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__49622 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__49622.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__49625 = pv.cnt;
  if(cnt__49625 < 32) {
    return 0
  }else {
    return cnt__49625 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__49631 = level;
  var ret__49632 = node;
  while(true) {
    if(ll__49631 === 0) {
      return ret__49632
    }else {
      var embed__49633 = ret__49632;
      var r__49634 = cljs.core.pv_fresh_node.call(null, edit);
      var ___49635 = cljs.core.pv_aset.call(null, r__49634, 0, embed__49633);
      var G__49636 = ll__49631 - 5;
      var G__49637 = r__49634;
      ll__49631 = G__49636;
      ret__49632 = G__49637;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__49643 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__49644 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__49643, subidx__49644, tailnode);
    return ret__49643
  }else {
    var child__49645 = cljs.core.pv_aget.call(null, parent, subidx__49644);
    if(!(child__49645 == null)) {
      var node_to_insert__49646 = push_tail.call(null, pv, level - 5, child__49645, tailnode);
      cljs.core.pv_aset.call(null, ret__49643, subidx__49644, node_to_insert__49646);
      return ret__49643
    }else {
      var node_to_insert__49647 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__49643, subidx__49644, node_to_insert__49647);
      return ret__49643
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____49651 = 0 <= i;
    if(and__3822__auto____49651) {
      return i < pv.cnt
    }else {
      return and__3822__auto____49651
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__49652 = pv.root;
      var level__49653 = pv.shift;
      while(true) {
        if(level__49653 > 0) {
          var G__49654 = cljs.core.pv_aget.call(null, node__49652, i >>> level__49653 & 31);
          var G__49655 = level__49653 - 5;
          node__49652 = G__49654;
          level__49653 = G__49655;
          continue
        }else {
          return node__49652.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__49658 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__49658, i & 31, val);
    return ret__49658
  }else {
    var subidx__49659 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__49658, subidx__49659, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__49659), i, val));
    return ret__49658
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__49665 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__49666 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__49665));
    if(function() {
      var and__3822__auto____49667 = new_child__49666 == null;
      if(and__3822__auto____49667) {
        return subidx__49665 === 0
      }else {
        return and__3822__auto____49667
      }
    }()) {
      return null
    }else {
      var ret__49668 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__49668, subidx__49665, new_child__49666);
      return ret__49668
    }
  }else {
    if(subidx__49665 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__49669 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__49669, subidx__49665, null);
        return ret__49669
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__49672 = this;
  return new cljs.core.TransientVector(this__49672.cnt, this__49672.shift, cljs.core.tv_editable_root.call(null, this__49672.root), cljs.core.tv_editable_tail.call(null, this__49672.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__49673 = this;
  var h__2192__auto____49674 = this__49673.__hash;
  if(!(h__2192__auto____49674 == null)) {
    return h__2192__auto____49674
  }else {
    var h__2192__auto____49675 = cljs.core.hash_coll.call(null, coll);
    this__49673.__hash = h__2192__auto____49675;
    return h__2192__auto____49675
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__49676 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__49677 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__49678 = this;
  if(function() {
    var and__3822__auto____49679 = 0 <= k;
    if(and__3822__auto____49679) {
      return k < this__49678.cnt
    }else {
      return and__3822__auto____49679
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__49680 = this__49678.tail.slice();
      new_tail__49680[k & 31] = v;
      return new cljs.core.PersistentVector(this__49678.meta, this__49678.cnt, this__49678.shift, this__49678.root, new_tail__49680, null)
    }else {
      return new cljs.core.PersistentVector(this__49678.meta, this__49678.cnt, this__49678.shift, cljs.core.do_assoc.call(null, coll, this__49678.shift, this__49678.root, k, v), this__49678.tail, null)
    }
  }else {
    if(k === this__49678.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__49678.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__49728 = null;
  var G__49728__2 = function(this_sym49681, k) {
    var this__49683 = this;
    var this_sym49681__49684 = this;
    var coll__49685 = this_sym49681__49684;
    return coll__49685.cljs$core$ILookup$_lookup$arity$2(coll__49685, k)
  };
  var G__49728__3 = function(this_sym49682, k, not_found) {
    var this__49683 = this;
    var this_sym49682__49686 = this;
    var coll__49687 = this_sym49682__49686;
    return coll__49687.cljs$core$ILookup$_lookup$arity$3(coll__49687, k, not_found)
  };
  G__49728 = function(this_sym49682, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__49728__2.call(this, this_sym49682, k);
      case 3:
        return G__49728__3.call(this, this_sym49682, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__49728
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym49670, args49671) {
  var this__49688 = this;
  return this_sym49670.call.apply(this_sym49670, [this_sym49670].concat(args49671.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__49689 = this;
  var step_init__49690 = [0, init];
  var i__49691 = 0;
  while(true) {
    if(i__49691 < this__49689.cnt) {
      var arr__49692 = cljs.core.array_for.call(null, v, i__49691);
      var len__49693 = arr__49692.length;
      var init__49697 = function() {
        var j__49694 = 0;
        var init__49695 = step_init__49690[1];
        while(true) {
          if(j__49694 < len__49693) {
            var init__49696 = f.call(null, init__49695, j__49694 + i__49691, arr__49692[j__49694]);
            if(cljs.core.reduced_QMARK_.call(null, init__49696)) {
              return init__49696
            }else {
              var G__49729 = j__49694 + 1;
              var G__49730 = init__49696;
              j__49694 = G__49729;
              init__49695 = G__49730;
              continue
            }
          }else {
            step_init__49690[0] = len__49693;
            step_init__49690[1] = init__49695;
            return init__49695
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__49697)) {
        return cljs.core.deref.call(null, init__49697)
      }else {
        var G__49731 = i__49691 + step_init__49690[0];
        i__49691 = G__49731;
        continue
      }
    }else {
      return step_init__49690[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__49698 = this;
  if(this__49698.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__49699 = this__49698.tail.slice();
    new_tail__49699.push(o);
    return new cljs.core.PersistentVector(this__49698.meta, this__49698.cnt + 1, this__49698.shift, this__49698.root, new_tail__49699, null)
  }else {
    var root_overflow_QMARK___49700 = this__49698.cnt >>> 5 > 1 << this__49698.shift;
    var new_shift__49701 = root_overflow_QMARK___49700 ? this__49698.shift + 5 : this__49698.shift;
    var new_root__49703 = root_overflow_QMARK___49700 ? function() {
      var n_r__49702 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__49702, 0, this__49698.root);
      cljs.core.pv_aset.call(null, n_r__49702, 1, cljs.core.new_path.call(null, null, this__49698.shift, new cljs.core.VectorNode(null, this__49698.tail)));
      return n_r__49702
    }() : cljs.core.push_tail.call(null, coll, this__49698.shift, this__49698.root, new cljs.core.VectorNode(null, this__49698.tail));
    return new cljs.core.PersistentVector(this__49698.meta, this__49698.cnt + 1, new_shift__49701, new_root__49703, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__49704 = this;
  if(this__49704.cnt > 0) {
    return new cljs.core.RSeq(coll, this__49704.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__49705 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__49706 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__49707 = this;
  var this__49708 = this;
  return cljs.core.pr_str.call(null, this__49708)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__49709 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__49710 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__49711 = this;
  if(this__49711.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__49712 = this;
  return this__49712.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__49713 = this;
  if(this__49713.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__49713.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__49714 = this;
  if(this__49714.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__49714.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__49714.meta)
    }else {
      if(1 < this__49714.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__49714.meta, this__49714.cnt - 1, this__49714.shift, this__49714.root, this__49714.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__49715 = cljs.core.array_for.call(null, coll, this__49714.cnt - 2);
          var nr__49716 = cljs.core.pop_tail.call(null, coll, this__49714.shift, this__49714.root);
          var new_root__49717 = nr__49716 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__49716;
          var cnt_1__49718 = this__49714.cnt - 1;
          if(function() {
            var and__3822__auto____49719 = 5 < this__49714.shift;
            if(and__3822__auto____49719) {
              return cljs.core.pv_aget.call(null, new_root__49717, 1) == null
            }else {
              return and__3822__auto____49719
            }
          }()) {
            return new cljs.core.PersistentVector(this__49714.meta, cnt_1__49718, this__49714.shift - 5, cljs.core.pv_aget.call(null, new_root__49717, 0), new_tail__49715, null)
          }else {
            return new cljs.core.PersistentVector(this__49714.meta, cnt_1__49718, this__49714.shift, new_root__49717, new_tail__49715, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__49720 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__49721 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__49722 = this;
  return new cljs.core.PersistentVector(meta, this__49722.cnt, this__49722.shift, this__49722.root, this__49722.tail, this__49722.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__49723 = this;
  return this__49723.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__49724 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__49725 = this;
  if(function() {
    var and__3822__auto____49726 = 0 <= n;
    if(and__3822__auto____49726) {
      return n < this__49725.cnt
    }else {
      return and__3822__auto____49726
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__49727 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__49727.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__49732 = xs.length;
  var xs__49733 = no_clone === true ? xs : xs.slice();
  if(l__49732 < 32) {
    return new cljs.core.PersistentVector(null, l__49732, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__49733, null)
  }else {
    var node__49734 = xs__49733.slice(0, 32);
    var v__49735 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__49734, null);
    var i__49736 = 32;
    var out__49737 = cljs.core._as_transient.call(null, v__49735);
    while(true) {
      if(i__49736 < l__49732) {
        var G__49738 = i__49736 + 1;
        var G__49739 = cljs.core.conj_BANG_.call(null, out__49737, xs__49733[i__49736]);
        i__49736 = G__49738;
        out__49737 = G__49739;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__49737)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__49740) {
    var args = cljs.core.seq(arglist__49740);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__49741 = this;
  if(this__49741.off + 1 < this__49741.node.length) {
    var s__49742 = cljs.core.chunked_seq.call(null, this__49741.vec, this__49741.node, this__49741.i, this__49741.off + 1);
    if(s__49742 == null) {
      return null
    }else {
      return s__49742
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__49743 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__49744 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__49745 = this;
  return this__49745.node[this__49745.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__49746 = this;
  if(this__49746.off + 1 < this__49746.node.length) {
    var s__49747 = cljs.core.chunked_seq.call(null, this__49746.vec, this__49746.node, this__49746.i, this__49746.off + 1);
    if(s__49747 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__49747
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__49748 = this;
  var l__49749 = this__49748.node.length;
  var s__49750 = this__49748.i + l__49749 < cljs.core._count.call(null, this__49748.vec) ? cljs.core.chunked_seq.call(null, this__49748.vec, this__49748.i + l__49749, 0) : null;
  if(s__49750 == null) {
    return null
  }else {
    return s__49750
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__49751 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__49752 = this;
  return cljs.core.chunked_seq.call(null, this__49752.vec, this__49752.node, this__49752.i, this__49752.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__49753 = this;
  return this__49753.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__49754 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__49754.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__49755 = this;
  return cljs.core.array_chunk.call(null, this__49755.node, this__49755.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__49756 = this;
  var l__49757 = this__49756.node.length;
  var s__49758 = this__49756.i + l__49757 < cljs.core._count.call(null, this__49756.vec) ? cljs.core.chunked_seq.call(null, this__49756.vec, this__49756.i + l__49757, 0) : null;
  if(s__49758 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__49758
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__49761 = this;
  var h__2192__auto____49762 = this__49761.__hash;
  if(!(h__2192__auto____49762 == null)) {
    return h__2192__auto____49762
  }else {
    var h__2192__auto____49763 = cljs.core.hash_coll.call(null, coll);
    this__49761.__hash = h__2192__auto____49763;
    return h__2192__auto____49763
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__49764 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__49765 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__49766 = this;
  var v_pos__49767 = this__49766.start + key;
  return new cljs.core.Subvec(this__49766.meta, cljs.core._assoc.call(null, this__49766.v, v_pos__49767, val), this__49766.start, this__49766.end > v_pos__49767 + 1 ? this__49766.end : v_pos__49767 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__49793 = null;
  var G__49793__2 = function(this_sym49768, k) {
    var this__49770 = this;
    var this_sym49768__49771 = this;
    var coll__49772 = this_sym49768__49771;
    return coll__49772.cljs$core$ILookup$_lookup$arity$2(coll__49772, k)
  };
  var G__49793__3 = function(this_sym49769, k, not_found) {
    var this__49770 = this;
    var this_sym49769__49773 = this;
    var coll__49774 = this_sym49769__49773;
    return coll__49774.cljs$core$ILookup$_lookup$arity$3(coll__49774, k, not_found)
  };
  G__49793 = function(this_sym49769, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__49793__2.call(this, this_sym49769, k);
      case 3:
        return G__49793__3.call(this, this_sym49769, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__49793
}();
cljs.core.Subvec.prototype.apply = function(this_sym49759, args49760) {
  var this__49775 = this;
  return this_sym49759.call.apply(this_sym49759, [this_sym49759].concat(args49760.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__49776 = this;
  return new cljs.core.Subvec(this__49776.meta, cljs.core._assoc_n.call(null, this__49776.v, this__49776.end, o), this__49776.start, this__49776.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__49777 = this;
  var this__49778 = this;
  return cljs.core.pr_str.call(null, this__49778)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__49779 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__49780 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__49781 = this;
  var subvec_seq__49782 = function subvec_seq(i) {
    if(i === this__49781.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__49781.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__49782.call(null, this__49781.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__49783 = this;
  return this__49783.end - this__49783.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__49784 = this;
  return cljs.core._nth.call(null, this__49784.v, this__49784.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__49785 = this;
  if(this__49785.start === this__49785.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__49785.meta, this__49785.v, this__49785.start, this__49785.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__49786 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__49787 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__49788 = this;
  return new cljs.core.Subvec(meta, this__49788.v, this__49788.start, this__49788.end, this__49788.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__49789 = this;
  return this__49789.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__49790 = this;
  return cljs.core._nth.call(null, this__49790.v, this__49790.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__49791 = this;
  return cljs.core._nth.call(null, this__49791.v, this__49791.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__49792 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__49792.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__49795 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__49795, 0, tl.length);
  return ret__49795
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__49799 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__49800 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__49799, subidx__49800, level === 5 ? tail_node : function() {
    var child__49801 = cljs.core.pv_aget.call(null, ret__49799, subidx__49800);
    if(!(child__49801 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__49801, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__49799
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__49806 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__49807 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__49808 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__49806, subidx__49807));
    if(function() {
      var and__3822__auto____49809 = new_child__49808 == null;
      if(and__3822__auto____49809) {
        return subidx__49807 === 0
      }else {
        return and__3822__auto____49809
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__49806, subidx__49807, new_child__49808);
      return node__49806
    }
  }else {
    if(subidx__49807 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__49806, subidx__49807, null);
        return node__49806
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____49814 = 0 <= i;
    if(and__3822__auto____49814) {
      return i < tv.cnt
    }else {
      return and__3822__auto____49814
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__49815 = tv.root;
      var node__49816 = root__49815;
      var level__49817 = tv.shift;
      while(true) {
        if(level__49817 > 0) {
          var G__49818 = cljs.core.tv_ensure_editable.call(null, root__49815.edit, cljs.core.pv_aget.call(null, node__49816, i >>> level__49817 & 31));
          var G__49819 = level__49817 - 5;
          node__49816 = G__49818;
          level__49817 = G__49819;
          continue
        }else {
          return node__49816.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__49859 = null;
  var G__49859__2 = function(this_sym49822, k) {
    var this__49824 = this;
    var this_sym49822__49825 = this;
    var coll__49826 = this_sym49822__49825;
    return coll__49826.cljs$core$ILookup$_lookup$arity$2(coll__49826, k)
  };
  var G__49859__3 = function(this_sym49823, k, not_found) {
    var this__49824 = this;
    var this_sym49823__49827 = this;
    var coll__49828 = this_sym49823__49827;
    return coll__49828.cljs$core$ILookup$_lookup$arity$3(coll__49828, k, not_found)
  };
  G__49859 = function(this_sym49823, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__49859__2.call(this, this_sym49823, k);
      case 3:
        return G__49859__3.call(this, this_sym49823, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__49859
}();
cljs.core.TransientVector.prototype.apply = function(this_sym49820, args49821) {
  var this__49829 = this;
  return this_sym49820.call.apply(this_sym49820, [this_sym49820].concat(args49821.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__49830 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__49831 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__49832 = this;
  if(this__49832.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__49833 = this;
  if(function() {
    var and__3822__auto____49834 = 0 <= n;
    if(and__3822__auto____49834) {
      return n < this__49833.cnt
    }else {
      return and__3822__auto____49834
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__49835 = this;
  if(this__49835.root.edit) {
    return this__49835.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__49836 = this;
  if(this__49836.root.edit) {
    if(function() {
      var and__3822__auto____49837 = 0 <= n;
      if(and__3822__auto____49837) {
        return n < this__49836.cnt
      }else {
        return and__3822__auto____49837
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__49836.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__49842 = function go(level, node) {
          var node__49840 = cljs.core.tv_ensure_editable.call(null, this__49836.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__49840, n & 31, val);
            return node__49840
          }else {
            var subidx__49841 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__49840, subidx__49841, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__49840, subidx__49841)));
            return node__49840
          }
        }.call(null, this__49836.shift, this__49836.root);
        this__49836.root = new_root__49842;
        return tcoll
      }
    }else {
      if(n === this__49836.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__49836.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__49843 = this;
  if(this__49843.root.edit) {
    if(this__49843.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__49843.cnt) {
        this__49843.cnt = 0;
        return tcoll
      }else {
        if((this__49843.cnt - 1 & 31) > 0) {
          this__49843.cnt = this__49843.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__49844 = cljs.core.editable_array_for.call(null, tcoll, this__49843.cnt - 2);
            var new_root__49846 = function() {
              var nr__49845 = cljs.core.tv_pop_tail.call(null, tcoll, this__49843.shift, this__49843.root);
              if(!(nr__49845 == null)) {
                return nr__49845
              }else {
                return new cljs.core.VectorNode(this__49843.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____49847 = 5 < this__49843.shift;
              if(and__3822__auto____49847) {
                return cljs.core.pv_aget.call(null, new_root__49846, 1) == null
              }else {
                return and__3822__auto____49847
              }
            }()) {
              var new_root__49848 = cljs.core.tv_ensure_editable.call(null, this__49843.root.edit, cljs.core.pv_aget.call(null, new_root__49846, 0));
              this__49843.root = new_root__49848;
              this__49843.shift = this__49843.shift - 5;
              this__49843.cnt = this__49843.cnt - 1;
              this__49843.tail = new_tail__49844;
              return tcoll
            }else {
              this__49843.root = new_root__49846;
              this__49843.cnt = this__49843.cnt - 1;
              this__49843.tail = new_tail__49844;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__49849 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__49850 = this;
  if(this__49850.root.edit) {
    if(this__49850.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__49850.tail[this__49850.cnt & 31] = o;
      this__49850.cnt = this__49850.cnt + 1;
      return tcoll
    }else {
      var tail_node__49851 = new cljs.core.VectorNode(this__49850.root.edit, this__49850.tail);
      var new_tail__49852 = cljs.core.make_array.call(null, 32);
      new_tail__49852[0] = o;
      this__49850.tail = new_tail__49852;
      if(this__49850.cnt >>> 5 > 1 << this__49850.shift) {
        var new_root_array__49853 = cljs.core.make_array.call(null, 32);
        var new_shift__49854 = this__49850.shift + 5;
        new_root_array__49853[0] = this__49850.root;
        new_root_array__49853[1] = cljs.core.new_path.call(null, this__49850.root.edit, this__49850.shift, tail_node__49851);
        this__49850.root = new cljs.core.VectorNode(this__49850.root.edit, new_root_array__49853);
        this__49850.shift = new_shift__49854;
        this__49850.cnt = this__49850.cnt + 1;
        return tcoll
      }else {
        var new_root__49855 = cljs.core.tv_push_tail.call(null, tcoll, this__49850.shift, this__49850.root, tail_node__49851);
        this__49850.root = new_root__49855;
        this__49850.cnt = this__49850.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__49856 = this;
  if(this__49856.root.edit) {
    this__49856.root.edit = null;
    var len__49857 = this__49856.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__49858 = cljs.core.make_array.call(null, len__49857);
    cljs.core.array_copy.call(null, this__49856.tail, 0, trimmed_tail__49858, 0, len__49857);
    return new cljs.core.PersistentVector(null, this__49856.cnt, this__49856.shift, this__49856.root, trimmed_tail__49858, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__49860 = this;
  var h__2192__auto____49861 = this__49860.__hash;
  if(!(h__2192__auto____49861 == null)) {
    return h__2192__auto____49861
  }else {
    var h__2192__auto____49862 = cljs.core.hash_coll.call(null, coll);
    this__49860.__hash = h__2192__auto____49862;
    return h__2192__auto____49862
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__49863 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__49864 = this;
  var this__49865 = this;
  return cljs.core.pr_str.call(null, this__49865)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__49866 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__49867 = this;
  return cljs.core._first.call(null, this__49867.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__49868 = this;
  var temp__3971__auto____49869 = cljs.core.next.call(null, this__49868.front);
  if(temp__3971__auto____49869) {
    var f1__49870 = temp__3971__auto____49869;
    return new cljs.core.PersistentQueueSeq(this__49868.meta, f1__49870, this__49868.rear, null)
  }else {
    if(this__49868.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__49868.meta, this__49868.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__49871 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__49872 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__49872.front, this__49872.rear, this__49872.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__49873 = this;
  return this__49873.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__49874 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__49874.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__49875 = this;
  var h__2192__auto____49876 = this__49875.__hash;
  if(!(h__2192__auto____49876 == null)) {
    return h__2192__auto____49876
  }else {
    var h__2192__auto____49877 = cljs.core.hash_coll.call(null, coll);
    this__49875.__hash = h__2192__auto____49877;
    return h__2192__auto____49877
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__49878 = this;
  if(cljs.core.truth_(this__49878.front)) {
    return new cljs.core.PersistentQueue(this__49878.meta, this__49878.count + 1, this__49878.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____49879 = this__49878.rear;
      if(cljs.core.truth_(or__3824__auto____49879)) {
        return or__3824__auto____49879
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__49878.meta, this__49878.count + 1, cljs.core.conj.call(null, this__49878.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__49880 = this;
  var this__49881 = this;
  return cljs.core.pr_str.call(null, this__49881)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__49882 = this;
  var rear__49883 = cljs.core.seq.call(null, this__49882.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____49884 = this__49882.front;
    if(cljs.core.truth_(or__3824__auto____49884)) {
      return or__3824__auto____49884
    }else {
      return rear__49883
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__49882.front, cljs.core.seq.call(null, rear__49883), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__49885 = this;
  return this__49885.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__49886 = this;
  return cljs.core._first.call(null, this__49886.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__49887 = this;
  if(cljs.core.truth_(this__49887.front)) {
    var temp__3971__auto____49888 = cljs.core.next.call(null, this__49887.front);
    if(temp__3971__auto____49888) {
      var f1__49889 = temp__3971__auto____49888;
      return new cljs.core.PersistentQueue(this__49887.meta, this__49887.count - 1, f1__49889, this__49887.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__49887.meta, this__49887.count - 1, cljs.core.seq.call(null, this__49887.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__49890 = this;
  return cljs.core.first.call(null, this__49890.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__49891 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__49892 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__49893 = this;
  return new cljs.core.PersistentQueue(meta, this__49893.count, this__49893.front, this__49893.rear, this__49893.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__49894 = this;
  return this__49894.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__49895 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__49896 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__49899 = array.length;
  var i__49900 = 0;
  while(true) {
    if(i__49900 < len__49899) {
      if(k === array[i__49900]) {
        return i__49900
      }else {
        var G__49901 = i__49900 + incr;
        i__49900 = G__49901;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__49904 = cljs.core.hash.call(null, a);
  var b__49905 = cljs.core.hash.call(null, b);
  if(a__49904 < b__49905) {
    return-1
  }else {
    if(a__49904 > b__49905) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__49913 = m.keys;
  var len__49914 = ks__49913.length;
  var so__49915 = m.strobj;
  var out__49916 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__49917 = 0;
  var out__49918 = cljs.core.transient$.call(null, out__49916);
  while(true) {
    if(i__49917 < len__49914) {
      var k__49919 = ks__49913[i__49917];
      var G__49920 = i__49917 + 1;
      var G__49921 = cljs.core.assoc_BANG_.call(null, out__49918, k__49919, so__49915[k__49919]);
      i__49917 = G__49920;
      out__49918 = G__49921;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__49918, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__49927 = {};
  var l__49928 = ks.length;
  var i__49929 = 0;
  while(true) {
    if(i__49929 < l__49928) {
      var k__49930 = ks[i__49929];
      new_obj__49927[k__49930] = obj[k__49930];
      var G__49931 = i__49929 + 1;
      i__49929 = G__49931;
      continue
    }else {
    }
    break
  }
  return new_obj__49927
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__49934 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__49935 = this;
  var h__2192__auto____49936 = this__49935.__hash;
  if(!(h__2192__auto____49936 == null)) {
    return h__2192__auto____49936
  }else {
    var h__2192__auto____49937 = cljs.core.hash_imap.call(null, coll);
    this__49935.__hash = h__2192__auto____49937;
    return h__2192__auto____49937
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__49938 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__49939 = this;
  if(function() {
    var and__3822__auto____49940 = goog.isString(k);
    if(and__3822__auto____49940) {
      return!(cljs.core.scan_array.call(null, 1, k, this__49939.keys) == null)
    }else {
      return and__3822__auto____49940
    }
  }()) {
    return this__49939.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__49941 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____49942 = this__49941.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____49942) {
        return or__3824__auto____49942
      }else {
        return this__49941.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__49941.keys) == null)) {
        var new_strobj__49943 = cljs.core.obj_clone.call(null, this__49941.strobj, this__49941.keys);
        new_strobj__49943[k] = v;
        return new cljs.core.ObjMap(this__49941.meta, this__49941.keys, new_strobj__49943, this__49941.update_count + 1, null)
      }else {
        var new_strobj__49944 = cljs.core.obj_clone.call(null, this__49941.strobj, this__49941.keys);
        var new_keys__49945 = this__49941.keys.slice();
        new_strobj__49944[k] = v;
        new_keys__49945.push(k);
        return new cljs.core.ObjMap(this__49941.meta, new_keys__49945, new_strobj__49944, this__49941.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__49946 = this;
  if(function() {
    var and__3822__auto____49947 = goog.isString(k);
    if(and__3822__auto____49947) {
      return!(cljs.core.scan_array.call(null, 1, k, this__49946.keys) == null)
    }else {
      return and__3822__auto____49947
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__49969 = null;
  var G__49969__2 = function(this_sym49948, k) {
    var this__49950 = this;
    var this_sym49948__49951 = this;
    var coll__49952 = this_sym49948__49951;
    return coll__49952.cljs$core$ILookup$_lookup$arity$2(coll__49952, k)
  };
  var G__49969__3 = function(this_sym49949, k, not_found) {
    var this__49950 = this;
    var this_sym49949__49953 = this;
    var coll__49954 = this_sym49949__49953;
    return coll__49954.cljs$core$ILookup$_lookup$arity$3(coll__49954, k, not_found)
  };
  G__49969 = function(this_sym49949, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__49969__2.call(this, this_sym49949, k);
      case 3:
        return G__49969__3.call(this, this_sym49949, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__49969
}();
cljs.core.ObjMap.prototype.apply = function(this_sym49932, args49933) {
  var this__49955 = this;
  return this_sym49932.call.apply(this_sym49932, [this_sym49932].concat(args49933.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__49956 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__49957 = this;
  var this__49958 = this;
  return cljs.core.pr_str.call(null, this__49958)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__49959 = this;
  if(this__49959.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__49922_SHARP_) {
      return cljs.core.vector.call(null, p1__49922_SHARP_, this__49959.strobj[p1__49922_SHARP_])
    }, this__49959.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__49960 = this;
  return this__49960.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__49961 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__49962 = this;
  return new cljs.core.ObjMap(meta, this__49962.keys, this__49962.strobj, this__49962.update_count, this__49962.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__49963 = this;
  return this__49963.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__49964 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__49964.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__49965 = this;
  if(function() {
    var and__3822__auto____49966 = goog.isString(k);
    if(and__3822__auto____49966) {
      return!(cljs.core.scan_array.call(null, 1, k, this__49965.keys) == null)
    }else {
      return and__3822__auto____49966
    }
  }()) {
    var new_keys__49967 = this__49965.keys.slice();
    var new_strobj__49968 = cljs.core.obj_clone.call(null, this__49965.strobj, this__49965.keys);
    new_keys__49967.splice(cljs.core.scan_array.call(null, 1, k, new_keys__49967), 1);
    cljs.core.js_delete.call(null, new_strobj__49968, k);
    return new cljs.core.ObjMap(this__49965.meta, new_keys__49967, new_strobj__49968, this__49965.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__49973 = this;
  var h__2192__auto____49974 = this__49973.__hash;
  if(!(h__2192__auto____49974 == null)) {
    return h__2192__auto____49974
  }else {
    var h__2192__auto____49975 = cljs.core.hash_imap.call(null, coll);
    this__49973.__hash = h__2192__auto____49975;
    return h__2192__auto____49975
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__49976 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__49977 = this;
  var bucket__49978 = this__49977.hashobj[cljs.core.hash.call(null, k)];
  var i__49979 = cljs.core.truth_(bucket__49978) ? cljs.core.scan_array.call(null, 2, k, bucket__49978) : null;
  if(cljs.core.truth_(i__49979)) {
    return bucket__49978[i__49979 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__49980 = this;
  var h__49981 = cljs.core.hash.call(null, k);
  var bucket__49982 = this__49980.hashobj[h__49981];
  if(cljs.core.truth_(bucket__49982)) {
    var new_bucket__49983 = bucket__49982.slice();
    var new_hashobj__49984 = goog.object.clone(this__49980.hashobj);
    new_hashobj__49984[h__49981] = new_bucket__49983;
    var temp__3971__auto____49985 = cljs.core.scan_array.call(null, 2, k, new_bucket__49983);
    if(cljs.core.truth_(temp__3971__auto____49985)) {
      var i__49986 = temp__3971__auto____49985;
      new_bucket__49983[i__49986 + 1] = v;
      return new cljs.core.HashMap(this__49980.meta, this__49980.count, new_hashobj__49984, null)
    }else {
      new_bucket__49983.push(k, v);
      return new cljs.core.HashMap(this__49980.meta, this__49980.count + 1, new_hashobj__49984, null)
    }
  }else {
    var new_hashobj__49987 = goog.object.clone(this__49980.hashobj);
    new_hashobj__49987[h__49981] = [k, v];
    return new cljs.core.HashMap(this__49980.meta, this__49980.count + 1, new_hashobj__49987, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__49988 = this;
  var bucket__49989 = this__49988.hashobj[cljs.core.hash.call(null, k)];
  var i__49990 = cljs.core.truth_(bucket__49989) ? cljs.core.scan_array.call(null, 2, k, bucket__49989) : null;
  if(cljs.core.truth_(i__49990)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__50015 = null;
  var G__50015__2 = function(this_sym49991, k) {
    var this__49993 = this;
    var this_sym49991__49994 = this;
    var coll__49995 = this_sym49991__49994;
    return coll__49995.cljs$core$ILookup$_lookup$arity$2(coll__49995, k)
  };
  var G__50015__3 = function(this_sym49992, k, not_found) {
    var this__49993 = this;
    var this_sym49992__49996 = this;
    var coll__49997 = this_sym49992__49996;
    return coll__49997.cljs$core$ILookup$_lookup$arity$3(coll__49997, k, not_found)
  };
  G__50015 = function(this_sym49992, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50015__2.call(this, this_sym49992, k);
      case 3:
        return G__50015__3.call(this, this_sym49992, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__50015
}();
cljs.core.HashMap.prototype.apply = function(this_sym49971, args49972) {
  var this__49998 = this;
  return this_sym49971.call.apply(this_sym49971, [this_sym49971].concat(args49972.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__49999 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__50000 = this;
  var this__50001 = this;
  return cljs.core.pr_str.call(null, this__50001)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__50002 = this;
  if(this__50002.count > 0) {
    var hashes__50003 = cljs.core.js_keys.call(null, this__50002.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__49970_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__50002.hashobj[p1__49970_SHARP_]))
    }, hashes__50003)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__50004 = this;
  return this__50004.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__50005 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__50006 = this;
  return new cljs.core.HashMap(meta, this__50006.count, this__50006.hashobj, this__50006.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__50007 = this;
  return this__50007.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__50008 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__50008.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__50009 = this;
  var h__50010 = cljs.core.hash.call(null, k);
  var bucket__50011 = this__50009.hashobj[h__50010];
  var i__50012 = cljs.core.truth_(bucket__50011) ? cljs.core.scan_array.call(null, 2, k, bucket__50011) : null;
  if(cljs.core.not.call(null, i__50012)) {
    return coll
  }else {
    var new_hashobj__50013 = goog.object.clone(this__50009.hashobj);
    if(3 > bucket__50011.length) {
      cljs.core.js_delete.call(null, new_hashobj__50013, h__50010)
    }else {
      var new_bucket__50014 = bucket__50011.slice();
      new_bucket__50014.splice(i__50012, 2);
      new_hashobj__50013[h__50010] = new_bucket__50014
    }
    return new cljs.core.HashMap(this__50009.meta, this__50009.count - 1, new_hashobj__50013, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__50016 = ks.length;
  var i__50017 = 0;
  var out__50018 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__50017 < len__50016) {
      var G__50019 = i__50017 + 1;
      var G__50020 = cljs.core.assoc.call(null, out__50018, ks[i__50017], vs[i__50017]);
      i__50017 = G__50019;
      out__50018 = G__50020;
      continue
    }else {
      return out__50018
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__50024 = m.arr;
  var len__50025 = arr__50024.length;
  var i__50026 = 0;
  while(true) {
    if(len__50025 <= i__50026) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__50024[i__50026], k)) {
        return i__50026
      }else {
        if("\ufdd0'else") {
          var G__50027 = i__50026 + 2;
          i__50026 = G__50027;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__50030 = this;
  return new cljs.core.TransientArrayMap({}, this__50030.arr.length, this__50030.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__50031 = this;
  var h__2192__auto____50032 = this__50031.__hash;
  if(!(h__2192__auto____50032 == null)) {
    return h__2192__auto____50032
  }else {
    var h__2192__auto____50033 = cljs.core.hash_imap.call(null, coll);
    this__50031.__hash = h__2192__auto____50033;
    return h__2192__auto____50033
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__50034 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__50035 = this;
  var idx__50036 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__50036 === -1) {
    return not_found
  }else {
    return this__50035.arr[idx__50036 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__50037 = this;
  var idx__50038 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__50038 === -1) {
    if(this__50037.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__50037.meta, this__50037.cnt + 1, function() {
        var G__50039__50040 = this__50037.arr.slice();
        G__50039__50040.push(k);
        G__50039__50040.push(v);
        return G__50039__50040
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__50037.arr[idx__50038 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__50037.meta, this__50037.cnt, function() {
          var G__50041__50042 = this__50037.arr.slice();
          G__50041__50042[idx__50038 + 1] = v;
          return G__50041__50042
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__50043 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__50075 = null;
  var G__50075__2 = function(this_sym50044, k) {
    var this__50046 = this;
    var this_sym50044__50047 = this;
    var coll__50048 = this_sym50044__50047;
    return coll__50048.cljs$core$ILookup$_lookup$arity$2(coll__50048, k)
  };
  var G__50075__3 = function(this_sym50045, k, not_found) {
    var this__50046 = this;
    var this_sym50045__50049 = this;
    var coll__50050 = this_sym50045__50049;
    return coll__50050.cljs$core$ILookup$_lookup$arity$3(coll__50050, k, not_found)
  };
  G__50075 = function(this_sym50045, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50075__2.call(this, this_sym50045, k);
      case 3:
        return G__50075__3.call(this, this_sym50045, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__50075
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym50028, args50029) {
  var this__50051 = this;
  return this_sym50028.call.apply(this_sym50028, [this_sym50028].concat(args50029.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__50052 = this;
  var len__50053 = this__50052.arr.length;
  var i__50054 = 0;
  var init__50055 = init;
  while(true) {
    if(i__50054 < len__50053) {
      var init__50056 = f.call(null, init__50055, this__50052.arr[i__50054], this__50052.arr[i__50054 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__50056)) {
        return cljs.core.deref.call(null, init__50056)
      }else {
        var G__50076 = i__50054 + 2;
        var G__50077 = init__50056;
        i__50054 = G__50076;
        init__50055 = G__50077;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__50057 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__50058 = this;
  var this__50059 = this;
  return cljs.core.pr_str.call(null, this__50059)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__50060 = this;
  if(this__50060.cnt > 0) {
    var len__50061 = this__50060.arr.length;
    var array_map_seq__50062 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__50061) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__50060.arr[i], this__50060.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__50062.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__50063 = this;
  return this__50063.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__50064 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__50065 = this;
  return new cljs.core.PersistentArrayMap(meta, this__50065.cnt, this__50065.arr, this__50065.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__50066 = this;
  return this__50066.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__50067 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__50067.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__50068 = this;
  var idx__50069 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__50069 >= 0) {
    var len__50070 = this__50068.arr.length;
    var new_len__50071 = len__50070 - 2;
    if(new_len__50071 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__50072 = cljs.core.make_array.call(null, new_len__50071);
      var s__50073 = 0;
      var d__50074 = 0;
      while(true) {
        if(s__50073 >= len__50070) {
          return new cljs.core.PersistentArrayMap(this__50068.meta, this__50068.cnt - 1, new_arr__50072, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__50068.arr[s__50073])) {
            var G__50078 = s__50073 + 2;
            var G__50079 = d__50074;
            s__50073 = G__50078;
            d__50074 = G__50079;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__50072[d__50074] = this__50068.arr[s__50073];
              new_arr__50072[d__50074 + 1] = this__50068.arr[s__50073 + 1];
              var G__50080 = s__50073 + 2;
              var G__50081 = d__50074 + 2;
              s__50073 = G__50080;
              d__50074 = G__50081;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__50082 = cljs.core.count.call(null, ks);
  var i__50083 = 0;
  var out__50084 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__50083 < len__50082) {
      var G__50085 = i__50083 + 1;
      var G__50086 = cljs.core.assoc_BANG_.call(null, out__50084, ks[i__50083], vs[i__50083]);
      i__50083 = G__50085;
      out__50084 = G__50086;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__50084)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__50087 = this;
  if(cljs.core.truth_(this__50087.editable_QMARK_)) {
    var idx__50088 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__50088 >= 0) {
      this__50087.arr[idx__50088] = this__50087.arr[this__50087.len - 2];
      this__50087.arr[idx__50088 + 1] = this__50087.arr[this__50087.len - 1];
      var G__50089__50090 = this__50087.arr;
      G__50089__50090.pop();
      G__50089__50090.pop();
      G__50089__50090;
      this__50087.len = this__50087.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__50091 = this;
  if(cljs.core.truth_(this__50091.editable_QMARK_)) {
    var idx__50092 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__50092 === -1) {
      if(this__50091.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__50091.len = this__50091.len + 2;
        this__50091.arr.push(key);
        this__50091.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__50091.len, this__50091.arr), key, val)
      }
    }else {
      if(val === this__50091.arr[idx__50092 + 1]) {
        return tcoll
      }else {
        this__50091.arr[idx__50092 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__50093 = this;
  if(cljs.core.truth_(this__50093.editable_QMARK_)) {
    if(function() {
      var G__50094__50095 = o;
      if(G__50094__50095) {
        if(function() {
          var or__3824__auto____50096 = G__50094__50095.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____50096) {
            return or__3824__auto____50096
          }else {
            return G__50094__50095.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__50094__50095.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__50094__50095)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__50094__50095)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__50097 = cljs.core.seq.call(null, o);
      var tcoll__50098 = tcoll;
      while(true) {
        var temp__3971__auto____50099 = cljs.core.first.call(null, es__50097);
        if(cljs.core.truth_(temp__3971__auto____50099)) {
          var e__50100 = temp__3971__auto____50099;
          var G__50106 = cljs.core.next.call(null, es__50097);
          var G__50107 = tcoll__50098.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__50098, cljs.core.key.call(null, e__50100), cljs.core.val.call(null, e__50100));
          es__50097 = G__50106;
          tcoll__50098 = G__50107;
          continue
        }else {
          return tcoll__50098
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__50101 = this;
  if(cljs.core.truth_(this__50101.editable_QMARK_)) {
    this__50101.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__50101.len, 2), this__50101.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__50102 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__50103 = this;
  if(cljs.core.truth_(this__50103.editable_QMARK_)) {
    var idx__50104 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__50104 === -1) {
      return not_found
    }else {
      return this__50103.arr[idx__50104 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__50105 = this;
  if(cljs.core.truth_(this__50105.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__50105.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__50110 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__50111 = 0;
  while(true) {
    if(i__50111 < len) {
      var G__50112 = cljs.core.assoc_BANG_.call(null, out__50110, arr[i__50111], arr[i__50111 + 1]);
      var G__50113 = i__50111 + 2;
      out__50110 = G__50112;
      i__50111 = G__50113;
      continue
    }else {
      return out__50110
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__50118__50119 = arr.slice();
    G__50118__50119[i] = a;
    return G__50118__50119
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__50120__50121 = arr.slice();
    G__50120__50121[i] = a;
    G__50120__50121[j] = b;
    return G__50120__50121
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__50123 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__50123, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__50123, 2 * i, new_arr__50123.length - 2 * i);
  return new_arr__50123
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__50126 = inode.ensure_editable(edit);
    editable__50126.arr[i] = a;
    return editable__50126
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__50127 = inode.ensure_editable(edit);
    editable__50127.arr[i] = a;
    editable__50127.arr[j] = b;
    return editable__50127
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__50134 = arr.length;
  var i__50135 = 0;
  var init__50136 = init;
  while(true) {
    if(i__50135 < len__50134) {
      var init__50139 = function() {
        var k__50137 = arr[i__50135];
        if(!(k__50137 == null)) {
          return f.call(null, init__50136, k__50137, arr[i__50135 + 1])
        }else {
          var node__50138 = arr[i__50135 + 1];
          if(!(node__50138 == null)) {
            return node__50138.kv_reduce(f, init__50136)
          }else {
            return init__50136
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__50139)) {
        return cljs.core.deref.call(null, init__50139)
      }else {
        var G__50140 = i__50135 + 2;
        var G__50141 = init__50139;
        i__50135 = G__50140;
        init__50136 = G__50141;
        continue
      }
    }else {
      return init__50136
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__50142 = this;
  var inode__50143 = this;
  if(this__50142.bitmap === bit) {
    return null
  }else {
    var editable__50144 = inode__50143.ensure_editable(e);
    var earr__50145 = editable__50144.arr;
    var len__50146 = earr__50145.length;
    editable__50144.bitmap = bit ^ editable__50144.bitmap;
    cljs.core.array_copy.call(null, earr__50145, 2 * (i + 1), earr__50145, 2 * i, len__50146 - 2 * (i + 1));
    earr__50145[len__50146 - 2] = null;
    earr__50145[len__50146 - 1] = null;
    return editable__50144
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__50147 = this;
  var inode__50148 = this;
  var bit__50149 = 1 << (hash >>> shift & 31);
  var idx__50150 = cljs.core.bitmap_indexed_node_index.call(null, this__50147.bitmap, bit__50149);
  if((this__50147.bitmap & bit__50149) === 0) {
    var n__50151 = cljs.core.bit_count.call(null, this__50147.bitmap);
    if(2 * n__50151 < this__50147.arr.length) {
      var editable__50152 = inode__50148.ensure_editable(edit);
      var earr__50153 = editable__50152.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__50153, 2 * idx__50150, earr__50153, 2 * (idx__50150 + 1), 2 * (n__50151 - idx__50150));
      earr__50153[2 * idx__50150] = key;
      earr__50153[2 * idx__50150 + 1] = val;
      editable__50152.bitmap = editable__50152.bitmap | bit__50149;
      return editable__50152
    }else {
      if(n__50151 >= 16) {
        var nodes__50154 = cljs.core.make_array.call(null, 32);
        var jdx__50155 = hash >>> shift & 31;
        nodes__50154[jdx__50155] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__50156 = 0;
        var j__50157 = 0;
        while(true) {
          if(i__50156 < 32) {
            if((this__50147.bitmap >>> i__50156 & 1) === 0) {
              var G__50210 = i__50156 + 1;
              var G__50211 = j__50157;
              i__50156 = G__50210;
              j__50157 = G__50211;
              continue
            }else {
              nodes__50154[i__50156] = !(this__50147.arr[j__50157] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__50147.arr[j__50157]), this__50147.arr[j__50157], this__50147.arr[j__50157 + 1], added_leaf_QMARK_) : this__50147.arr[j__50157 + 1];
              var G__50212 = i__50156 + 1;
              var G__50213 = j__50157 + 2;
              i__50156 = G__50212;
              j__50157 = G__50213;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__50151 + 1, nodes__50154)
      }else {
        if("\ufdd0'else") {
          var new_arr__50158 = cljs.core.make_array.call(null, 2 * (n__50151 + 4));
          cljs.core.array_copy.call(null, this__50147.arr, 0, new_arr__50158, 0, 2 * idx__50150);
          new_arr__50158[2 * idx__50150] = key;
          new_arr__50158[2 * idx__50150 + 1] = val;
          cljs.core.array_copy.call(null, this__50147.arr, 2 * idx__50150, new_arr__50158, 2 * (idx__50150 + 1), 2 * (n__50151 - idx__50150));
          added_leaf_QMARK_.val = true;
          var editable__50159 = inode__50148.ensure_editable(edit);
          editable__50159.arr = new_arr__50158;
          editable__50159.bitmap = editable__50159.bitmap | bit__50149;
          return editable__50159
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__50160 = this__50147.arr[2 * idx__50150];
    var val_or_node__50161 = this__50147.arr[2 * idx__50150 + 1];
    if(key_or_nil__50160 == null) {
      var n__50162 = val_or_node__50161.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__50162 === val_or_node__50161) {
        return inode__50148
      }else {
        return cljs.core.edit_and_set.call(null, inode__50148, edit, 2 * idx__50150 + 1, n__50162)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__50160)) {
        if(val === val_or_node__50161) {
          return inode__50148
        }else {
          return cljs.core.edit_and_set.call(null, inode__50148, edit, 2 * idx__50150 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__50148, edit, 2 * idx__50150, null, 2 * idx__50150 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__50160, val_or_node__50161, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__50163 = this;
  var inode__50164 = this;
  return cljs.core.create_inode_seq.call(null, this__50163.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__50165 = this;
  var inode__50166 = this;
  var bit__50167 = 1 << (hash >>> shift & 31);
  if((this__50165.bitmap & bit__50167) === 0) {
    return inode__50166
  }else {
    var idx__50168 = cljs.core.bitmap_indexed_node_index.call(null, this__50165.bitmap, bit__50167);
    var key_or_nil__50169 = this__50165.arr[2 * idx__50168];
    var val_or_node__50170 = this__50165.arr[2 * idx__50168 + 1];
    if(key_or_nil__50169 == null) {
      var n__50171 = val_or_node__50170.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__50171 === val_or_node__50170) {
        return inode__50166
      }else {
        if(!(n__50171 == null)) {
          return cljs.core.edit_and_set.call(null, inode__50166, edit, 2 * idx__50168 + 1, n__50171)
        }else {
          if(this__50165.bitmap === bit__50167) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__50166.edit_and_remove_pair(edit, bit__50167, idx__50168)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__50169)) {
        removed_leaf_QMARK_[0] = true;
        return inode__50166.edit_and_remove_pair(edit, bit__50167, idx__50168)
      }else {
        if("\ufdd0'else") {
          return inode__50166
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__50172 = this;
  var inode__50173 = this;
  if(e === this__50172.edit) {
    return inode__50173
  }else {
    var n__50174 = cljs.core.bit_count.call(null, this__50172.bitmap);
    var new_arr__50175 = cljs.core.make_array.call(null, n__50174 < 0 ? 4 : 2 * (n__50174 + 1));
    cljs.core.array_copy.call(null, this__50172.arr, 0, new_arr__50175, 0, 2 * n__50174);
    return new cljs.core.BitmapIndexedNode(e, this__50172.bitmap, new_arr__50175)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__50176 = this;
  var inode__50177 = this;
  return cljs.core.inode_kv_reduce.call(null, this__50176.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__50178 = this;
  var inode__50179 = this;
  var bit__50180 = 1 << (hash >>> shift & 31);
  if((this__50178.bitmap & bit__50180) === 0) {
    return not_found
  }else {
    var idx__50181 = cljs.core.bitmap_indexed_node_index.call(null, this__50178.bitmap, bit__50180);
    var key_or_nil__50182 = this__50178.arr[2 * idx__50181];
    var val_or_node__50183 = this__50178.arr[2 * idx__50181 + 1];
    if(key_or_nil__50182 == null) {
      return val_or_node__50183.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__50182)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__50182, val_or_node__50183], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__50184 = this;
  var inode__50185 = this;
  var bit__50186 = 1 << (hash >>> shift & 31);
  if((this__50184.bitmap & bit__50186) === 0) {
    return inode__50185
  }else {
    var idx__50187 = cljs.core.bitmap_indexed_node_index.call(null, this__50184.bitmap, bit__50186);
    var key_or_nil__50188 = this__50184.arr[2 * idx__50187];
    var val_or_node__50189 = this__50184.arr[2 * idx__50187 + 1];
    if(key_or_nil__50188 == null) {
      var n__50190 = val_or_node__50189.inode_without(shift + 5, hash, key);
      if(n__50190 === val_or_node__50189) {
        return inode__50185
      }else {
        if(!(n__50190 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__50184.bitmap, cljs.core.clone_and_set.call(null, this__50184.arr, 2 * idx__50187 + 1, n__50190))
        }else {
          if(this__50184.bitmap === bit__50186) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__50184.bitmap ^ bit__50186, cljs.core.remove_pair.call(null, this__50184.arr, idx__50187))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__50188)) {
        return new cljs.core.BitmapIndexedNode(null, this__50184.bitmap ^ bit__50186, cljs.core.remove_pair.call(null, this__50184.arr, idx__50187))
      }else {
        if("\ufdd0'else") {
          return inode__50185
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__50191 = this;
  var inode__50192 = this;
  var bit__50193 = 1 << (hash >>> shift & 31);
  var idx__50194 = cljs.core.bitmap_indexed_node_index.call(null, this__50191.bitmap, bit__50193);
  if((this__50191.bitmap & bit__50193) === 0) {
    var n__50195 = cljs.core.bit_count.call(null, this__50191.bitmap);
    if(n__50195 >= 16) {
      var nodes__50196 = cljs.core.make_array.call(null, 32);
      var jdx__50197 = hash >>> shift & 31;
      nodes__50196[jdx__50197] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__50198 = 0;
      var j__50199 = 0;
      while(true) {
        if(i__50198 < 32) {
          if((this__50191.bitmap >>> i__50198 & 1) === 0) {
            var G__50214 = i__50198 + 1;
            var G__50215 = j__50199;
            i__50198 = G__50214;
            j__50199 = G__50215;
            continue
          }else {
            nodes__50196[i__50198] = !(this__50191.arr[j__50199] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__50191.arr[j__50199]), this__50191.arr[j__50199], this__50191.arr[j__50199 + 1], added_leaf_QMARK_) : this__50191.arr[j__50199 + 1];
            var G__50216 = i__50198 + 1;
            var G__50217 = j__50199 + 2;
            i__50198 = G__50216;
            j__50199 = G__50217;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__50195 + 1, nodes__50196)
    }else {
      var new_arr__50200 = cljs.core.make_array.call(null, 2 * (n__50195 + 1));
      cljs.core.array_copy.call(null, this__50191.arr, 0, new_arr__50200, 0, 2 * idx__50194);
      new_arr__50200[2 * idx__50194] = key;
      new_arr__50200[2 * idx__50194 + 1] = val;
      cljs.core.array_copy.call(null, this__50191.arr, 2 * idx__50194, new_arr__50200, 2 * (idx__50194 + 1), 2 * (n__50195 - idx__50194));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__50191.bitmap | bit__50193, new_arr__50200)
    }
  }else {
    var key_or_nil__50201 = this__50191.arr[2 * idx__50194];
    var val_or_node__50202 = this__50191.arr[2 * idx__50194 + 1];
    if(key_or_nil__50201 == null) {
      var n__50203 = val_or_node__50202.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__50203 === val_or_node__50202) {
        return inode__50192
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__50191.bitmap, cljs.core.clone_and_set.call(null, this__50191.arr, 2 * idx__50194 + 1, n__50203))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__50201)) {
        if(val === val_or_node__50202) {
          return inode__50192
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__50191.bitmap, cljs.core.clone_and_set.call(null, this__50191.arr, 2 * idx__50194 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__50191.bitmap, cljs.core.clone_and_set.call(null, this__50191.arr, 2 * idx__50194, null, 2 * idx__50194 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__50201, val_or_node__50202, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__50204 = this;
  var inode__50205 = this;
  var bit__50206 = 1 << (hash >>> shift & 31);
  if((this__50204.bitmap & bit__50206) === 0) {
    return not_found
  }else {
    var idx__50207 = cljs.core.bitmap_indexed_node_index.call(null, this__50204.bitmap, bit__50206);
    var key_or_nil__50208 = this__50204.arr[2 * idx__50207];
    var val_or_node__50209 = this__50204.arr[2 * idx__50207 + 1];
    if(key_or_nil__50208 == null) {
      return val_or_node__50209.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__50208)) {
        return val_or_node__50209
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__50225 = array_node.arr;
  var len__50226 = 2 * (array_node.cnt - 1);
  var new_arr__50227 = cljs.core.make_array.call(null, len__50226);
  var i__50228 = 0;
  var j__50229 = 1;
  var bitmap__50230 = 0;
  while(true) {
    if(i__50228 < len__50226) {
      if(function() {
        var and__3822__auto____50231 = !(i__50228 === idx);
        if(and__3822__auto____50231) {
          return!(arr__50225[i__50228] == null)
        }else {
          return and__3822__auto____50231
        }
      }()) {
        new_arr__50227[j__50229] = arr__50225[i__50228];
        var G__50232 = i__50228 + 1;
        var G__50233 = j__50229 + 2;
        var G__50234 = bitmap__50230 | 1 << i__50228;
        i__50228 = G__50232;
        j__50229 = G__50233;
        bitmap__50230 = G__50234;
        continue
      }else {
        var G__50235 = i__50228 + 1;
        var G__50236 = j__50229;
        var G__50237 = bitmap__50230;
        i__50228 = G__50235;
        j__50229 = G__50236;
        bitmap__50230 = G__50237;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__50230, new_arr__50227)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__50238 = this;
  var inode__50239 = this;
  var idx__50240 = hash >>> shift & 31;
  var node__50241 = this__50238.arr[idx__50240];
  if(node__50241 == null) {
    var editable__50242 = cljs.core.edit_and_set.call(null, inode__50239, edit, idx__50240, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__50242.cnt = editable__50242.cnt + 1;
    return editable__50242
  }else {
    var n__50243 = node__50241.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__50243 === node__50241) {
      return inode__50239
    }else {
      return cljs.core.edit_and_set.call(null, inode__50239, edit, idx__50240, n__50243)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__50244 = this;
  var inode__50245 = this;
  return cljs.core.create_array_node_seq.call(null, this__50244.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__50246 = this;
  var inode__50247 = this;
  var idx__50248 = hash >>> shift & 31;
  var node__50249 = this__50246.arr[idx__50248];
  if(node__50249 == null) {
    return inode__50247
  }else {
    var n__50250 = node__50249.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__50250 === node__50249) {
      return inode__50247
    }else {
      if(n__50250 == null) {
        if(this__50246.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__50247, edit, idx__50248)
        }else {
          var editable__50251 = cljs.core.edit_and_set.call(null, inode__50247, edit, idx__50248, n__50250);
          editable__50251.cnt = editable__50251.cnt - 1;
          return editable__50251
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__50247, edit, idx__50248, n__50250)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__50252 = this;
  var inode__50253 = this;
  if(e === this__50252.edit) {
    return inode__50253
  }else {
    return new cljs.core.ArrayNode(e, this__50252.cnt, this__50252.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__50254 = this;
  var inode__50255 = this;
  var len__50256 = this__50254.arr.length;
  var i__50257 = 0;
  var init__50258 = init;
  while(true) {
    if(i__50257 < len__50256) {
      var node__50259 = this__50254.arr[i__50257];
      if(!(node__50259 == null)) {
        var init__50260 = node__50259.kv_reduce(f, init__50258);
        if(cljs.core.reduced_QMARK_.call(null, init__50260)) {
          return cljs.core.deref.call(null, init__50260)
        }else {
          var G__50279 = i__50257 + 1;
          var G__50280 = init__50260;
          i__50257 = G__50279;
          init__50258 = G__50280;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__50258
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__50261 = this;
  var inode__50262 = this;
  var idx__50263 = hash >>> shift & 31;
  var node__50264 = this__50261.arr[idx__50263];
  if(!(node__50264 == null)) {
    return node__50264.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__50265 = this;
  var inode__50266 = this;
  var idx__50267 = hash >>> shift & 31;
  var node__50268 = this__50265.arr[idx__50267];
  if(!(node__50268 == null)) {
    var n__50269 = node__50268.inode_without(shift + 5, hash, key);
    if(n__50269 === node__50268) {
      return inode__50266
    }else {
      if(n__50269 == null) {
        if(this__50265.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__50266, null, idx__50267)
        }else {
          return new cljs.core.ArrayNode(null, this__50265.cnt - 1, cljs.core.clone_and_set.call(null, this__50265.arr, idx__50267, n__50269))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__50265.cnt, cljs.core.clone_and_set.call(null, this__50265.arr, idx__50267, n__50269))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__50266
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__50270 = this;
  var inode__50271 = this;
  var idx__50272 = hash >>> shift & 31;
  var node__50273 = this__50270.arr[idx__50272];
  if(node__50273 == null) {
    return new cljs.core.ArrayNode(null, this__50270.cnt + 1, cljs.core.clone_and_set.call(null, this__50270.arr, idx__50272, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__50274 = node__50273.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__50274 === node__50273) {
      return inode__50271
    }else {
      return new cljs.core.ArrayNode(null, this__50270.cnt, cljs.core.clone_and_set.call(null, this__50270.arr, idx__50272, n__50274))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__50275 = this;
  var inode__50276 = this;
  var idx__50277 = hash >>> shift & 31;
  var node__50278 = this__50275.arr[idx__50277];
  if(!(node__50278 == null)) {
    return node__50278.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__50283 = 2 * cnt;
  var i__50284 = 0;
  while(true) {
    if(i__50284 < lim__50283) {
      if(cljs.core.key_test.call(null, key, arr[i__50284])) {
        return i__50284
      }else {
        var G__50285 = i__50284 + 2;
        i__50284 = G__50285;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__50286 = this;
  var inode__50287 = this;
  if(hash === this__50286.collision_hash) {
    var idx__50288 = cljs.core.hash_collision_node_find_index.call(null, this__50286.arr, this__50286.cnt, key);
    if(idx__50288 === -1) {
      if(this__50286.arr.length > 2 * this__50286.cnt) {
        var editable__50289 = cljs.core.edit_and_set.call(null, inode__50287, edit, 2 * this__50286.cnt, key, 2 * this__50286.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__50289.cnt = editable__50289.cnt + 1;
        return editable__50289
      }else {
        var len__50290 = this__50286.arr.length;
        var new_arr__50291 = cljs.core.make_array.call(null, len__50290 + 2);
        cljs.core.array_copy.call(null, this__50286.arr, 0, new_arr__50291, 0, len__50290);
        new_arr__50291[len__50290] = key;
        new_arr__50291[len__50290 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__50287.ensure_editable_array(edit, this__50286.cnt + 1, new_arr__50291)
      }
    }else {
      if(this__50286.arr[idx__50288 + 1] === val) {
        return inode__50287
      }else {
        return cljs.core.edit_and_set.call(null, inode__50287, edit, idx__50288 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__50286.collision_hash >>> shift & 31), [null, inode__50287, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__50292 = this;
  var inode__50293 = this;
  return cljs.core.create_inode_seq.call(null, this__50292.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__50294 = this;
  var inode__50295 = this;
  var idx__50296 = cljs.core.hash_collision_node_find_index.call(null, this__50294.arr, this__50294.cnt, key);
  if(idx__50296 === -1) {
    return inode__50295
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__50294.cnt === 1) {
      return null
    }else {
      var editable__50297 = inode__50295.ensure_editable(edit);
      var earr__50298 = editable__50297.arr;
      earr__50298[idx__50296] = earr__50298[2 * this__50294.cnt - 2];
      earr__50298[idx__50296 + 1] = earr__50298[2 * this__50294.cnt - 1];
      earr__50298[2 * this__50294.cnt - 1] = null;
      earr__50298[2 * this__50294.cnt - 2] = null;
      editable__50297.cnt = editable__50297.cnt - 1;
      return editable__50297
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__50299 = this;
  var inode__50300 = this;
  if(e === this__50299.edit) {
    return inode__50300
  }else {
    var new_arr__50301 = cljs.core.make_array.call(null, 2 * (this__50299.cnt + 1));
    cljs.core.array_copy.call(null, this__50299.arr, 0, new_arr__50301, 0, 2 * this__50299.cnt);
    return new cljs.core.HashCollisionNode(e, this__50299.collision_hash, this__50299.cnt, new_arr__50301)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__50302 = this;
  var inode__50303 = this;
  return cljs.core.inode_kv_reduce.call(null, this__50302.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__50304 = this;
  var inode__50305 = this;
  var idx__50306 = cljs.core.hash_collision_node_find_index.call(null, this__50304.arr, this__50304.cnt, key);
  if(idx__50306 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__50304.arr[idx__50306])) {
      return cljs.core.PersistentVector.fromArray([this__50304.arr[idx__50306], this__50304.arr[idx__50306 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__50307 = this;
  var inode__50308 = this;
  var idx__50309 = cljs.core.hash_collision_node_find_index.call(null, this__50307.arr, this__50307.cnt, key);
  if(idx__50309 === -1) {
    return inode__50308
  }else {
    if(this__50307.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__50307.collision_hash, this__50307.cnt - 1, cljs.core.remove_pair.call(null, this__50307.arr, cljs.core.quot.call(null, idx__50309, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__50310 = this;
  var inode__50311 = this;
  if(hash === this__50310.collision_hash) {
    var idx__50312 = cljs.core.hash_collision_node_find_index.call(null, this__50310.arr, this__50310.cnt, key);
    if(idx__50312 === -1) {
      var len__50313 = this__50310.arr.length;
      var new_arr__50314 = cljs.core.make_array.call(null, len__50313 + 2);
      cljs.core.array_copy.call(null, this__50310.arr, 0, new_arr__50314, 0, len__50313);
      new_arr__50314[len__50313] = key;
      new_arr__50314[len__50313 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__50310.collision_hash, this__50310.cnt + 1, new_arr__50314)
    }else {
      if(cljs.core._EQ_.call(null, this__50310.arr[idx__50312], val)) {
        return inode__50311
      }else {
        return new cljs.core.HashCollisionNode(null, this__50310.collision_hash, this__50310.cnt, cljs.core.clone_and_set.call(null, this__50310.arr, idx__50312 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__50310.collision_hash >>> shift & 31), [null, inode__50311])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__50315 = this;
  var inode__50316 = this;
  var idx__50317 = cljs.core.hash_collision_node_find_index.call(null, this__50315.arr, this__50315.cnt, key);
  if(idx__50317 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__50315.arr[idx__50317])) {
      return this__50315.arr[idx__50317 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__50318 = this;
  var inode__50319 = this;
  if(e === this__50318.edit) {
    this__50318.arr = array;
    this__50318.cnt = count;
    return inode__50319
  }else {
    return new cljs.core.HashCollisionNode(this__50318.edit, this__50318.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__50324 = cljs.core.hash.call(null, key1);
    if(key1hash__50324 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__50324, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___50325 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__50324, key1, val1, added_leaf_QMARK___50325).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___50325)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__50326 = cljs.core.hash.call(null, key1);
    if(key1hash__50326 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__50326, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___50327 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__50326, key1, val1, added_leaf_QMARK___50327).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___50327)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__50328 = this;
  var h__2192__auto____50329 = this__50328.__hash;
  if(!(h__2192__auto____50329 == null)) {
    return h__2192__auto____50329
  }else {
    var h__2192__auto____50330 = cljs.core.hash_coll.call(null, coll);
    this__50328.__hash = h__2192__auto____50330;
    return h__2192__auto____50330
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__50331 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__50332 = this;
  var this__50333 = this;
  return cljs.core.pr_str.call(null, this__50333)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__50334 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__50335 = this;
  if(this__50335.s == null) {
    return cljs.core.PersistentVector.fromArray([this__50335.nodes[this__50335.i], this__50335.nodes[this__50335.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__50335.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__50336 = this;
  if(this__50336.s == null) {
    return cljs.core.create_inode_seq.call(null, this__50336.nodes, this__50336.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__50336.nodes, this__50336.i, cljs.core.next.call(null, this__50336.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__50337 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__50338 = this;
  return new cljs.core.NodeSeq(meta, this__50338.nodes, this__50338.i, this__50338.s, this__50338.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__50339 = this;
  return this__50339.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__50340 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__50340.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__50347 = nodes.length;
      var j__50348 = i;
      while(true) {
        if(j__50348 < len__50347) {
          if(!(nodes[j__50348] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__50348, null, null)
          }else {
            var temp__3971__auto____50349 = nodes[j__50348 + 1];
            if(cljs.core.truth_(temp__3971__auto____50349)) {
              var node__50350 = temp__3971__auto____50349;
              var temp__3971__auto____50351 = node__50350.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____50351)) {
                var node_seq__50352 = temp__3971__auto____50351;
                return new cljs.core.NodeSeq(null, nodes, j__50348 + 2, node_seq__50352, null)
              }else {
                var G__50353 = j__50348 + 2;
                j__50348 = G__50353;
                continue
              }
            }else {
              var G__50354 = j__50348 + 2;
              j__50348 = G__50354;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__50355 = this;
  var h__2192__auto____50356 = this__50355.__hash;
  if(!(h__2192__auto____50356 == null)) {
    return h__2192__auto____50356
  }else {
    var h__2192__auto____50357 = cljs.core.hash_coll.call(null, coll);
    this__50355.__hash = h__2192__auto____50357;
    return h__2192__auto____50357
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__50358 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__50359 = this;
  var this__50360 = this;
  return cljs.core.pr_str.call(null, this__50360)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__50361 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__50362 = this;
  return cljs.core.first.call(null, this__50362.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__50363 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__50363.nodes, this__50363.i, cljs.core.next.call(null, this__50363.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__50364 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__50365 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__50365.nodes, this__50365.i, this__50365.s, this__50365.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__50366 = this;
  return this__50366.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__50367 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__50367.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__50374 = nodes.length;
      var j__50375 = i;
      while(true) {
        if(j__50375 < len__50374) {
          var temp__3971__auto____50376 = nodes[j__50375];
          if(cljs.core.truth_(temp__3971__auto____50376)) {
            var nj__50377 = temp__3971__auto____50376;
            var temp__3971__auto____50378 = nj__50377.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____50378)) {
              var ns__50379 = temp__3971__auto____50378;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__50375 + 1, ns__50379, null)
            }else {
              var G__50380 = j__50375 + 1;
              j__50375 = G__50380;
              continue
            }
          }else {
            var G__50381 = j__50375 + 1;
            j__50375 = G__50381;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__50384 = this;
  return new cljs.core.TransientHashMap({}, this__50384.root, this__50384.cnt, this__50384.has_nil_QMARK_, this__50384.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__50385 = this;
  var h__2192__auto____50386 = this__50385.__hash;
  if(!(h__2192__auto____50386 == null)) {
    return h__2192__auto____50386
  }else {
    var h__2192__auto____50387 = cljs.core.hash_imap.call(null, coll);
    this__50385.__hash = h__2192__auto____50387;
    return h__2192__auto____50387
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__50388 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__50389 = this;
  if(k == null) {
    if(this__50389.has_nil_QMARK_) {
      return this__50389.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__50389.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__50389.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__50390 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____50391 = this__50390.has_nil_QMARK_;
      if(and__3822__auto____50391) {
        return v === this__50390.nil_val
      }else {
        return and__3822__auto____50391
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__50390.meta, this__50390.has_nil_QMARK_ ? this__50390.cnt : this__50390.cnt + 1, this__50390.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___50392 = new cljs.core.Box(false);
    var new_root__50393 = (this__50390.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__50390.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___50392);
    if(new_root__50393 === this__50390.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__50390.meta, added_leaf_QMARK___50392.val ? this__50390.cnt + 1 : this__50390.cnt, new_root__50393, this__50390.has_nil_QMARK_, this__50390.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__50394 = this;
  if(k == null) {
    return this__50394.has_nil_QMARK_
  }else {
    if(this__50394.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__50394.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__50417 = null;
  var G__50417__2 = function(this_sym50395, k) {
    var this__50397 = this;
    var this_sym50395__50398 = this;
    var coll__50399 = this_sym50395__50398;
    return coll__50399.cljs$core$ILookup$_lookup$arity$2(coll__50399, k)
  };
  var G__50417__3 = function(this_sym50396, k, not_found) {
    var this__50397 = this;
    var this_sym50396__50400 = this;
    var coll__50401 = this_sym50396__50400;
    return coll__50401.cljs$core$ILookup$_lookup$arity$3(coll__50401, k, not_found)
  };
  G__50417 = function(this_sym50396, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50417__2.call(this, this_sym50396, k);
      case 3:
        return G__50417__3.call(this, this_sym50396, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__50417
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym50382, args50383) {
  var this__50402 = this;
  return this_sym50382.call.apply(this_sym50382, [this_sym50382].concat(args50383.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__50403 = this;
  var init__50404 = this__50403.has_nil_QMARK_ ? f.call(null, init, null, this__50403.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__50404)) {
    return cljs.core.deref.call(null, init__50404)
  }else {
    if(!(this__50403.root == null)) {
      return this__50403.root.kv_reduce(f, init__50404)
    }else {
      if("\ufdd0'else") {
        return init__50404
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__50405 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__50406 = this;
  var this__50407 = this;
  return cljs.core.pr_str.call(null, this__50407)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__50408 = this;
  if(this__50408.cnt > 0) {
    var s__50409 = !(this__50408.root == null) ? this__50408.root.inode_seq() : null;
    if(this__50408.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__50408.nil_val], true), s__50409)
    }else {
      return s__50409
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__50410 = this;
  return this__50410.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__50411 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__50412 = this;
  return new cljs.core.PersistentHashMap(meta, this__50412.cnt, this__50412.root, this__50412.has_nil_QMARK_, this__50412.nil_val, this__50412.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__50413 = this;
  return this__50413.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__50414 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__50414.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__50415 = this;
  if(k == null) {
    if(this__50415.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__50415.meta, this__50415.cnt - 1, this__50415.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__50415.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__50416 = this__50415.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__50416 === this__50415.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__50415.meta, this__50415.cnt - 1, new_root__50416, this__50415.has_nil_QMARK_, this__50415.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__50418 = ks.length;
  var i__50419 = 0;
  var out__50420 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__50419 < len__50418) {
      var G__50421 = i__50419 + 1;
      var G__50422 = cljs.core.assoc_BANG_.call(null, out__50420, ks[i__50419], vs[i__50419]);
      i__50419 = G__50421;
      out__50420 = G__50422;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__50420)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__50423 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__50424 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__50425 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__50426 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__50427 = this;
  if(k == null) {
    if(this__50427.has_nil_QMARK_) {
      return this__50427.nil_val
    }else {
      return null
    }
  }else {
    if(this__50427.root == null) {
      return null
    }else {
      return this__50427.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__50428 = this;
  if(k == null) {
    if(this__50428.has_nil_QMARK_) {
      return this__50428.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__50428.root == null) {
      return not_found
    }else {
      return this__50428.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__50429 = this;
  if(this__50429.edit) {
    return this__50429.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__50430 = this;
  var tcoll__50431 = this;
  if(this__50430.edit) {
    if(function() {
      var G__50432__50433 = o;
      if(G__50432__50433) {
        if(function() {
          var or__3824__auto____50434 = G__50432__50433.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____50434) {
            return or__3824__auto____50434
          }else {
            return G__50432__50433.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__50432__50433.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__50432__50433)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__50432__50433)
      }
    }()) {
      return tcoll__50431.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__50435 = cljs.core.seq.call(null, o);
      var tcoll__50436 = tcoll__50431;
      while(true) {
        var temp__3971__auto____50437 = cljs.core.first.call(null, es__50435);
        if(cljs.core.truth_(temp__3971__auto____50437)) {
          var e__50438 = temp__3971__auto____50437;
          var G__50449 = cljs.core.next.call(null, es__50435);
          var G__50450 = tcoll__50436.assoc_BANG_(cljs.core.key.call(null, e__50438), cljs.core.val.call(null, e__50438));
          es__50435 = G__50449;
          tcoll__50436 = G__50450;
          continue
        }else {
          return tcoll__50436
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__50439 = this;
  var tcoll__50440 = this;
  if(this__50439.edit) {
    if(k == null) {
      if(this__50439.nil_val === v) {
      }else {
        this__50439.nil_val = v
      }
      if(this__50439.has_nil_QMARK_) {
      }else {
        this__50439.count = this__50439.count + 1;
        this__50439.has_nil_QMARK_ = true
      }
      return tcoll__50440
    }else {
      var added_leaf_QMARK___50441 = new cljs.core.Box(false);
      var node__50442 = (this__50439.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__50439.root).inode_assoc_BANG_(this__50439.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___50441);
      if(node__50442 === this__50439.root) {
      }else {
        this__50439.root = node__50442
      }
      if(added_leaf_QMARK___50441.val) {
        this__50439.count = this__50439.count + 1
      }else {
      }
      return tcoll__50440
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__50443 = this;
  var tcoll__50444 = this;
  if(this__50443.edit) {
    if(k == null) {
      if(this__50443.has_nil_QMARK_) {
        this__50443.has_nil_QMARK_ = false;
        this__50443.nil_val = null;
        this__50443.count = this__50443.count - 1;
        return tcoll__50444
      }else {
        return tcoll__50444
      }
    }else {
      if(this__50443.root == null) {
        return tcoll__50444
      }else {
        var removed_leaf_QMARK___50445 = new cljs.core.Box(false);
        var node__50446 = this__50443.root.inode_without_BANG_(this__50443.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___50445);
        if(node__50446 === this__50443.root) {
        }else {
          this__50443.root = node__50446
        }
        if(cljs.core.truth_(removed_leaf_QMARK___50445[0])) {
          this__50443.count = this__50443.count - 1
        }else {
        }
        return tcoll__50444
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__50447 = this;
  var tcoll__50448 = this;
  if(this__50447.edit) {
    this__50447.edit = null;
    return new cljs.core.PersistentHashMap(null, this__50447.count, this__50447.root, this__50447.has_nil_QMARK_, this__50447.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__50453 = node;
  var stack__50454 = stack;
  while(true) {
    if(!(t__50453 == null)) {
      var G__50455 = ascending_QMARK_ ? t__50453.left : t__50453.right;
      var G__50456 = cljs.core.conj.call(null, stack__50454, t__50453);
      t__50453 = G__50455;
      stack__50454 = G__50456;
      continue
    }else {
      return stack__50454
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__50457 = this;
  var h__2192__auto____50458 = this__50457.__hash;
  if(!(h__2192__auto____50458 == null)) {
    return h__2192__auto____50458
  }else {
    var h__2192__auto____50459 = cljs.core.hash_coll.call(null, coll);
    this__50457.__hash = h__2192__auto____50459;
    return h__2192__auto____50459
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__50460 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__50461 = this;
  var this__50462 = this;
  return cljs.core.pr_str.call(null, this__50462)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__50463 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__50464 = this;
  if(this__50464.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__50464.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__50465 = this;
  return cljs.core.peek.call(null, this__50465.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__50466 = this;
  var t__50467 = cljs.core.first.call(null, this__50466.stack);
  var next_stack__50468 = cljs.core.tree_map_seq_push.call(null, this__50466.ascending_QMARK_ ? t__50467.right : t__50467.left, cljs.core.next.call(null, this__50466.stack), this__50466.ascending_QMARK_);
  if(!(next_stack__50468 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__50468, this__50466.ascending_QMARK_, this__50466.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__50469 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__50470 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__50470.stack, this__50470.ascending_QMARK_, this__50470.cnt, this__50470.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__50471 = this;
  return this__50471.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____50473 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____50473) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____50473
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____50475 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____50475) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____50475
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__50479 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__50479)) {
    return cljs.core.deref.call(null, init__50479)
  }else {
    var init__50480 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__50479) : init__50479;
    if(cljs.core.reduced_QMARK_.call(null, init__50480)) {
      return cljs.core.deref.call(null, init__50480)
    }else {
      var init__50481 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__50480) : init__50480;
      if(cljs.core.reduced_QMARK_.call(null, init__50481)) {
        return cljs.core.deref.call(null, init__50481)
      }else {
        return init__50481
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__50484 = this;
  var h__2192__auto____50485 = this__50484.__hash;
  if(!(h__2192__auto____50485 == null)) {
    return h__2192__auto____50485
  }else {
    var h__2192__auto____50486 = cljs.core.hash_coll.call(null, coll);
    this__50484.__hash = h__2192__auto____50486;
    return h__2192__auto____50486
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__50487 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__50488 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__50489 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__50489.key, this__50489.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__50537 = null;
  var G__50537__2 = function(this_sym50490, k) {
    var this__50492 = this;
    var this_sym50490__50493 = this;
    var node__50494 = this_sym50490__50493;
    return node__50494.cljs$core$ILookup$_lookup$arity$2(node__50494, k)
  };
  var G__50537__3 = function(this_sym50491, k, not_found) {
    var this__50492 = this;
    var this_sym50491__50495 = this;
    var node__50496 = this_sym50491__50495;
    return node__50496.cljs$core$ILookup$_lookup$arity$3(node__50496, k, not_found)
  };
  G__50537 = function(this_sym50491, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50537__2.call(this, this_sym50491, k);
      case 3:
        return G__50537__3.call(this, this_sym50491, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__50537
}();
cljs.core.BlackNode.prototype.apply = function(this_sym50482, args50483) {
  var this__50497 = this;
  return this_sym50482.call.apply(this_sym50482, [this_sym50482].concat(args50483.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__50498 = this;
  return cljs.core.PersistentVector.fromArray([this__50498.key, this__50498.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__50499 = this;
  return this__50499.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__50500 = this;
  return this__50500.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__50501 = this;
  var node__50502 = this;
  return ins.balance_right(node__50502)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__50503 = this;
  var node__50504 = this;
  return new cljs.core.RedNode(this__50503.key, this__50503.val, this__50503.left, this__50503.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__50505 = this;
  var node__50506 = this;
  return cljs.core.balance_right_del.call(null, this__50505.key, this__50505.val, this__50505.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__50507 = this;
  var node__50508 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__50509 = this;
  var node__50510 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__50510, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__50511 = this;
  var node__50512 = this;
  return cljs.core.balance_left_del.call(null, this__50511.key, this__50511.val, del, this__50511.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__50513 = this;
  var node__50514 = this;
  return ins.balance_left(node__50514)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__50515 = this;
  var node__50516 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__50516, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__50538 = null;
  var G__50538__0 = function() {
    var this__50517 = this;
    var this__50519 = this;
    return cljs.core.pr_str.call(null, this__50519)
  };
  G__50538 = function() {
    switch(arguments.length) {
      case 0:
        return G__50538__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__50538
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__50520 = this;
  var node__50521 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__50521, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__50522 = this;
  var node__50523 = this;
  return node__50523
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__50524 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__50525 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__50526 = this;
  return cljs.core.list.call(null, this__50526.key, this__50526.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__50527 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__50528 = this;
  return this__50528.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__50529 = this;
  return cljs.core.PersistentVector.fromArray([this__50529.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__50530 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__50530.key, this__50530.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__50531 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__50532 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__50532.key, this__50532.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__50533 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__50534 = this;
  if(n === 0) {
    return this__50534.key
  }else {
    if(n === 1) {
      return this__50534.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__50535 = this;
  if(n === 0) {
    return this__50535.key
  }else {
    if(n === 1) {
      return this__50535.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__50536 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__50541 = this;
  var h__2192__auto____50542 = this__50541.__hash;
  if(!(h__2192__auto____50542 == null)) {
    return h__2192__auto____50542
  }else {
    var h__2192__auto____50543 = cljs.core.hash_coll.call(null, coll);
    this__50541.__hash = h__2192__auto____50543;
    return h__2192__auto____50543
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__50544 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__50545 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__50546 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__50546.key, this__50546.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__50594 = null;
  var G__50594__2 = function(this_sym50547, k) {
    var this__50549 = this;
    var this_sym50547__50550 = this;
    var node__50551 = this_sym50547__50550;
    return node__50551.cljs$core$ILookup$_lookup$arity$2(node__50551, k)
  };
  var G__50594__3 = function(this_sym50548, k, not_found) {
    var this__50549 = this;
    var this_sym50548__50552 = this;
    var node__50553 = this_sym50548__50552;
    return node__50553.cljs$core$ILookup$_lookup$arity$3(node__50553, k, not_found)
  };
  G__50594 = function(this_sym50548, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50594__2.call(this, this_sym50548, k);
      case 3:
        return G__50594__3.call(this, this_sym50548, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__50594
}();
cljs.core.RedNode.prototype.apply = function(this_sym50539, args50540) {
  var this__50554 = this;
  return this_sym50539.call.apply(this_sym50539, [this_sym50539].concat(args50540.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__50555 = this;
  return cljs.core.PersistentVector.fromArray([this__50555.key, this__50555.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__50556 = this;
  return this__50556.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__50557 = this;
  return this__50557.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__50558 = this;
  var node__50559 = this;
  return new cljs.core.RedNode(this__50558.key, this__50558.val, this__50558.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__50560 = this;
  var node__50561 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__50562 = this;
  var node__50563 = this;
  return new cljs.core.RedNode(this__50562.key, this__50562.val, this__50562.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__50564 = this;
  var node__50565 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__50566 = this;
  var node__50567 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__50567, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__50568 = this;
  var node__50569 = this;
  return new cljs.core.RedNode(this__50568.key, this__50568.val, del, this__50568.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__50570 = this;
  var node__50571 = this;
  return new cljs.core.RedNode(this__50570.key, this__50570.val, ins, this__50570.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__50572 = this;
  var node__50573 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__50572.left)) {
    return new cljs.core.RedNode(this__50572.key, this__50572.val, this__50572.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__50572.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__50572.right)) {
      return new cljs.core.RedNode(this__50572.right.key, this__50572.right.val, new cljs.core.BlackNode(this__50572.key, this__50572.val, this__50572.left, this__50572.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__50572.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__50573, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__50595 = null;
  var G__50595__0 = function() {
    var this__50574 = this;
    var this__50576 = this;
    return cljs.core.pr_str.call(null, this__50576)
  };
  G__50595 = function() {
    switch(arguments.length) {
      case 0:
        return G__50595__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__50595
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__50577 = this;
  var node__50578 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__50577.right)) {
    return new cljs.core.RedNode(this__50577.key, this__50577.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__50577.left, null), this__50577.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__50577.left)) {
      return new cljs.core.RedNode(this__50577.left.key, this__50577.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__50577.left.left, null), new cljs.core.BlackNode(this__50577.key, this__50577.val, this__50577.left.right, this__50577.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__50578, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__50579 = this;
  var node__50580 = this;
  return new cljs.core.BlackNode(this__50579.key, this__50579.val, this__50579.left, this__50579.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__50581 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__50582 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__50583 = this;
  return cljs.core.list.call(null, this__50583.key, this__50583.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__50584 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__50585 = this;
  return this__50585.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__50586 = this;
  return cljs.core.PersistentVector.fromArray([this__50586.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__50587 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__50587.key, this__50587.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__50588 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__50589 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__50589.key, this__50589.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__50590 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__50591 = this;
  if(n === 0) {
    return this__50591.key
  }else {
    if(n === 1) {
      return this__50591.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__50592 = this;
  if(n === 0) {
    return this__50592.key
  }else {
    if(n === 1) {
      return this__50592.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__50593 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__50599 = comp.call(null, k, tree.key);
    if(c__50599 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__50599 < 0) {
        var ins__50600 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__50600 == null)) {
          return tree.add_left(ins__50600)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__50601 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__50601 == null)) {
            return tree.add_right(ins__50601)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__50604 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__50604)) {
            return new cljs.core.RedNode(app__50604.key, app__50604.val, new cljs.core.RedNode(left.key, left.val, left.left, app__50604.left, null), new cljs.core.RedNode(right.key, right.val, app__50604.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__50604, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__50605 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__50605)) {
              return new cljs.core.RedNode(app__50605.key, app__50605.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__50605.left, null), new cljs.core.BlackNode(right.key, right.val, app__50605.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__50605, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__50611 = comp.call(null, k, tree.key);
    if(c__50611 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__50611 < 0) {
        var del__50612 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____50613 = !(del__50612 == null);
          if(or__3824__auto____50613) {
            return or__3824__auto____50613
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__50612, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__50612, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__50614 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____50615 = !(del__50614 == null);
            if(or__3824__auto____50615) {
              return or__3824__auto____50615
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__50614)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__50614, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__50618 = tree.key;
  var c__50619 = comp.call(null, k, tk__50618);
  if(c__50619 === 0) {
    return tree.replace(tk__50618, v, tree.left, tree.right)
  }else {
    if(c__50619 < 0) {
      return tree.replace(tk__50618, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__50618, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__50622 = this;
  var h__2192__auto____50623 = this__50622.__hash;
  if(!(h__2192__auto____50623 == null)) {
    return h__2192__auto____50623
  }else {
    var h__2192__auto____50624 = cljs.core.hash_imap.call(null, coll);
    this__50622.__hash = h__2192__auto____50624;
    return h__2192__auto____50624
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__50625 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__50626 = this;
  var n__50627 = coll.entry_at(k);
  if(!(n__50627 == null)) {
    return n__50627.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__50628 = this;
  var found__50629 = [null];
  var t__50630 = cljs.core.tree_map_add.call(null, this__50628.comp, this__50628.tree, k, v, found__50629);
  if(t__50630 == null) {
    var found_node__50631 = cljs.core.nth.call(null, found__50629, 0);
    if(cljs.core._EQ_.call(null, v, found_node__50631.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__50628.comp, cljs.core.tree_map_replace.call(null, this__50628.comp, this__50628.tree, k, v), this__50628.cnt, this__50628.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__50628.comp, t__50630.blacken(), this__50628.cnt + 1, this__50628.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__50632 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__50666 = null;
  var G__50666__2 = function(this_sym50633, k) {
    var this__50635 = this;
    var this_sym50633__50636 = this;
    var coll__50637 = this_sym50633__50636;
    return coll__50637.cljs$core$ILookup$_lookup$arity$2(coll__50637, k)
  };
  var G__50666__3 = function(this_sym50634, k, not_found) {
    var this__50635 = this;
    var this_sym50634__50638 = this;
    var coll__50639 = this_sym50634__50638;
    return coll__50639.cljs$core$ILookup$_lookup$arity$3(coll__50639, k, not_found)
  };
  G__50666 = function(this_sym50634, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50666__2.call(this, this_sym50634, k);
      case 3:
        return G__50666__3.call(this, this_sym50634, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__50666
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym50620, args50621) {
  var this__50640 = this;
  return this_sym50620.call.apply(this_sym50620, [this_sym50620].concat(args50621.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__50641 = this;
  if(!(this__50641.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__50641.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__50642 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__50643 = this;
  if(this__50643.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__50643.tree, false, this__50643.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__50644 = this;
  var this__50645 = this;
  return cljs.core.pr_str.call(null, this__50645)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__50646 = this;
  var coll__50647 = this;
  var t__50648 = this__50646.tree;
  while(true) {
    if(!(t__50648 == null)) {
      var c__50649 = this__50646.comp.call(null, k, t__50648.key);
      if(c__50649 === 0) {
        return t__50648
      }else {
        if(c__50649 < 0) {
          var G__50667 = t__50648.left;
          t__50648 = G__50667;
          continue
        }else {
          if("\ufdd0'else") {
            var G__50668 = t__50648.right;
            t__50648 = G__50668;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__50650 = this;
  if(this__50650.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__50650.tree, ascending_QMARK_, this__50650.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__50651 = this;
  if(this__50651.cnt > 0) {
    var stack__50652 = null;
    var t__50653 = this__50651.tree;
    while(true) {
      if(!(t__50653 == null)) {
        var c__50654 = this__50651.comp.call(null, k, t__50653.key);
        if(c__50654 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__50652, t__50653), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__50654 < 0) {
              var G__50669 = cljs.core.conj.call(null, stack__50652, t__50653);
              var G__50670 = t__50653.left;
              stack__50652 = G__50669;
              t__50653 = G__50670;
              continue
            }else {
              var G__50671 = stack__50652;
              var G__50672 = t__50653.right;
              stack__50652 = G__50671;
              t__50653 = G__50672;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__50654 > 0) {
                var G__50673 = cljs.core.conj.call(null, stack__50652, t__50653);
                var G__50674 = t__50653.right;
                stack__50652 = G__50673;
                t__50653 = G__50674;
                continue
              }else {
                var G__50675 = stack__50652;
                var G__50676 = t__50653.left;
                stack__50652 = G__50675;
                t__50653 = G__50676;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__50652 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__50652, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__50655 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__50656 = this;
  return this__50656.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__50657 = this;
  if(this__50657.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__50657.tree, true, this__50657.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__50658 = this;
  return this__50658.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__50659 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__50660 = this;
  return new cljs.core.PersistentTreeMap(this__50660.comp, this__50660.tree, this__50660.cnt, meta, this__50660.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__50661 = this;
  return this__50661.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__50662 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__50662.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__50663 = this;
  var found__50664 = [null];
  var t__50665 = cljs.core.tree_map_remove.call(null, this__50663.comp, this__50663.tree, k, found__50664);
  if(t__50665 == null) {
    if(cljs.core.nth.call(null, found__50664, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__50663.comp, null, 0, this__50663.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__50663.comp, t__50665.blacken(), this__50663.cnt - 1, this__50663.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__50679 = cljs.core.seq.call(null, keyvals);
    var out__50680 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__50679) {
        var G__50681 = cljs.core.nnext.call(null, in__50679);
        var G__50682 = cljs.core.assoc_BANG_.call(null, out__50680, cljs.core.first.call(null, in__50679), cljs.core.second.call(null, in__50679));
        in__50679 = G__50681;
        out__50680 = G__50682;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__50680)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__50683) {
    var keyvals = cljs.core.seq(arglist__50683);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__50684) {
    var keyvals = cljs.core.seq(arglist__50684);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__50688 = [];
    var obj__50689 = {};
    var kvs__50690 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__50690) {
        ks__50688.push(cljs.core.first.call(null, kvs__50690));
        obj__50689[cljs.core.first.call(null, kvs__50690)] = cljs.core.second.call(null, kvs__50690);
        var G__50691 = cljs.core.nnext.call(null, kvs__50690);
        kvs__50690 = G__50691;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__50688, obj__50689)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__50692) {
    var keyvals = cljs.core.seq(arglist__50692);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__50695 = cljs.core.seq.call(null, keyvals);
    var out__50696 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__50695) {
        var G__50697 = cljs.core.nnext.call(null, in__50695);
        var G__50698 = cljs.core.assoc.call(null, out__50696, cljs.core.first.call(null, in__50695), cljs.core.second.call(null, in__50695));
        in__50695 = G__50697;
        out__50696 = G__50698;
        continue
      }else {
        return out__50696
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__50699) {
    var keyvals = cljs.core.seq(arglist__50699);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__50702 = cljs.core.seq.call(null, keyvals);
    var out__50703 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__50702) {
        var G__50704 = cljs.core.nnext.call(null, in__50702);
        var G__50705 = cljs.core.assoc.call(null, out__50703, cljs.core.first.call(null, in__50702), cljs.core.second.call(null, in__50702));
        in__50702 = G__50704;
        out__50703 = G__50705;
        continue
      }else {
        return out__50703
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__50706) {
    var comparator = cljs.core.first(arglist__50706);
    var keyvals = cljs.core.rest(arglist__50706);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__50707_SHARP_, p2__50708_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____50710 = p1__50707_SHARP_;
          if(cljs.core.truth_(or__3824__auto____50710)) {
            return or__3824__auto____50710
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__50708_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__50711) {
    var maps = cljs.core.seq(arglist__50711);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__50719 = function(m, e) {
        var k__50717 = cljs.core.first.call(null, e);
        var v__50718 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__50717)) {
          return cljs.core.assoc.call(null, m, k__50717, f.call(null, cljs.core._lookup.call(null, m, k__50717, null), v__50718))
        }else {
          return cljs.core.assoc.call(null, m, k__50717, v__50718)
        }
      };
      var merge2__50721 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__50719, function() {
          var or__3824__auto____50720 = m1;
          if(cljs.core.truth_(or__3824__auto____50720)) {
            return or__3824__auto____50720
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__50721, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__50722) {
    var f = cljs.core.first(arglist__50722);
    var maps = cljs.core.rest(arglist__50722);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__50727 = cljs.core.ObjMap.EMPTY;
  var keys__50728 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__50728) {
      var key__50729 = cljs.core.first.call(null, keys__50728);
      var entry__50730 = cljs.core._lookup.call(null, map, key__50729, "\ufdd0'cljs.core/not-found");
      var G__50731 = cljs.core.not_EQ_.call(null, entry__50730, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__50727, key__50729, entry__50730) : ret__50727;
      var G__50732 = cljs.core.next.call(null, keys__50728);
      ret__50727 = G__50731;
      keys__50728 = G__50732;
      continue
    }else {
      return ret__50727
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__50736 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__50736.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__50737 = this;
  var h__2192__auto____50738 = this__50737.__hash;
  if(!(h__2192__auto____50738 == null)) {
    return h__2192__auto____50738
  }else {
    var h__2192__auto____50739 = cljs.core.hash_iset.call(null, coll);
    this__50737.__hash = h__2192__auto____50739;
    return h__2192__auto____50739
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__50740 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__50741 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__50741.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__50762 = null;
  var G__50762__2 = function(this_sym50742, k) {
    var this__50744 = this;
    var this_sym50742__50745 = this;
    var coll__50746 = this_sym50742__50745;
    return coll__50746.cljs$core$ILookup$_lookup$arity$2(coll__50746, k)
  };
  var G__50762__3 = function(this_sym50743, k, not_found) {
    var this__50744 = this;
    var this_sym50743__50747 = this;
    var coll__50748 = this_sym50743__50747;
    return coll__50748.cljs$core$ILookup$_lookup$arity$3(coll__50748, k, not_found)
  };
  G__50762 = function(this_sym50743, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50762__2.call(this, this_sym50743, k);
      case 3:
        return G__50762__3.call(this, this_sym50743, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__50762
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym50734, args50735) {
  var this__50749 = this;
  return this_sym50734.call.apply(this_sym50734, [this_sym50734].concat(args50735.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__50750 = this;
  return new cljs.core.PersistentHashSet(this__50750.meta, cljs.core.assoc.call(null, this__50750.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__50751 = this;
  var this__50752 = this;
  return cljs.core.pr_str.call(null, this__50752)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__50753 = this;
  return cljs.core.keys.call(null, this__50753.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__50754 = this;
  return new cljs.core.PersistentHashSet(this__50754.meta, cljs.core.dissoc.call(null, this__50754.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__50755 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__50756 = this;
  var and__3822__auto____50757 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____50757) {
    var and__3822__auto____50758 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____50758) {
      return cljs.core.every_QMARK_.call(null, function(p1__50733_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__50733_SHARP_)
      }, other)
    }else {
      return and__3822__auto____50758
    }
  }else {
    return and__3822__auto____50757
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__50759 = this;
  return new cljs.core.PersistentHashSet(meta, this__50759.hash_map, this__50759.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__50760 = this;
  return this__50760.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__50761 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__50761.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__50763 = cljs.core.count.call(null, items);
  var i__50764 = 0;
  var out__50765 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__50764 < len__50763) {
      var G__50766 = i__50764 + 1;
      var G__50767 = cljs.core.conj_BANG_.call(null, out__50765, items[i__50764]);
      i__50764 = G__50766;
      out__50765 = G__50767;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__50765)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__50785 = null;
  var G__50785__2 = function(this_sym50771, k) {
    var this__50773 = this;
    var this_sym50771__50774 = this;
    var tcoll__50775 = this_sym50771__50774;
    if(cljs.core._lookup.call(null, this__50773.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__50785__3 = function(this_sym50772, k, not_found) {
    var this__50773 = this;
    var this_sym50772__50776 = this;
    var tcoll__50777 = this_sym50772__50776;
    if(cljs.core._lookup.call(null, this__50773.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__50785 = function(this_sym50772, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50785__2.call(this, this_sym50772, k);
      case 3:
        return G__50785__3.call(this, this_sym50772, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__50785
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym50769, args50770) {
  var this__50778 = this;
  return this_sym50769.call.apply(this_sym50769, [this_sym50769].concat(args50770.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__50779 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__50780 = this;
  if(cljs.core._lookup.call(null, this__50780.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__50781 = this;
  return cljs.core.count.call(null, this__50781.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__50782 = this;
  this__50782.transient_map = cljs.core.dissoc_BANG_.call(null, this__50782.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__50783 = this;
  this__50783.transient_map = cljs.core.assoc_BANG_.call(null, this__50783.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__50784 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__50784.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__50788 = this;
  var h__2192__auto____50789 = this__50788.__hash;
  if(!(h__2192__auto____50789 == null)) {
    return h__2192__auto____50789
  }else {
    var h__2192__auto____50790 = cljs.core.hash_iset.call(null, coll);
    this__50788.__hash = h__2192__auto____50790;
    return h__2192__auto____50790
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__50791 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__50792 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__50792.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__50818 = null;
  var G__50818__2 = function(this_sym50793, k) {
    var this__50795 = this;
    var this_sym50793__50796 = this;
    var coll__50797 = this_sym50793__50796;
    return coll__50797.cljs$core$ILookup$_lookup$arity$2(coll__50797, k)
  };
  var G__50818__3 = function(this_sym50794, k, not_found) {
    var this__50795 = this;
    var this_sym50794__50798 = this;
    var coll__50799 = this_sym50794__50798;
    return coll__50799.cljs$core$ILookup$_lookup$arity$3(coll__50799, k, not_found)
  };
  G__50818 = function(this_sym50794, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50818__2.call(this, this_sym50794, k);
      case 3:
        return G__50818__3.call(this, this_sym50794, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__50818
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym50786, args50787) {
  var this__50800 = this;
  return this_sym50786.call.apply(this_sym50786, [this_sym50786].concat(args50787.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__50801 = this;
  return new cljs.core.PersistentTreeSet(this__50801.meta, cljs.core.assoc.call(null, this__50801.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__50802 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__50802.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__50803 = this;
  var this__50804 = this;
  return cljs.core.pr_str.call(null, this__50804)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__50805 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__50805.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__50806 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__50806.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__50807 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__50808 = this;
  return cljs.core._comparator.call(null, this__50808.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__50809 = this;
  return cljs.core.keys.call(null, this__50809.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__50810 = this;
  return new cljs.core.PersistentTreeSet(this__50810.meta, cljs.core.dissoc.call(null, this__50810.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__50811 = this;
  return cljs.core.count.call(null, this__50811.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__50812 = this;
  var and__3822__auto____50813 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____50813) {
    var and__3822__auto____50814 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____50814) {
      return cljs.core.every_QMARK_.call(null, function(p1__50768_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__50768_SHARP_)
      }, other)
    }else {
      return and__3822__auto____50814
    }
  }else {
    return and__3822__auto____50813
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__50815 = this;
  return new cljs.core.PersistentTreeSet(meta, this__50815.tree_map, this__50815.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__50816 = this;
  return this__50816.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__50817 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__50817.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__50823__delegate = function(keys) {
      var in__50821 = cljs.core.seq.call(null, keys);
      var out__50822 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__50821)) {
          var G__50824 = cljs.core.next.call(null, in__50821);
          var G__50825 = cljs.core.conj_BANG_.call(null, out__50822, cljs.core.first.call(null, in__50821));
          in__50821 = G__50824;
          out__50822 = G__50825;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__50822)
        }
        break
      }
    };
    var G__50823 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__50823__delegate.call(this, keys)
    };
    G__50823.cljs$lang$maxFixedArity = 0;
    G__50823.cljs$lang$applyTo = function(arglist__50826) {
      var keys = cljs.core.seq(arglist__50826);
      return G__50823__delegate(keys)
    };
    G__50823.cljs$lang$arity$variadic = G__50823__delegate;
    return G__50823
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__50827) {
    var keys = cljs.core.seq(arglist__50827);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__50829) {
    var comparator = cljs.core.first(arglist__50829);
    var keys = cljs.core.rest(arglist__50829);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__50835 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____50836 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____50836)) {
        var e__50837 = temp__3971__auto____50836;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__50837))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__50835, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__50828_SHARP_) {
      var temp__3971__auto____50838 = cljs.core.find.call(null, smap, p1__50828_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____50838)) {
        var e__50839 = temp__3971__auto____50838;
        return cljs.core.second.call(null, e__50839)
      }else {
        return p1__50828_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__50869 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__50862, seen) {
        while(true) {
          var vec__50863__50864 = p__50862;
          var f__50865 = cljs.core.nth.call(null, vec__50863__50864, 0, null);
          var xs__50866 = vec__50863__50864;
          var temp__3974__auto____50867 = cljs.core.seq.call(null, xs__50866);
          if(temp__3974__auto____50867) {
            var s__50868 = temp__3974__auto____50867;
            if(cljs.core.contains_QMARK_.call(null, seen, f__50865)) {
              var G__50870 = cljs.core.rest.call(null, s__50868);
              var G__50871 = seen;
              p__50862 = G__50870;
              seen = G__50871;
              continue
            }else {
              return cljs.core.cons.call(null, f__50865, step.call(null, cljs.core.rest.call(null, s__50868), cljs.core.conj.call(null, seen, f__50865)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__50869.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__50874 = cljs.core.PersistentVector.EMPTY;
  var s__50875 = s;
  while(true) {
    if(cljs.core.next.call(null, s__50875)) {
      var G__50876 = cljs.core.conj.call(null, ret__50874, cljs.core.first.call(null, s__50875));
      var G__50877 = cljs.core.next.call(null, s__50875);
      ret__50874 = G__50876;
      s__50875 = G__50877;
      continue
    }else {
      return cljs.core.seq.call(null, ret__50874)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____50880 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____50880) {
        return or__3824__auto____50880
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__50881 = x.lastIndexOf("/");
      if(i__50881 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__50881 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____50884 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____50884) {
      return or__3824__auto____50884
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__50885 = x.lastIndexOf("/");
    if(i__50885 > -1) {
      return cljs.core.subs.call(null, x, 2, i__50885)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__50892 = cljs.core.ObjMap.EMPTY;
  var ks__50893 = cljs.core.seq.call(null, keys);
  var vs__50894 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____50895 = ks__50893;
      if(and__3822__auto____50895) {
        return vs__50894
      }else {
        return and__3822__auto____50895
      }
    }()) {
      var G__50896 = cljs.core.assoc.call(null, map__50892, cljs.core.first.call(null, ks__50893), cljs.core.first.call(null, vs__50894));
      var G__50897 = cljs.core.next.call(null, ks__50893);
      var G__50898 = cljs.core.next.call(null, vs__50894);
      map__50892 = G__50896;
      ks__50893 = G__50897;
      vs__50894 = G__50898;
      continue
    }else {
      return map__50892
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__50901__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__50886_SHARP_, p2__50887_SHARP_) {
        return max_key.call(null, k, p1__50886_SHARP_, p2__50887_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__50901 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__50901__delegate.call(this, k, x, y, more)
    };
    G__50901.cljs$lang$maxFixedArity = 3;
    G__50901.cljs$lang$applyTo = function(arglist__50902) {
      var k = cljs.core.first(arglist__50902);
      var x = cljs.core.first(cljs.core.next(arglist__50902));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__50902)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__50902)));
      return G__50901__delegate(k, x, y, more)
    };
    G__50901.cljs$lang$arity$variadic = G__50901__delegate;
    return G__50901
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__50903__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__50899_SHARP_, p2__50900_SHARP_) {
        return min_key.call(null, k, p1__50899_SHARP_, p2__50900_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__50903 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__50903__delegate.call(this, k, x, y, more)
    };
    G__50903.cljs$lang$maxFixedArity = 3;
    G__50903.cljs$lang$applyTo = function(arglist__50904) {
      var k = cljs.core.first(arglist__50904);
      var x = cljs.core.first(cljs.core.next(arglist__50904));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__50904)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__50904)));
      return G__50903__delegate(k, x, y, more)
    };
    G__50903.cljs$lang$arity$variadic = G__50903__delegate;
    return G__50903
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____50907 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____50907) {
        var s__50908 = temp__3974__auto____50907;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__50908), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__50908)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____50911 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____50911) {
      var s__50912 = temp__3974__auto____50911;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__50912)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__50912), take_while.call(null, pred, cljs.core.rest.call(null, s__50912)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__50914 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__50914.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__50926 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____50927 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____50927)) {
        var vec__50928__50929 = temp__3974__auto____50927;
        var e__50930 = cljs.core.nth.call(null, vec__50928__50929, 0, null);
        var s__50931 = vec__50928__50929;
        if(cljs.core.truth_(include__50926.call(null, e__50930))) {
          return s__50931
        }else {
          return cljs.core.next.call(null, s__50931)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__50926, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____50932 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____50932)) {
      var vec__50933__50934 = temp__3974__auto____50932;
      var e__50935 = cljs.core.nth.call(null, vec__50933__50934, 0, null);
      var s__50936 = vec__50933__50934;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__50935)) ? s__50936 : cljs.core.next.call(null, s__50936))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__50948 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____50949 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____50949)) {
        var vec__50950__50951 = temp__3974__auto____50949;
        var e__50952 = cljs.core.nth.call(null, vec__50950__50951, 0, null);
        var s__50953 = vec__50950__50951;
        if(cljs.core.truth_(include__50948.call(null, e__50952))) {
          return s__50953
        }else {
          return cljs.core.next.call(null, s__50953)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__50948, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____50954 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____50954)) {
      var vec__50955__50956 = temp__3974__auto____50954;
      var e__50957 = cljs.core.nth.call(null, vec__50955__50956, 0, null);
      var s__50958 = vec__50955__50956;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__50957)) ? s__50958 : cljs.core.next.call(null, s__50958))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__50959 = this;
  var h__2192__auto____50960 = this__50959.__hash;
  if(!(h__2192__auto____50960 == null)) {
    return h__2192__auto____50960
  }else {
    var h__2192__auto____50961 = cljs.core.hash_coll.call(null, rng);
    this__50959.__hash = h__2192__auto____50961;
    return h__2192__auto____50961
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__50962 = this;
  if(this__50962.step > 0) {
    if(this__50962.start + this__50962.step < this__50962.end) {
      return new cljs.core.Range(this__50962.meta, this__50962.start + this__50962.step, this__50962.end, this__50962.step, null)
    }else {
      return null
    }
  }else {
    if(this__50962.start + this__50962.step > this__50962.end) {
      return new cljs.core.Range(this__50962.meta, this__50962.start + this__50962.step, this__50962.end, this__50962.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__50963 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__50964 = this;
  var this__50965 = this;
  return cljs.core.pr_str.call(null, this__50965)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__50966 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__50967 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__50968 = this;
  if(this__50968.step > 0) {
    if(this__50968.start < this__50968.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__50968.start > this__50968.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__50969 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__50969.end - this__50969.start) / this__50969.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__50970 = this;
  return this__50970.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__50971 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__50971.meta, this__50971.start + this__50971.step, this__50971.end, this__50971.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__50972 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__50973 = this;
  return new cljs.core.Range(meta, this__50973.start, this__50973.end, this__50973.step, this__50973.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__50974 = this;
  return this__50974.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__50975 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__50975.start + n * this__50975.step
  }else {
    if(function() {
      var and__3822__auto____50976 = this__50975.start > this__50975.end;
      if(and__3822__auto____50976) {
        return this__50975.step === 0
      }else {
        return and__3822__auto____50976
      }
    }()) {
      return this__50975.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__50977 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__50977.start + n * this__50977.step
  }else {
    if(function() {
      var and__3822__auto____50978 = this__50977.start > this__50977.end;
      if(and__3822__auto____50978) {
        return this__50977.step === 0
      }else {
        return and__3822__auto____50978
      }
    }()) {
      return this__50977.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__50979 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__50979.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____50982 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____50982) {
      var s__50983 = temp__3974__auto____50982;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__50983), take_nth.call(null, n, cljs.core.drop.call(null, n, s__50983)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____50990 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____50990) {
      var s__50991 = temp__3974__auto____50990;
      var fst__50992 = cljs.core.first.call(null, s__50991);
      var fv__50993 = f.call(null, fst__50992);
      var run__50994 = cljs.core.cons.call(null, fst__50992, cljs.core.take_while.call(null, function(p1__50984_SHARP_) {
        return cljs.core._EQ_.call(null, fv__50993, f.call(null, p1__50984_SHARP_))
      }, cljs.core.next.call(null, s__50991)));
      return cljs.core.cons.call(null, run__50994, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__50994), s__50991))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____51009 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____51009) {
        var s__51010 = temp__3971__auto____51009;
        return reductions.call(null, f, cljs.core.first.call(null, s__51010), cljs.core.rest.call(null, s__51010))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____51011 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____51011) {
        var s__51012 = temp__3974__auto____51011;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__51012)), cljs.core.rest.call(null, s__51012))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__51015 = null;
      var G__51015__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__51015__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__51015__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__51015__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__51015__4 = function() {
        var G__51016__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__51016 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__51016__delegate.call(this, x, y, z, args)
        };
        G__51016.cljs$lang$maxFixedArity = 3;
        G__51016.cljs$lang$applyTo = function(arglist__51017) {
          var x = cljs.core.first(arglist__51017);
          var y = cljs.core.first(cljs.core.next(arglist__51017));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__51017)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__51017)));
          return G__51016__delegate(x, y, z, args)
        };
        G__51016.cljs$lang$arity$variadic = G__51016__delegate;
        return G__51016
      }();
      G__51015 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__51015__0.call(this);
          case 1:
            return G__51015__1.call(this, x);
          case 2:
            return G__51015__2.call(this, x, y);
          case 3:
            return G__51015__3.call(this, x, y, z);
          default:
            return G__51015__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__51015.cljs$lang$maxFixedArity = 3;
      G__51015.cljs$lang$applyTo = G__51015__4.cljs$lang$applyTo;
      return G__51015
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__51018 = null;
      var G__51018__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__51018__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__51018__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__51018__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__51018__4 = function() {
        var G__51019__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__51019 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__51019__delegate.call(this, x, y, z, args)
        };
        G__51019.cljs$lang$maxFixedArity = 3;
        G__51019.cljs$lang$applyTo = function(arglist__51020) {
          var x = cljs.core.first(arglist__51020);
          var y = cljs.core.first(cljs.core.next(arglist__51020));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__51020)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__51020)));
          return G__51019__delegate(x, y, z, args)
        };
        G__51019.cljs$lang$arity$variadic = G__51019__delegate;
        return G__51019
      }();
      G__51018 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__51018__0.call(this);
          case 1:
            return G__51018__1.call(this, x);
          case 2:
            return G__51018__2.call(this, x, y);
          case 3:
            return G__51018__3.call(this, x, y, z);
          default:
            return G__51018__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__51018.cljs$lang$maxFixedArity = 3;
      G__51018.cljs$lang$applyTo = G__51018__4.cljs$lang$applyTo;
      return G__51018
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__51021 = null;
      var G__51021__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__51021__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__51021__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__51021__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__51021__4 = function() {
        var G__51022__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__51022 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__51022__delegate.call(this, x, y, z, args)
        };
        G__51022.cljs$lang$maxFixedArity = 3;
        G__51022.cljs$lang$applyTo = function(arglist__51023) {
          var x = cljs.core.first(arglist__51023);
          var y = cljs.core.first(cljs.core.next(arglist__51023));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__51023)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__51023)));
          return G__51022__delegate(x, y, z, args)
        };
        G__51022.cljs$lang$arity$variadic = G__51022__delegate;
        return G__51022
      }();
      G__51021 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__51021__0.call(this);
          case 1:
            return G__51021__1.call(this, x);
          case 2:
            return G__51021__2.call(this, x, y);
          case 3:
            return G__51021__3.call(this, x, y, z);
          default:
            return G__51021__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__51021.cljs$lang$maxFixedArity = 3;
      G__51021.cljs$lang$applyTo = G__51021__4.cljs$lang$applyTo;
      return G__51021
    }()
  };
  var juxt__4 = function() {
    var G__51024__delegate = function(f, g, h, fs) {
      var fs__51014 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__51025 = null;
        var G__51025__0 = function() {
          return cljs.core.reduce.call(null, function(p1__50995_SHARP_, p2__50996_SHARP_) {
            return cljs.core.conj.call(null, p1__50995_SHARP_, p2__50996_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__51014)
        };
        var G__51025__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__50997_SHARP_, p2__50998_SHARP_) {
            return cljs.core.conj.call(null, p1__50997_SHARP_, p2__50998_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__51014)
        };
        var G__51025__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__50999_SHARP_, p2__51000_SHARP_) {
            return cljs.core.conj.call(null, p1__50999_SHARP_, p2__51000_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__51014)
        };
        var G__51025__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__51001_SHARP_, p2__51002_SHARP_) {
            return cljs.core.conj.call(null, p1__51001_SHARP_, p2__51002_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__51014)
        };
        var G__51025__4 = function() {
          var G__51026__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__51003_SHARP_, p2__51004_SHARP_) {
              return cljs.core.conj.call(null, p1__51003_SHARP_, cljs.core.apply.call(null, p2__51004_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__51014)
          };
          var G__51026 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__51026__delegate.call(this, x, y, z, args)
          };
          G__51026.cljs$lang$maxFixedArity = 3;
          G__51026.cljs$lang$applyTo = function(arglist__51027) {
            var x = cljs.core.first(arglist__51027);
            var y = cljs.core.first(cljs.core.next(arglist__51027));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__51027)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__51027)));
            return G__51026__delegate(x, y, z, args)
          };
          G__51026.cljs$lang$arity$variadic = G__51026__delegate;
          return G__51026
        }();
        G__51025 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__51025__0.call(this);
            case 1:
              return G__51025__1.call(this, x);
            case 2:
              return G__51025__2.call(this, x, y);
            case 3:
              return G__51025__3.call(this, x, y, z);
            default:
              return G__51025__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__51025.cljs$lang$maxFixedArity = 3;
        G__51025.cljs$lang$applyTo = G__51025__4.cljs$lang$applyTo;
        return G__51025
      }()
    };
    var G__51024 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__51024__delegate.call(this, f, g, h, fs)
    };
    G__51024.cljs$lang$maxFixedArity = 3;
    G__51024.cljs$lang$applyTo = function(arglist__51028) {
      var f = cljs.core.first(arglist__51028);
      var g = cljs.core.first(cljs.core.next(arglist__51028));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__51028)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__51028)));
      return G__51024__delegate(f, g, h, fs)
    };
    G__51024.cljs$lang$arity$variadic = G__51024__delegate;
    return G__51024
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__51031 = cljs.core.next.call(null, coll);
        coll = G__51031;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____51030 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____51030) {
          return n > 0
        }else {
          return and__3822__auto____51030
        }
      }())) {
        var G__51032 = n - 1;
        var G__51033 = cljs.core.next.call(null, coll);
        n = G__51032;
        coll = G__51033;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__51035 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__51035), s)) {
    if(cljs.core.count.call(null, matches__51035) === 1) {
      return cljs.core.first.call(null, matches__51035)
    }else {
      return cljs.core.vec.call(null, matches__51035)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__51037 = re.exec(s);
  if(matches__51037 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__51037) === 1) {
      return cljs.core.first.call(null, matches__51037)
    }else {
      return cljs.core.vec.call(null, matches__51037)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__51042 = cljs.core.re_find.call(null, re, s);
  var match_idx__51043 = s.search(re);
  var match_str__51044 = cljs.core.coll_QMARK_.call(null, match_data__51042) ? cljs.core.first.call(null, match_data__51042) : match_data__51042;
  var post_match__51045 = cljs.core.subs.call(null, s, match_idx__51043 + cljs.core.count.call(null, match_str__51044));
  if(cljs.core.truth_(match_data__51042)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__51042, re_seq.call(null, re, post_match__51045))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__51052__51053 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___51054 = cljs.core.nth.call(null, vec__51052__51053, 0, null);
  var flags__51055 = cljs.core.nth.call(null, vec__51052__51053, 1, null);
  var pattern__51056 = cljs.core.nth.call(null, vec__51052__51053, 2, null);
  return new RegExp(pattern__51056, flags__51055)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__51046_SHARP_) {
    return print_one.call(null, p1__51046_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____51066 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____51066)) {
            var and__3822__auto____51070 = function() {
              var G__51067__51068 = obj;
              if(G__51067__51068) {
                if(function() {
                  var or__3824__auto____51069 = G__51067__51068.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____51069) {
                    return or__3824__auto____51069
                  }else {
                    return G__51067__51068.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__51067__51068.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__51067__51068)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__51067__51068)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____51070)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____51070
            }
          }else {
            return and__3822__auto____51066
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____51071 = !(obj == null);
          if(and__3822__auto____51071) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____51071
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__51072__51073 = obj;
          if(G__51072__51073) {
            if(function() {
              var or__3824__auto____51074 = G__51072__51073.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____51074) {
                return or__3824__auto____51074
              }else {
                return G__51072__51073.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__51072__51073.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__51072__51073)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__51072__51073)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__51094 = new goog.string.StringBuffer;
  var G__51095__51096 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__51095__51096) {
    var string__51097 = cljs.core.first.call(null, G__51095__51096);
    var G__51095__51098 = G__51095__51096;
    while(true) {
      sb__51094.append(string__51097);
      var temp__3974__auto____51099 = cljs.core.next.call(null, G__51095__51098);
      if(temp__3974__auto____51099) {
        var G__51095__51100 = temp__3974__auto____51099;
        var G__51113 = cljs.core.first.call(null, G__51095__51100);
        var G__51114 = G__51095__51100;
        string__51097 = G__51113;
        G__51095__51098 = G__51114;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__51101__51102 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__51101__51102) {
    var obj__51103 = cljs.core.first.call(null, G__51101__51102);
    var G__51101__51104 = G__51101__51102;
    while(true) {
      sb__51094.append(" ");
      var G__51105__51106 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__51103, opts));
      if(G__51105__51106) {
        var string__51107 = cljs.core.first.call(null, G__51105__51106);
        var G__51105__51108 = G__51105__51106;
        while(true) {
          sb__51094.append(string__51107);
          var temp__3974__auto____51109 = cljs.core.next.call(null, G__51105__51108);
          if(temp__3974__auto____51109) {
            var G__51105__51110 = temp__3974__auto____51109;
            var G__51115 = cljs.core.first.call(null, G__51105__51110);
            var G__51116 = G__51105__51110;
            string__51107 = G__51115;
            G__51105__51108 = G__51116;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____51111 = cljs.core.next.call(null, G__51101__51104);
      if(temp__3974__auto____51111) {
        var G__51101__51112 = temp__3974__auto____51111;
        var G__51117 = cljs.core.first.call(null, G__51101__51112);
        var G__51118 = G__51101__51112;
        obj__51103 = G__51117;
        G__51101__51104 = G__51118;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__51094
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__51120 = cljs.core.pr_sb.call(null, objs, opts);
  sb__51120.append("\n");
  return[cljs.core.str(sb__51120)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__51139__51140 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__51139__51140) {
    var string__51141 = cljs.core.first.call(null, G__51139__51140);
    var G__51139__51142 = G__51139__51140;
    while(true) {
      cljs.core.string_print.call(null, string__51141);
      var temp__3974__auto____51143 = cljs.core.next.call(null, G__51139__51142);
      if(temp__3974__auto____51143) {
        var G__51139__51144 = temp__3974__auto____51143;
        var G__51157 = cljs.core.first.call(null, G__51139__51144);
        var G__51158 = G__51139__51144;
        string__51141 = G__51157;
        G__51139__51142 = G__51158;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__51145__51146 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__51145__51146) {
    var obj__51147 = cljs.core.first.call(null, G__51145__51146);
    var G__51145__51148 = G__51145__51146;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__51149__51150 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__51147, opts));
      if(G__51149__51150) {
        var string__51151 = cljs.core.first.call(null, G__51149__51150);
        var G__51149__51152 = G__51149__51150;
        while(true) {
          cljs.core.string_print.call(null, string__51151);
          var temp__3974__auto____51153 = cljs.core.next.call(null, G__51149__51152);
          if(temp__3974__auto____51153) {
            var G__51149__51154 = temp__3974__auto____51153;
            var G__51159 = cljs.core.first.call(null, G__51149__51154);
            var G__51160 = G__51149__51154;
            string__51151 = G__51159;
            G__51149__51152 = G__51160;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____51155 = cljs.core.next.call(null, G__51145__51148);
      if(temp__3974__auto____51155) {
        var G__51145__51156 = temp__3974__auto____51155;
        var G__51161 = cljs.core.first.call(null, G__51145__51156);
        var G__51162 = G__51145__51156;
        obj__51147 = G__51161;
        G__51145__51148 = G__51162;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__51163) {
    var objs = cljs.core.seq(arglist__51163);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__51164) {
    var objs = cljs.core.seq(arglist__51164);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__51165) {
    var objs = cljs.core.seq(arglist__51165);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__51166) {
    var objs = cljs.core.seq(arglist__51166);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__51167) {
    var objs = cljs.core.seq(arglist__51167);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__51168) {
    var objs = cljs.core.seq(arglist__51168);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__51169) {
    var objs = cljs.core.seq(arglist__51169);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__51170) {
    var objs = cljs.core.seq(arglist__51170);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__51171) {
    var fmt = cljs.core.first(arglist__51171);
    var args = cljs.core.rest(arglist__51171);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__51172 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__51172, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__51173 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__51173, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__51174 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__51174, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____51175 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____51175)) {
        var nspc__51176 = temp__3974__auto____51175;
        return[cljs.core.str(nspc__51176), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____51177 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____51177)) {
          var nspc__51178 = temp__3974__auto____51177;
          return[cljs.core.str(nspc__51178), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__51179 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__51179, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__51181 = function(n, len) {
    var ns__51180 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__51180) < len) {
        var G__51183 = [cljs.core.str("0"), cljs.core.str(ns__51180)].join("");
        ns__51180 = G__51183;
        continue
      }else {
        return ns__51180
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__51181.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__51181.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__51181.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__51181.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__51181.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__51181.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__51182 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__51182, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__51184 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__51185 = this;
  var G__51186__51187 = cljs.core.seq.call(null, this__51185.watches);
  if(G__51186__51187) {
    var G__51189__51191 = cljs.core.first.call(null, G__51186__51187);
    var vec__51190__51192 = G__51189__51191;
    var key__51193 = cljs.core.nth.call(null, vec__51190__51192, 0, null);
    var f__51194 = cljs.core.nth.call(null, vec__51190__51192, 1, null);
    var G__51186__51195 = G__51186__51187;
    var G__51189__51196 = G__51189__51191;
    var G__51186__51197 = G__51186__51195;
    while(true) {
      var vec__51198__51199 = G__51189__51196;
      var key__51200 = cljs.core.nth.call(null, vec__51198__51199, 0, null);
      var f__51201 = cljs.core.nth.call(null, vec__51198__51199, 1, null);
      var G__51186__51202 = G__51186__51197;
      f__51201.call(null, key__51200, this$, oldval, newval);
      var temp__3974__auto____51203 = cljs.core.next.call(null, G__51186__51202);
      if(temp__3974__auto____51203) {
        var G__51186__51204 = temp__3974__auto____51203;
        var G__51211 = cljs.core.first.call(null, G__51186__51204);
        var G__51212 = G__51186__51204;
        G__51189__51196 = G__51211;
        G__51186__51197 = G__51212;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__51205 = this;
  return this$.watches = cljs.core.assoc.call(null, this__51205.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__51206 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__51206.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__51207 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__51207.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__51208 = this;
  return this__51208.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__51209 = this;
  return this__51209.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__51210 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__51224__delegate = function(x, p__51213) {
      var map__51219__51220 = p__51213;
      var map__51219__51221 = cljs.core.seq_QMARK_.call(null, map__51219__51220) ? cljs.core.apply.call(null, cljs.core.hash_map, map__51219__51220) : map__51219__51220;
      var validator__51222 = cljs.core._lookup.call(null, map__51219__51221, "\ufdd0'validator", null);
      var meta__51223 = cljs.core._lookup.call(null, map__51219__51221, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__51223, validator__51222, null)
    };
    var G__51224 = function(x, var_args) {
      var p__51213 = null;
      if(goog.isDef(var_args)) {
        p__51213 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__51224__delegate.call(this, x, p__51213)
    };
    G__51224.cljs$lang$maxFixedArity = 1;
    G__51224.cljs$lang$applyTo = function(arglist__51225) {
      var x = cljs.core.first(arglist__51225);
      var p__51213 = cljs.core.rest(arglist__51225);
      return G__51224__delegate(x, p__51213)
    };
    G__51224.cljs$lang$arity$variadic = G__51224__delegate;
    return G__51224
  }();
  atom = function(x, var_args) {
    var p__51213 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____51229 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____51229)) {
    var validate__51230 = temp__3974__auto____51229;
    if(cljs.core.truth_(validate__51230.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__51231 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__51231, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__51232__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__51232 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__51232__delegate.call(this, a, f, x, y, z, more)
    };
    G__51232.cljs$lang$maxFixedArity = 5;
    G__51232.cljs$lang$applyTo = function(arglist__51233) {
      var a = cljs.core.first(arglist__51233);
      var f = cljs.core.first(cljs.core.next(arglist__51233));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__51233)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__51233))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__51233)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__51233)))));
      return G__51232__delegate(a, f, x, y, z, more)
    };
    G__51232.cljs$lang$arity$variadic = G__51232__delegate;
    return G__51232
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__51234) {
    var iref = cljs.core.first(arglist__51234);
    var f = cljs.core.first(cljs.core.next(arglist__51234));
    var args = cljs.core.rest(cljs.core.next(arglist__51234));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__51235 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__51235.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__51236 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__51236.state, function(p__51237) {
    var map__51238__51239 = p__51237;
    var map__51238__51240 = cljs.core.seq_QMARK_.call(null, map__51238__51239) ? cljs.core.apply.call(null, cljs.core.hash_map, map__51238__51239) : map__51238__51239;
    var curr_state__51241 = map__51238__51240;
    var done__51242 = cljs.core._lookup.call(null, map__51238__51240, "\ufdd0'done", null);
    if(cljs.core.truth_(done__51242)) {
      return curr_state__51241
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__51236.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__51263__51264 = options;
    var map__51263__51265 = cljs.core.seq_QMARK_.call(null, map__51263__51264) ? cljs.core.apply.call(null, cljs.core.hash_map, map__51263__51264) : map__51263__51264;
    var keywordize_keys__51266 = cljs.core._lookup.call(null, map__51263__51265, "\ufdd0'keywordize-keys", null);
    var keyfn__51267 = cljs.core.truth_(keywordize_keys__51266) ? cljs.core.keyword : cljs.core.str;
    var f__51282 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2462__auto____51281 = function iter__51275(s__51276) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__51276__51279 = s__51276;
                    while(true) {
                      if(cljs.core.seq.call(null, s__51276__51279)) {
                        var k__51280 = cljs.core.first.call(null, s__51276__51279);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__51267.call(null, k__51280), thisfn.call(null, x[k__51280])], true), iter__51275.call(null, cljs.core.rest.call(null, s__51276__51279)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2462__auto____51281.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__51282.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__51283) {
    var x = cljs.core.first(arglist__51283);
    var options = cljs.core.rest(arglist__51283);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__51288 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__51292__delegate = function(args) {
      var temp__3971__auto____51289 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__51288), args, null);
      if(cljs.core.truth_(temp__3971__auto____51289)) {
        var v__51290 = temp__3971__auto____51289;
        return v__51290
      }else {
        var ret__51291 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__51288, cljs.core.assoc, args, ret__51291);
        return ret__51291
      }
    };
    var G__51292 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__51292__delegate.call(this, args)
    };
    G__51292.cljs$lang$maxFixedArity = 0;
    G__51292.cljs$lang$applyTo = function(arglist__51293) {
      var args = cljs.core.seq(arglist__51293);
      return G__51292__delegate(args)
    };
    G__51292.cljs$lang$arity$variadic = G__51292__delegate;
    return G__51292
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__51295 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__51295)) {
        var G__51296 = ret__51295;
        f = G__51296;
        continue
      }else {
        return ret__51295
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__51297__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__51297 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__51297__delegate.call(this, f, args)
    };
    G__51297.cljs$lang$maxFixedArity = 1;
    G__51297.cljs$lang$applyTo = function(arglist__51298) {
      var f = cljs.core.first(arglist__51298);
      var args = cljs.core.rest(arglist__51298);
      return G__51297__delegate(f, args)
    };
    G__51297.cljs$lang$arity$variadic = G__51297__delegate;
    return G__51297
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__51300 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__51300, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__51300, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____51309 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____51309) {
      return or__3824__auto____51309
    }else {
      var or__3824__auto____51310 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____51310) {
        return or__3824__auto____51310
      }else {
        var and__3822__auto____51311 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____51311) {
          var and__3822__auto____51312 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____51312) {
            var and__3822__auto____51313 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____51313) {
              var ret__51314 = true;
              var i__51315 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____51316 = cljs.core.not.call(null, ret__51314);
                  if(or__3824__auto____51316) {
                    return or__3824__auto____51316
                  }else {
                    return i__51315 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__51314
                }else {
                  var G__51317 = isa_QMARK_.call(null, h, child.call(null, i__51315), parent.call(null, i__51315));
                  var G__51318 = i__51315 + 1;
                  ret__51314 = G__51317;
                  i__51315 = G__51318;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____51313
            }
          }else {
            return and__3822__auto____51312
          }
        }else {
          return and__3822__auto____51311
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__51327 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__51328 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__51329 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__51330 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____51331 = cljs.core.contains_QMARK_.call(null, tp__51327.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__51329.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__51329.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__51327, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__51330.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__51328, parent, ta__51329), "\ufdd0'descendants":tf__51330.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__51329, tag, td__51328)})
    }();
    if(cljs.core.truth_(or__3824__auto____51331)) {
      return or__3824__auto____51331
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__51336 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__51337 = cljs.core.truth_(parentMap__51336.call(null, tag)) ? cljs.core.disj.call(null, parentMap__51336.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__51338 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__51337)) ? cljs.core.assoc.call(null, parentMap__51336, tag, childsParents__51337) : cljs.core.dissoc.call(null, parentMap__51336, tag);
    var deriv_seq__51339 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__51319_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__51319_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__51319_SHARP_), cljs.core.second.call(null, p1__51319_SHARP_)))
    }, cljs.core.seq.call(null, newParents__51338)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__51336.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__51320_SHARP_, p2__51321_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__51320_SHARP_, p2__51321_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__51339))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__51347 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____51349 = cljs.core.truth_(function() {
    var and__3822__auto____51348 = xprefs__51347;
    if(cljs.core.truth_(and__3822__auto____51348)) {
      return xprefs__51347.call(null, y)
    }else {
      return and__3822__auto____51348
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____51349)) {
    return or__3824__auto____51349
  }else {
    var or__3824__auto____51351 = function() {
      var ps__51350 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__51350) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__51350), prefer_table))) {
          }else {
          }
          var G__51354 = cljs.core.rest.call(null, ps__51350);
          ps__51350 = G__51354;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____51351)) {
      return or__3824__auto____51351
    }else {
      var or__3824__auto____51353 = function() {
        var ps__51352 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__51352) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__51352), y, prefer_table))) {
            }else {
            }
            var G__51355 = cljs.core.rest.call(null, ps__51352);
            ps__51352 = G__51355;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____51353)) {
        return or__3824__auto____51353
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____51357 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____51357)) {
    return or__3824__auto____51357
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__51375 = cljs.core.reduce.call(null, function(be, p__51367) {
    var vec__51368__51369 = p__51367;
    var k__51370 = cljs.core.nth.call(null, vec__51368__51369, 0, null);
    var ___51371 = cljs.core.nth.call(null, vec__51368__51369, 1, null);
    var e__51372 = vec__51368__51369;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__51370)) {
      var be2__51374 = cljs.core.truth_(function() {
        var or__3824__auto____51373 = be == null;
        if(or__3824__auto____51373) {
          return or__3824__auto____51373
        }else {
          return cljs.core.dominates.call(null, k__51370, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__51372 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__51374), k__51370, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__51370), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__51374)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__51374
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__51375)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__51375));
      return cljs.core.second.call(null, best_entry__51375)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____51380 = mf;
    if(and__3822__auto____51380) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____51380
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2363__auto____51381 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____51382 = cljs.core._reset[goog.typeOf(x__2363__auto____51381)];
      if(or__3824__auto____51382) {
        return or__3824__auto____51382
      }else {
        var or__3824__auto____51383 = cljs.core._reset["_"];
        if(or__3824__auto____51383) {
          return or__3824__auto____51383
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____51388 = mf;
    if(and__3822__auto____51388) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____51388
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2363__auto____51389 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____51390 = cljs.core._add_method[goog.typeOf(x__2363__auto____51389)];
      if(or__3824__auto____51390) {
        return or__3824__auto____51390
      }else {
        var or__3824__auto____51391 = cljs.core._add_method["_"];
        if(or__3824__auto____51391) {
          return or__3824__auto____51391
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____51396 = mf;
    if(and__3822__auto____51396) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____51396
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____51397 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____51398 = cljs.core._remove_method[goog.typeOf(x__2363__auto____51397)];
      if(or__3824__auto____51398) {
        return or__3824__auto____51398
      }else {
        var or__3824__auto____51399 = cljs.core._remove_method["_"];
        if(or__3824__auto____51399) {
          return or__3824__auto____51399
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____51404 = mf;
    if(and__3822__auto____51404) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____51404
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2363__auto____51405 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____51406 = cljs.core._prefer_method[goog.typeOf(x__2363__auto____51405)];
      if(or__3824__auto____51406) {
        return or__3824__auto____51406
      }else {
        var or__3824__auto____51407 = cljs.core._prefer_method["_"];
        if(or__3824__auto____51407) {
          return or__3824__auto____51407
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____51412 = mf;
    if(and__3822__auto____51412) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____51412
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____51413 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____51414 = cljs.core._get_method[goog.typeOf(x__2363__auto____51413)];
      if(or__3824__auto____51414) {
        return or__3824__auto____51414
      }else {
        var or__3824__auto____51415 = cljs.core._get_method["_"];
        if(or__3824__auto____51415) {
          return or__3824__auto____51415
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____51420 = mf;
    if(and__3822__auto____51420) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____51420
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2363__auto____51421 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____51422 = cljs.core._methods[goog.typeOf(x__2363__auto____51421)];
      if(or__3824__auto____51422) {
        return or__3824__auto____51422
      }else {
        var or__3824__auto____51423 = cljs.core._methods["_"];
        if(or__3824__auto____51423) {
          return or__3824__auto____51423
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____51428 = mf;
    if(and__3822__auto____51428) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____51428
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2363__auto____51429 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____51430 = cljs.core._prefers[goog.typeOf(x__2363__auto____51429)];
      if(or__3824__auto____51430) {
        return or__3824__auto____51430
      }else {
        var or__3824__auto____51431 = cljs.core._prefers["_"];
        if(or__3824__auto____51431) {
          return or__3824__auto____51431
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____51436 = mf;
    if(and__3822__auto____51436) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____51436
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2363__auto____51437 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____51438 = cljs.core._dispatch[goog.typeOf(x__2363__auto____51437)];
      if(or__3824__auto____51438) {
        return or__3824__auto____51438
      }else {
        var or__3824__auto____51439 = cljs.core._dispatch["_"];
        if(or__3824__auto____51439) {
          return or__3824__auto____51439
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__51442 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__51443 = cljs.core._get_method.call(null, mf, dispatch_val__51442);
  if(cljs.core.truth_(target_fn__51443)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__51442)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__51443, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__51444 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__51445 = this;
  cljs.core.swap_BANG_.call(null, this__51445.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__51445.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__51445.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__51445.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__51446 = this;
  cljs.core.swap_BANG_.call(null, this__51446.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__51446.method_cache, this__51446.method_table, this__51446.cached_hierarchy, this__51446.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__51447 = this;
  cljs.core.swap_BANG_.call(null, this__51447.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__51447.method_cache, this__51447.method_table, this__51447.cached_hierarchy, this__51447.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__51448 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__51448.cached_hierarchy), cljs.core.deref.call(null, this__51448.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__51448.method_cache, this__51448.method_table, this__51448.cached_hierarchy, this__51448.hierarchy)
  }
  var temp__3971__auto____51449 = cljs.core.deref.call(null, this__51448.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____51449)) {
    var target_fn__51450 = temp__3971__auto____51449;
    return target_fn__51450
  }else {
    var temp__3971__auto____51451 = cljs.core.find_and_cache_best_method.call(null, this__51448.name, dispatch_val, this__51448.hierarchy, this__51448.method_table, this__51448.prefer_table, this__51448.method_cache, this__51448.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____51451)) {
      var target_fn__51452 = temp__3971__auto____51451;
      return target_fn__51452
    }else {
      return cljs.core.deref.call(null, this__51448.method_table).call(null, this__51448.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__51453 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__51453.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__51453.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__51453.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__51453.method_cache, this__51453.method_table, this__51453.cached_hierarchy, this__51453.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__51454 = this;
  return cljs.core.deref.call(null, this__51454.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__51455 = this;
  return cljs.core.deref.call(null, this__51455.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__51456 = this;
  return cljs.core.do_dispatch.call(null, mf, this__51456.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__51458__delegate = function(_, args) {
    var self__51457 = this;
    return cljs.core._dispatch.call(null, self__51457, args)
  };
  var G__51458 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__51458__delegate.call(this, _, args)
  };
  G__51458.cljs$lang$maxFixedArity = 1;
  G__51458.cljs$lang$applyTo = function(arglist__51459) {
    var _ = cljs.core.first(arglist__51459);
    var args = cljs.core.rest(arglist__51459);
    return G__51458__delegate(_, args)
  };
  G__51458.cljs$lang$arity$variadic = G__51458__delegate;
  return G__51458
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__51460 = this;
  return cljs.core._dispatch.call(null, self__51460, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__51461 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_51463, _) {
  var this__51462 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__51462.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__51464 = this;
  var and__3822__auto____51465 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____51465) {
    return this__51464.uuid === other.uuid
  }else {
    return and__3822__auto____51465
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__51466 = this;
  var this__51467 = this;
  return cljs.core.pr_str.call(null, this__51467)
};
cljs.core.UUID;
goog.provide("jayq.util");
goog.require("cljs.core");
jayq.util.map__GT_js = function map__GT_js(m) {
  var out__243320 = {};
  var G__243321__243322 = cljs.core.seq.call(null, m);
  if(G__243321__243322) {
    var G__243324__243326 = cljs.core.first.call(null, G__243321__243322);
    var vec__243325__243327 = G__243324__243326;
    var k__243328 = cljs.core.nth.call(null, vec__243325__243327, 0, null);
    var v__243329 = cljs.core.nth.call(null, vec__243325__243327, 1, null);
    var G__243321__243330 = G__243321__243322;
    var G__243324__243331 = G__243324__243326;
    var G__243321__243332 = G__243321__243330;
    while(true) {
      var vec__243333__243334 = G__243324__243331;
      var k__243335 = cljs.core.nth.call(null, vec__243333__243334, 0, null);
      var v__243336 = cljs.core.nth.call(null, vec__243333__243334, 1, null);
      var G__243321__243337 = G__243321__243332;
      out__243320[cljs.core.name.call(null, k__243335)] = v__243336;
      var temp__3974__auto____243338 = cljs.core.next.call(null, G__243321__243337);
      if(temp__3974__auto____243338) {
        var G__243321__243339 = temp__3974__auto____243338;
        var G__243340 = cljs.core.first.call(null, G__243321__243339);
        var G__243341 = G__243321__243339;
        G__243324__243331 = G__243340;
        G__243321__243332 = G__243341;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return out__243320
};
jayq.util.wait = function wait(ms, func) {
  return setTimeout(func, ms)
};
jayq.util.log = function() {
  var log__delegate = function(v, text) {
    var vs__243343 = cljs.core.string_QMARK_.call(null, v) ? cljs.core.apply.call(null, cljs.core.str, v, text) : v;
    return console.log(vs__243343)
  };
  var log = function(v, var_args) {
    var text = null;
    if(goog.isDef(var_args)) {
      text = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return log__delegate.call(this, v, text)
  };
  log.cljs$lang$maxFixedArity = 1;
  log.cljs$lang$applyTo = function(arglist__243344) {
    var v = cljs.core.first(arglist__243344);
    var text = cljs.core.rest(arglist__243344);
    return log__delegate(v, text)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
jayq.util.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.symbol_QMARK_.call(null, x)) {
        return cljs.core.name.call(null, cljs.core.name.call(null, x))
      }else {
        if(cljs.core.map_QMARK_.call(null, x)) {
          return cljs.core.reduce.call(null, function(m, p__243350) {
            var vec__243351__243352 = p__243350;
            var k__243353 = cljs.core.nth.call(null, vec__243351__243352, 0, null);
            var v__243354 = cljs.core.nth.call(null, vec__243351__243352, 1, null);
            return cljs.core.assoc.call(null, m, clj__GT_js.call(null, k__243353), clj__GT_js.call(null, v__243354))
          }, cljs.core.ObjMap.EMPTY, x).strobj
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__52053 = s;
      var limit__52054 = limit;
      var parts__52055 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__52054, 1)) {
          return cljs.core.conj.call(null, parts__52055, s__52053)
        }else {
          var temp__3971__auto____52056 = cljs.core.re_find.call(null, re, s__52053);
          if(cljs.core.truth_(temp__3971__auto____52056)) {
            var m__52057 = temp__3971__auto____52056;
            var index__52058 = s__52053.indexOf(m__52057);
            var G__52059 = s__52053.substring(index__52058 + cljs.core.count.call(null, m__52057));
            var G__52060 = limit__52054 - 1;
            var G__52061 = cljs.core.conj.call(null, parts__52055, s__52053.substring(0, index__52058));
            s__52053 = G__52059;
            limit__52054 = G__52060;
            parts__52055 = G__52061;
            continue
          }else {
            return cljs.core.conj.call(null, parts__52055, s__52053)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__52065 = s.length;
  while(true) {
    if(index__52065 === 0) {
      return""
    }else {
      var ch__52066 = cljs.core._lookup.call(null, s, index__52065 - 1, null);
      if(function() {
        var or__3824__auto____52067 = cljs.core._EQ_.call(null, ch__52066, "\n");
        if(or__3824__auto____52067) {
          return or__3824__auto____52067
        }else {
          return cljs.core._EQ_.call(null, ch__52066, "\r")
        }
      }()) {
        var G__52068 = index__52065 - 1;
        index__52065 = G__52068;
        continue
      }else {
        return s.substring(0, index__52065)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__52072 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____52073 = cljs.core.not.call(null, s__52072);
    if(or__3824__auto____52073) {
      return or__3824__auto____52073
    }else {
      var or__3824__auto____52074 = cljs.core._EQ_.call(null, "", s__52072);
      if(or__3824__auto____52074) {
        return or__3824__auto____52074
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__52072)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__52081 = new goog.string.StringBuffer;
  var length__52082 = s.length;
  var index__52083 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__52082, index__52083)) {
      return buffer__52081.toString()
    }else {
      var ch__52084 = s.charAt(index__52083);
      var temp__3971__auto____52085 = cljs.core._lookup.call(null, cmap, ch__52084, null);
      if(cljs.core.truth_(temp__3971__auto____52085)) {
        var replacement__52086 = temp__3971__auto____52085;
        buffer__52081.append([cljs.core.str(replacement__52086)].join(""))
      }else {
        buffer__52081.append(ch__52084)
      }
      var G__52087 = index__52083 + 1;
      index__52083 = G__52087;
      continue
    }
    break
  }
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("jayq.util");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    if(cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__3971__auto____386545 = jayq.core.crate_meta.call(null, sel);
      if(cljs.core.truth_(temp__3971__auto____386545)) {
        var cm__386546 = temp__3971__auto____386545;
        return[cljs.core.str("[crateGroup="), cljs.core.str(cm__386546), cljs.core.str("]")].join("")
      }else {
        return sel
      }
    }else {
      if(cljs.core.keyword_QMARK_.call(null, sel)) {
        return cljs.core.name.call(null, sel)
      }else {
        if("\ufdd0'else") {
          return sel
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.$ = function() {
  var $__delegate = function(sel, p__386547) {
    var vec__386551__386552 = p__386547;
    var context__386553 = cljs.core.nth.call(null, vec__386551__386552, 0, null);
    if(cljs.core.not.call(null, context__386553)) {
      return jQuery(jayq.core.__GT_selector.call(null, sel))
    }else {
      return jQuery(jayq.core.__GT_selector.call(null, sel), context__386553)
    }
  };
  var $ = function(sel, var_args) {
    var p__386547 = null;
    if(goog.isDef(var_args)) {
      p__386547 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return $__delegate.call(this, sel, p__386547)
  };
  $.cljs$lang$maxFixedArity = 1;
  $.cljs$lang$applyTo = function(arglist__386554) {
    var sel = cljs.core.first(arglist__386554);
    var p__386547 = cljs.core.rest(arglist__386554);
    return $__delegate(sel, p__386547)
  };
  $.cljs$lang$arity$variadic = $__delegate;
  return $
}();
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____386555 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____386555)) {
    return or__3824__auto____386555
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
jQuery.prototype.call = function() {
  var G__386556 = null;
  var G__386556__2 = function(_, k) {
    return cljs.core._lookup.call(null, this, k)
  };
  var G__386556__3 = function(_, k, not_found) {
    return cljs.core._lookup.call(null, this, k, not_found)
  };
  G__386556 = function(_, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__386556__2.call(this, _, k);
      case 3:
        return G__386556__3.call(this, _, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__386556
}();
jayq.core.anim = function anim(elem, props, dur) {
  return elem.animate(jayq.util.clj__GT_js.call(null, props), dur)
};
jayq.core.text = function() {
  var text = null;
  var text__1 = function($elem) {
    return $elem.text()
  };
  var text__2 = function($elem, txt) {
    return $elem.text(txt)
  };
  text = function($elem, txt) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, $elem);
      case 2:
        return text__2.call(this, $elem, txt)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
jayq.core.css = function css($elem, opts) {
  if(cljs.core.keyword_QMARK_.call(null, opts)) {
    return $elem.css(cljs.core.name.call(null, opts))
  }else {
    return $elem.css(jayq.util.clj__GT_js.call(null, opts))
  }
};
jayq.core.attr = function() {
  var attr__delegate = function($elem, a, p__386557) {
    var vec__386562__386563 = p__386557;
    var v__386564 = cljs.core.nth.call(null, vec__386562__386563, 0, null);
    if(cljs.core.map_QMARK_.call(null, a)) {
      return $elem.attr(jayq.util.clj__GT_js.call(null, a))
    }else {
      var a__386565 = cljs.core.name.call(null, a);
      if(cljs.core.not.call(null, v__386564)) {
        return $elem.attr(a__386565)
      }else {
        return $elem.attr(a__386565, v__386564)
      }
    }
  };
  var attr = function($elem, a, var_args) {
    var p__386557 = null;
    if(goog.isDef(var_args)) {
      p__386557 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return attr__delegate.call(this, $elem, a, p__386557)
  };
  attr.cljs$lang$maxFixedArity = 2;
  attr.cljs$lang$applyTo = function(arglist__386566) {
    var $elem = cljs.core.first(arglist__386566);
    var a = cljs.core.first(cljs.core.next(arglist__386566));
    var p__386557 = cljs.core.rest(cljs.core.next(arglist__386566));
    return attr__delegate($elem, a, p__386557)
  };
  attr.cljs$lang$arity$variadic = attr__delegate;
  return attr
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name.call(null, a))
};
jayq.core.data = function() {
  var data__delegate = function($elem, k, p__386567) {
    var vec__386572__386573 = p__386567;
    var v__386574 = cljs.core.nth.call(null, vec__386572__386573, 0, null);
    var k__386575 = cljs.core.name.call(null, k);
    if(cljs.core.not.call(null, v__386574)) {
      return $elem.data(k__386575)
    }else {
      return $elem.data(k__386575, v__386574)
    }
  };
  var data = function($elem, k, var_args) {
    var p__386567 = null;
    if(goog.isDef(var_args)) {
      p__386567 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return data__delegate.call(this, $elem, k, p__386567)
  };
  data.cljs$lang$maxFixedArity = 2;
  data.cljs$lang$applyTo = function(arglist__386576) {
    var $elem = cljs.core.first(arglist__386576);
    var k = cljs.core.first(cljs.core.next(arglist__386576));
    var p__386567 = cljs.core.rest(cljs.core.next(arglist__386576));
    return data__delegate($elem, k, p__386567)
  };
  data.cljs$lang$arity$variadic = data__delegate;
  return data
}();
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), "\ufdd0'keywordize-keys", true)
};
jayq.core.add_class = function add_class($elem, cl) {
  var cl__386578 = cljs.core.name.call(null, cl);
  return $elem.addClass(cl__386578)
};
jayq.core.remove_class = function remove_class($elem, cl) {
  var cl__386580 = cljs.core.name.call(null, cl);
  return $elem.removeClass(cl__386580)
};
jayq.core.toggle_class = function toggle_class($elem, cl) {
  var cl__386582 = cljs.core.name.call(null, cl);
  return $elem.toggleClass(cl__386582)
};
jayq.core.has_class = function has_class($elem, cl) {
  var cl__386584 = cljs.core.name.call(null, cl);
  return $elem.hasClass(cl__386584)
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content)
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content)
};
jayq.core.append = function append($elem, content) {
  if(cljs.core.vector_QMARK_.call(null, content)) {
    return $elem.append(jayq.util.clj__GT_js.call(null, content))
  }else {
    return $elem.append(content)
  }
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content)
};
jayq.core.remove = function remove($elem) {
  return $elem.remove()
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__386585) {
    var vec__386590__386591 = p__386585;
    var speed__386592 = cljs.core.nth.call(null, vec__386590__386591, 0, null);
    var on_finish__386593 = cljs.core.nth.call(null, vec__386590__386591, 1, null);
    return $elem.hide(speed__386592, on_finish__386593)
  };
  var hide = function($elem, var_args) {
    var p__386585 = null;
    if(goog.isDef(var_args)) {
      p__386585 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return hide__delegate.call(this, $elem, p__386585)
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__386594) {
    var $elem = cljs.core.first(arglist__386594);
    var p__386585 = cljs.core.rest(arglist__386594);
    return hide__delegate($elem, p__386585)
  };
  hide.cljs$lang$arity$variadic = hide__delegate;
  return hide
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__386595) {
    var vec__386600__386601 = p__386595;
    var speed__386602 = cljs.core.nth.call(null, vec__386600__386601, 0, null);
    var on_finish__386603 = cljs.core.nth.call(null, vec__386600__386601, 1, null);
    return $elem.show(speed__386602, on_finish__386603)
  };
  var show = function($elem, var_args) {
    var p__386595 = null;
    if(goog.isDef(var_args)) {
      p__386595 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return show__delegate.call(this, $elem, p__386595)
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__386604) {
    var $elem = cljs.core.first(arglist__386604);
    var p__386595 = cljs.core.rest(arglist__386604);
    return show__delegate($elem, p__386595)
  };
  show.cljs$lang$arity$variadic = show__delegate;
  return show
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__386605) {
    var vec__386610__386611 = p__386605;
    var speed__386612 = cljs.core.nth.call(null, vec__386610__386611, 0, null);
    var on_finish__386613 = cljs.core.nth.call(null, vec__386610__386611, 1, null);
    return $elem.toggle(speed__386612, on_finish__386613)
  };
  var toggle = function($elem, var_args) {
    var p__386605 = null;
    if(goog.isDef(var_args)) {
      p__386605 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return toggle__delegate.call(this, $elem, p__386605)
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__386614) {
    var $elem = cljs.core.first(arglist__386614);
    var p__386605 = cljs.core.rest(arglist__386614);
    return toggle__delegate($elem, p__386605)
  };
  toggle.cljs$lang$arity$variadic = toggle__delegate;
  return toggle
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__386615) {
    var vec__386620__386621 = p__386615;
    var speed__386622 = cljs.core.nth.call(null, vec__386620__386621, 0, null);
    var on_finish__386623 = cljs.core.nth.call(null, vec__386620__386621, 1, null);
    return $elem.fadeOut(speed__386622, on_finish__386623)
  };
  var fade_out = function($elem, var_args) {
    var p__386615 = null;
    if(goog.isDef(var_args)) {
      p__386615 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_out__delegate.call(this, $elem, p__386615)
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__386624) {
    var $elem = cljs.core.first(arglist__386624);
    var p__386615 = cljs.core.rest(arglist__386624);
    return fade_out__delegate($elem, p__386615)
  };
  fade_out.cljs$lang$arity$variadic = fade_out__delegate;
  return fade_out
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__386625) {
    var vec__386630__386631 = p__386625;
    var speed__386632 = cljs.core.nth.call(null, vec__386630__386631, 0, null);
    var on_finish__386633 = cljs.core.nth.call(null, vec__386630__386631, 1, null);
    return $elem.fadeIn(speed__386632, on_finish__386633)
  };
  var fade_in = function($elem, var_args) {
    var p__386625 = null;
    if(goog.isDef(var_args)) {
      p__386625 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_in__delegate.call(this, $elem, p__386625)
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__386634) {
    var $elem = cljs.core.first(arglist__386634);
    var p__386625 = cljs.core.rest(arglist__386634);
    return fade_in__delegate($elem, p__386625)
  };
  fade_in.cljs$lang$arity$variadic = fade_in__delegate;
  return fade_in
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__386635) {
    var vec__386640__386641 = p__386635;
    var speed__386642 = cljs.core.nth.call(null, vec__386640__386641, 0, null);
    var on_finish__386643 = cljs.core.nth.call(null, vec__386640__386641, 1, null);
    return $elem.slideUp(speed__386642, on_finish__386643)
  };
  var slide_up = function($elem, var_args) {
    var p__386635 = null;
    if(goog.isDef(var_args)) {
      p__386635 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_up__delegate.call(this, $elem, p__386635)
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__386644) {
    var $elem = cljs.core.first(arglist__386644);
    var p__386635 = cljs.core.rest(arglist__386644);
    return slide_up__delegate($elem, p__386635)
  };
  slide_up.cljs$lang$arity$variadic = slide_up__delegate;
  return slide_up
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__386645) {
    var vec__386650__386651 = p__386645;
    var speed__386652 = cljs.core.nth.call(null, vec__386650__386651, 0, null);
    var on_finish__386653 = cljs.core.nth.call(null, vec__386650__386651, 1, null);
    return $elem.slideDown(speed__386652, on_finish__386653)
  };
  var slide_down = function($elem, var_args) {
    var p__386645 = null;
    if(goog.isDef(var_args)) {
      p__386645 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_down__delegate.call(this, $elem, p__386645)
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__386654) {
    var $elem = cljs.core.first(arglist__386654);
    var p__386645 = cljs.core.rest(arglist__386654);
    return slide_down__delegate($elem, p__386645)
  };
  slide_down.cljs$lang$arity$variadic = slide_down__delegate;
  return slide_down
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent()
};
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector))
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__386655) {
    var vec__386659__386660 = p__386655;
    var context__386661 = cljs.core.nth.call(null, vec__386659__386660, 0, null);
    return $elem.closest(selector, context__386661)
  };
  var closest = function($elem, selector, var_args) {
    var p__386655 = null;
    if(goog.isDef(var_args)) {
      p__386655 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return closest__delegate.call(this, $elem, selector, p__386655)
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__386662) {
    var $elem = cljs.core.first(arglist__386662);
    var selector = cljs.core.first(cljs.core.next(arglist__386662));
    var p__386655 = cljs.core.rest(cljs.core.next(arglist__386662));
    return closest__delegate($elem, selector, p__386655)
  };
  closest.cljs$lang$arity$variadic = closest__delegate;
  return closest
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone()
};
jayq.core.inner = function inner($elem, v) {
  return $elem.html(v)
};
jayq.core.empty = function empty($elem) {
  return $elem.empty()
};
jayq.core.val = function() {
  var val__delegate = function($elem, p__386663) {
    var vec__386667__386668 = p__386663;
    var v__386669 = cljs.core.nth.call(null, vec__386667__386668, 0, null);
    if(cljs.core.truth_(v__386669)) {
      return $elem.val(v__386669)
    }else {
      return $elem.val()
    }
  };
  var val = function($elem, var_args) {
    var p__386663 = null;
    if(goog.isDef(var_args)) {
      p__386663 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return val__delegate.call(this, $elem, p__386663)
  };
  val.cljs$lang$maxFixedArity = 1;
  val.cljs$lang$applyTo = function(arglist__386670) {
    var $elem = cljs.core.first(arglist__386670);
    var p__386663 = cljs.core.rest(arglist__386670);
    return val__delegate($elem, p__386663)
  };
  val.cljs$lang$arity$variadic = val__delegate;
  return val
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize()
};
jayq.core.queue = function queue($elem, callback) {
  return $elem.queue(callback)
};
jayq.core.dequeue = function dequeue(elem) {
  return jayq.core.$.call(null, elem).dequeue()
};
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func)
};
jayq.core.xhr = function xhr(p__386671, content, callback) {
  var vec__386677__386678 = p__386671;
  var method__386679 = cljs.core.nth.call(null, vec__386677__386678, 0, null);
  var uri__386680 = cljs.core.nth.call(null, vec__386677__386678, 1, null);
  var params__386681 = jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'data", "\ufdd0'success"], {"\ufdd0'type":clojure.string.upper_case.call(null, cljs.core.name.call(null, method__386679)), "\ufdd0'data":jayq.util.clj__GT_js.call(null, content), "\ufdd0'success":callback}));
  return jQuery.ajax(uri__386680, params__386681)
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.util.clj__GT_js.call(null, settings))
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.util.clj__GT_js.call(null, settings))
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ajax.cljs$lang$arity$1 = ajax__1;
  ajax.cljs$lang$arity$2 = ajax__2;
  return ajax
}();
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func)
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__386682) {
    var vec__386686__386687 = p__386682;
    var func__386688 = cljs.core.nth.call(null, vec__386686__386687, 0, null);
    return $elem.unbind(cljs.core.name.call(null, ev), func__386688)
  };
  var unbind = function($elem, ev, var_args) {
    var p__386682 = null;
    if(goog.isDef(var_args)) {
      p__386682 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unbind__delegate.call(this, $elem, ev, p__386682)
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__386689) {
    var $elem = cljs.core.first(arglist__386689);
    var ev = cljs.core.first(cljs.core.next(arglist__386689));
    var p__386682 = cljs.core.rest(cljs.core.next(arglist__386689));
    return unbind__delegate($elem, ev, p__386682)
  };
  unbind.cljs$lang$arity$variadic = unbind__delegate;
  return unbind
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev))
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func)
};
jayq.core.__GT_event = function __GT_event(e) {
  if(cljs.core.keyword_QMARK_.call(null, e)) {
    return cljs.core.name.call(null, e)
  }else {
    if(cljs.core.map_QMARK_.call(null, e)) {
      return jayq.util.clj__GT_js.call(null, e)
    }else {
      if(cljs.core.coll_QMARK_.call(null, e)) {
        return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e))
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Unknown event type: "), cljs.core.str(e)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__386690) {
    var vec__386696__386697 = p__386690;
    var sel__386698 = cljs.core.nth.call(null, vec__386696__386697, 0, null);
    var data__386699 = cljs.core.nth.call(null, vec__386696__386697, 1, null);
    var handler__386700 = cljs.core.nth.call(null, vec__386696__386697, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__386698), data__386699, handler__386700)
  };
  var on = function($elem, events, var_args) {
    var p__386690 = null;
    if(goog.isDef(var_args)) {
      p__386690 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return on__delegate.call(this, $elem, events, p__386690)
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__386701) {
    var $elem = cljs.core.first(arglist__386701);
    var events = cljs.core.first(cljs.core.next(arglist__386701));
    var p__386690 = cljs.core.rest(cljs.core.next(arglist__386701));
    return on__delegate($elem, events, p__386690)
  };
  on.cljs$lang$arity$variadic = on__delegate;
  return on
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__386702) {
    var vec__386708__386709 = p__386702;
    var sel__386710 = cljs.core.nth.call(null, vec__386708__386709, 0, null);
    var data__386711 = cljs.core.nth.call(null, vec__386708__386709, 1, null);
    var handler__386712 = cljs.core.nth.call(null, vec__386708__386709, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__386710), data__386711, handler__386712)
  };
  var one = function($elem, events, var_args) {
    var p__386702 = null;
    if(goog.isDef(var_args)) {
      p__386702 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return one__delegate.call(this, $elem, events, p__386702)
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__386713) {
    var $elem = cljs.core.first(arglist__386713);
    var events = cljs.core.first(cljs.core.next(arglist__386713));
    var p__386702 = cljs.core.rest(cljs.core.next(arglist__386713));
    return one__delegate($elem, events, p__386702)
  };
  one.cljs$lang$arity$variadic = one__delegate;
  return one
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__386714) {
    var vec__386719__386720 = p__386714;
    var sel__386721 = cljs.core.nth.call(null, vec__386719__386720, 0, null);
    var handler__386722 = cljs.core.nth.call(null, vec__386719__386720, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__386721), handler__386722)
  };
  var off = function($elem, events, var_args) {
    var p__386714 = null;
    if(goog.isDef(var_args)) {
      p__386714 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return off__delegate.call(this, $elem, events, p__386714)
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__386723) {
    var $elem = cljs.core.first(arglist__386723);
    var events = cljs.core.first(cljs.core.next(arglist__386723));
    var p__386714 = cljs.core.rest(cljs.core.next(arglist__386723));
    return off__delegate($elem, events, p__386714)
  };
  off.cljs$lang$arity$variadic = off__delegate;
  return off
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault()
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("hlisp.hexp");
goog.require("cljs.core");
hlisp.hexp.make_hexp = function make_hexp(tag) {
  return cljs.core.ObjMap.fromObject(["\ufdd0'children", "\ufdd0'text", "\ufdd0'data", "\ufdd0'attr-params", "\ufdd0'proc", "\ufdd0'env", "\ufdd0'params", "\ufdd0'ids", "\ufdd0'attrs", "\ufdd0'tag"], {"\ufdd0'children":cljs.core.PersistentVector.EMPTY, "\ufdd0'text":"", "\ufdd0'data":null, "\ufdd0'attr-params":cljs.core.ObjMap.EMPTY, "\ufdd0'proc":null, "\ufdd0'env":cljs.core.ObjMap.EMPTY, "\ufdd0'params":cljs.core.PersistentVector.EMPTY, "\ufdd0'ids":cljs.core.PersistentVector.fromArray([cljs.core.gensym.call(null)], 
  true), "\ufdd0'attrs":cljs.core.ObjMap.EMPTY, "\ufdd0'tag":tag})
};
hlisp.hexp.make_node_hexp = function make_node_hexp(tag, attrs, children) {
  return cljs.core.assoc.call(null, hlisp.hexp.make_hexp.call(null, tag), "\ufdd0'attrs", attrs, "\ufdd0'children", children)
};
hlisp.hexp.make_seq_hexp = function make_seq_hexp(items) {
  return hlisp.hexp.make_node_hexp.call(null, "val:seq", cljs.core.ObjMap.EMPTY, cljs.core.vec.call(null, items))
};
hlisp.hexp.make_text_hexp = function make_text_hexp(tag, text) {
  return cljs.core.assoc.call(null, hlisp.hexp.make_hexp.call(null, tag), "\ufdd0'text", [cljs.core.str(text)].join(""))
};
hlisp.hexp.make_prim_hexp = function make_prim_hexp(proc) {
  return cljs.core.assoc.call(null, hlisp.hexp.make_hexp.call(null, "\ufdd0'prim"), "\ufdd0'proc", proc)
};
hlisp.hexp.make_proc_hexp = function make_proc_hexp(tag, attr_params, params, env, proc) {
  return cljs.core.assoc.call(null, hlisp.hexp.make_hexp.call(null, tag), "\ufdd0'attr-params", attr_params, "\ufdd0'params", params, "\ufdd0'env", env, "\ufdd0'proc", proc)
};
hlisp.hexp.make_data_hexp = function make_data_hexp(data) {
  return cljs.core.assoc.call(null, hlisp.hexp.make_hexp.call(null, "\ufdd0'data"), "\ufdd0'data", data)
};
hlisp.hexp.Foo = function(a, b, __meta, __extmap) {
  this.a = a;
  this.b = b;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
hlisp.hexp.Foo.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2318__auto__) {
  var this__993214 = this;
  var h__2192__auto____993215 = this__993214.__hash;
  if(!(h__2192__auto____993215 == null)) {
    return h__2192__auto____993215
  }else {
    var h__2192__auto____993216 = cljs.core.hash_imap.call(null, this__2318__auto__);
    this__993214.__hash = h__2192__auto____993216;
    return h__2192__auto____993216
  }
};
hlisp.hexp.Foo.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2323__auto__, k__2324__auto__) {
  var this__993217 = this;
  return this__2323__auto__.cljs$core$ILookup$_lookup$arity$3(this__2323__auto__, k__2324__auto__, null)
};
hlisp.hexp.Foo.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2325__auto__, k993212, else__2326__auto__) {
  var this__993218 = this;
  if(k993212 === "\ufdd0'a") {
    return this__993218.a
  }else {
    if(k993212 === "\ufdd0'b") {
      return this__993218.b
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__993218.__extmap, k993212, else__2326__auto__)
      }else {
        return null
      }
    }
  }
};
hlisp.hexp.Foo.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2330__auto__, k__2331__auto__, G__993211) {
  var this__993219 = this;
  var pred__993220__993223 = cljs.core.identical_QMARK_;
  var expr__993221__993224 = k__2331__auto__;
  if(pred__993220__993223.call(null, "\ufdd0'a", expr__993221__993224)) {
    return new hlisp.hexp.Foo(G__993211, this__993219.b, this__993219.__meta, this__993219.__extmap, null)
  }else {
    if(pred__993220__993223.call(null, "\ufdd0'b", expr__993221__993224)) {
      return new hlisp.hexp.Foo(this__993219.a, G__993211, this__993219.__meta, this__993219.__extmap, null)
    }else {
      return new hlisp.hexp.Foo(this__993219.a, this__993219.b, this__993219.__meta, cljs.core.assoc.call(null, this__993219.__extmap, k__2331__auto__, G__993211), null)
    }
  }
};
hlisp.hexp.Foo.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2328__auto__, entry__2329__auto__) {
  var this__993225 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2329__auto__)) {
    return this__2328__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2328__auto__, cljs.core._nth.call(null, entry__2329__auto__, 0), cljs.core._nth.call(null, entry__2329__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2328__auto__, entry__2329__auto__)
  }
};
hlisp.hexp.Foo.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2335__auto__) {
  var this__993226 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'a", this__993226.a), cljs.core.vector.call(null, "\ufdd0'b", this__993226.b)], true), this__993226.__extmap))
};
hlisp.hexp.Foo.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2337__auto__, opts__2338__auto__) {
  var this__993227 = this;
  var pr_pair__2339__auto____993228 = function(keyval__2340__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2338__auto__, keyval__2340__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2339__auto____993228, [cljs.core.str("#"), cljs.core.str("Foo"), cljs.core.str("{")].join(""), ", ", "}", opts__2338__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'a", this__993227.a), cljs.core.vector.call(null, "\ufdd0'b", this__993227.b)], true), this__993227.__extmap))
};
hlisp.hexp.Foo.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2327__auto__) {
  var this__993229 = this;
  return 2 + cljs.core.count.call(null, this__993229.__extmap)
};
hlisp.hexp.Foo.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2319__auto__, other__2320__auto__) {
  var this__993230 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____993231 = other__2320__auto__;
    if(cljs.core.truth_(and__3822__auto____993231)) {
      var and__3822__auto____993232 = this__2319__auto__.constructor === other__2320__auto__.constructor;
      if(and__3822__auto____993232) {
        return cljs.core.equiv_map.call(null, this__2319__auto__, other__2320__auto__)
      }else {
        return and__3822__auto____993232
      }
    }else {
      return and__3822__auto____993231
    }
  }())) {
    return true
  }else {
    return false
  }
};
hlisp.hexp.Foo.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2322__auto__, G__993211) {
  var this__993233 = this;
  return new hlisp.hexp.Foo(this__993233.a, this__993233.b, G__993211, this__993233.__extmap, this__993233.__hash)
};
hlisp.hexp.Foo.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2321__auto__) {
  var this__993234 = this;
  return this__993234.__meta
};
hlisp.hexp.Foo.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2332__auto__, k__2333__auto__) {
  var this__993235 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'a", "\ufdd0'b"]), k__2333__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2332__auto__), this__993235.__meta), k__2333__auto__)
  }else {
    return new hlisp.hexp.Foo(this__993235.a, this__993235.b, this__993235.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__993235.__extmap, k__2333__auto__)), null)
  }
};
hlisp.hexp.Foo.cljs$lang$type = true;
hlisp.hexp.Foo.cljs$lang$ctorPrSeq = function(this__2357__auto__) {
  return cljs.core.list.call(null, "hlisp.hexp/Foo")
};
hlisp.hexp.__GT_Foo = function __GT_Foo(a, b) {
  return new hlisp.hexp.Foo(a, b)
};
hlisp.hexp.map__GT_Foo = function map__GT_Foo(G__993213) {
  return new hlisp.hexp.Foo((new cljs.core.Keyword("\ufdd0'a")).call(null, G__993213), (new cljs.core.Keyword("\ufdd0'b")).call(null, G__993213), null, cljs.core.dissoc.call(null, G__993213, "\ufdd0'a", "\ufdd0'b"))
};
hlisp.hexp.Foo;
hlisp.hexp.Foo.prototype.cljs$core$IPrintable$ = true;
hlisp.hexp.Foo.prototype.cljs$core$IPrintable$_pr_seq$arity$1 = function(o) {
  return cljs.core.list.call(null, "Foo:<", (new cljs.core.Keyword("\ufdd0'a")).call(null, o), ",", (new cljs.core.Keyword("\ufdd0'b")).call(null, o), ">")
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, this.path_.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____51525 = reader;
    if(and__3822__auto____51525) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____51525
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2363__auto____51526 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____51527 = cljs.reader.read_char[goog.typeOf(x__2363__auto____51526)];
      if(or__3824__auto____51527) {
        return or__3824__auto____51527
      }else {
        var or__3824__auto____51528 = cljs.reader.read_char["_"];
        if(or__3824__auto____51528) {
          return or__3824__auto____51528
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____51533 = reader;
    if(and__3822__auto____51533) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____51533
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2363__auto____51534 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____51535 = cljs.reader.unread[goog.typeOf(x__2363__auto____51534)];
      if(or__3824__auto____51535) {
        return or__3824__auto____51535
      }else {
        var or__3824__auto____51536 = cljs.reader.unread["_"];
        if(or__3824__auto____51536) {
          return or__3824__auto____51536
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__51537 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__51537.buffer_atom))) {
    var idx__51538 = cljs.core.deref.call(null, this__51537.index_atom);
    cljs.core.swap_BANG_.call(null, this__51537.index_atom, cljs.core.inc);
    return this__51537.s[idx__51538]
  }else {
    var buf__51539 = cljs.core.deref.call(null, this__51537.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__51537.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__51539)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__51540 = this;
  return cljs.core.swap_BANG_.call(null, this__51540.buffer_atom, function(p1__51520_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__51520_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____51542 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____51542)) {
    return or__3824__auto____51542
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____51547 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____51547) {
    return or__3824__auto____51547
  }else {
    var and__3822__auto____51549 = function() {
      var or__3824__auto____51548 = "+" === initch;
      if(or__3824__auto____51548) {
        return or__3824__auto____51548
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____51549)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__51550 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__51550);
        return next_ch__51550
      }())
    }else {
      return and__3822__auto____51549
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__51551) {
    var rdr = cljs.core.first(arglist__51551);
    var msg = cljs.core.rest(arglist__51551);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____51555 = !(ch === "#");
  if(and__3822__auto____51555) {
    var and__3822__auto____51556 = !(ch === "'");
    if(and__3822__auto____51556) {
      var and__3822__auto____51557 = !(ch === ":");
      if(and__3822__auto____51557) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____51557
      }
    }else {
      return and__3822__auto____51556
    }
  }else {
    return and__3822__auto____51555
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__51562 = new goog.string.StringBuffer(initch);
  var ch__51563 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____51564 = ch__51563 == null;
      if(or__3824__auto____51564) {
        return or__3824__auto____51564
      }else {
        var or__3824__auto____51565 = cljs.reader.whitespace_QMARK_.call(null, ch__51563);
        if(or__3824__auto____51565) {
          return or__3824__auto____51565
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__51563)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__51563);
      return sb__51562.toString()
    }else {
      var G__51566 = function() {
        sb__51562.append(ch__51563);
        return sb__51562
      }();
      var G__51567 = cljs.reader.read_char.call(null, rdr);
      sb__51562 = G__51566;
      ch__51563 = G__51567;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__51571 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____51572 = ch__51571 === "n";
      if(or__3824__auto____51572) {
        return or__3824__auto____51572
      }else {
        var or__3824__auto____51573 = ch__51571 === "r";
        if(or__3824__auto____51573) {
          return or__3824__auto____51573
        }else {
          return ch__51571 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__51575 = re.exec(s);
  if(matches__51575 == null) {
    return null
  }else {
    if(matches__51575.length === 1) {
      return matches__51575[0]
    }else {
      return matches__51575
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__51583 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__51584 = groups__51583[2];
  if(!function() {
    var or__3824__auto____51585 = group3__51584 == null;
    if(or__3824__auto____51585) {
      return or__3824__auto____51585
    }else {
      return group3__51584.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__51586 = "-" === groups__51583[1] ? -1 : 1;
    var a__51587 = cljs.core.truth_(groups__51583[3]) ? [groups__51583[3], 10] : cljs.core.truth_(groups__51583[4]) ? [groups__51583[4], 16] : cljs.core.truth_(groups__51583[5]) ? [groups__51583[5], 8] : cljs.core.truth_(groups__51583[7]) ? [groups__51583[7], parseInt(groups__51583[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__51588 = a__51587[0];
    var radix__51589 = a__51587[1];
    if(n__51588 == null) {
      return null
    }else {
      return negate__51586 * parseInt(n__51588, radix__51589)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__51593 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__51594 = groups__51593[1];
  var denominator__51595 = groups__51593[2];
  return parseInt(numinator__51594) / parseInt(denominator__51595)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__51598 = re.exec(s);
  if(function() {
    var and__3822__auto____51599 = !(matches__51598 == null);
    if(and__3822__auto____51599) {
      return matches__51598[0] === s
    }else {
      return and__3822__auto____51599
    }
  }()) {
    if(matches__51598.length === 1) {
      return matches__51598[0]
    }else {
      return matches__51598
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__51601 = parseInt(code_str, 16);
  return String.fromCharCode(code__51601)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__51604 = cljs.reader.read_char.call(null, reader);
  var mapresult__51605 = cljs.reader.escape_char_map.call(null, ch__51604);
  if(cljs.core.truth_(mapresult__51605)) {
    return mapresult__51605
  }else {
    if(ch__51604 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__51604, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__51604 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__51604, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__51604)) {
          return String.fromCharCode(ch__51604)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__51604)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__51607 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__51607))) {
      var G__51608 = cljs.reader.read_char.call(null, rdr);
      ch__51607 = G__51608;
      continue
    }else {
      return ch__51607
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__51615 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__51616 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__51616)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__51616) {
      return cljs.core.persistent_BANG_.call(null, a__51615)
    }else {
      var temp__3971__auto____51617 = cljs.reader.macros.call(null, ch__51616);
      if(cljs.core.truth_(temp__3971__auto____51617)) {
        var macrofn__51618 = temp__3971__auto____51617;
        var mret__51619 = macrofn__51618.call(null, rdr, ch__51616);
        var G__51621 = mret__51619 === rdr ? a__51615 : cljs.core.conj_BANG_.call(null, a__51615, mret__51619);
        a__51615 = G__51621;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__51616);
        var o__51620 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__51622 = o__51620 === rdr ? a__51615 : cljs.core.conj_BANG_.call(null, a__51615, o__51620);
        a__51615 = G__51622;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__51627 = cljs.reader.read_char.call(null, rdr);
  var dm__51628 = cljs.reader.dispatch_macros.call(null, ch__51627);
  if(cljs.core.truth_(dm__51628)) {
    return dm__51628.call(null, rdr, _)
  }else {
    var temp__3971__auto____51629 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__51627);
    if(cljs.core.truth_(temp__3971__auto____51629)) {
      var obj__51630 = temp__3971__auto____51629;
      return obj__51630
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__51627)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__51632 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__51632))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__51632)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__51639 = new goog.string.StringBuffer(initch);
  var ch__51640 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____51641 = ch__51640 == null;
      if(or__3824__auto____51641) {
        return or__3824__auto____51641
      }else {
        var or__3824__auto____51642 = cljs.reader.whitespace_QMARK_.call(null, ch__51640);
        if(or__3824__auto____51642) {
          return or__3824__auto____51642
        }else {
          return cljs.reader.macros.call(null, ch__51640)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__51640);
      var s__51643 = buffer__51639.toString();
      var or__3824__auto____51644 = cljs.reader.match_number.call(null, s__51643);
      if(cljs.core.truth_(or__3824__auto____51644)) {
        return or__3824__auto____51644
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__51643, "]")
      }
    }else {
      var G__51645 = function() {
        buffer__51639.append(ch__51640);
        return buffer__51639
      }();
      var G__51646 = cljs.reader.read_char.call(null, reader);
      buffer__51639 = G__51645;
      ch__51640 = G__51646;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__51649 = new goog.string.StringBuffer;
  var ch__51650 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__51650 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__51650) {
        var G__51651 = function() {
          buffer__51649.append(cljs.reader.escape_char.call(null, buffer__51649, reader));
          return buffer__51649
        }();
        var G__51652 = cljs.reader.read_char.call(null, reader);
        buffer__51649 = G__51651;
        ch__51650 = G__51652;
        continue
      }else {
        if('"' === ch__51650) {
          return buffer__51649.toString()
        }else {
          if("\ufdd0'default") {
            var G__51653 = function() {
              buffer__51649.append(ch__51650);
              return buffer__51649
            }();
            var G__51654 = cljs.reader.read_char.call(null, reader);
            buffer__51649 = G__51653;
            ch__51650 = G__51654;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__51656 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__51656, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__51656, 0, token__51656.indexOf("/")), cljs.core.subs.call(null, token__51656, token__51656.indexOf("/") + 1, token__51656.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__51656, cljs.core.symbol.call(null, token__51656))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__51666 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__51667 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__51666);
  var token__51668 = a__51667[0];
  var ns__51669 = a__51667[1];
  var name__51670 = a__51667[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____51672 = function() {
      var and__3822__auto____51671 = !(void 0 === ns__51669);
      if(and__3822__auto____51671) {
        return ns__51669.substring(ns__51669.length - 2, ns__51669.length) === ":/"
      }else {
        return and__3822__auto____51671
      }
    }();
    if(cljs.core.truth_(or__3824__auto____51672)) {
      return or__3824__auto____51672
    }else {
      var or__3824__auto____51673 = name__51670[name__51670.length - 1] === ":";
      if(or__3824__auto____51673) {
        return or__3824__auto____51673
      }else {
        return!(token__51668.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__51668)
  }else {
    if(function() {
      var and__3822__auto____51674 = !(ns__51669 == null);
      if(and__3822__auto____51674) {
        return ns__51669.length > 0
      }else {
        return and__3822__auto____51674
      }
    }()) {
      return cljs.core.keyword.call(null, ns__51669.substring(0, ns__51669.indexOf("/")), name__51670)
    }else {
      return cljs.core.keyword.call(null, token__51668)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__51680 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__51680)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__51681 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__51682__51683 = o__51681;
    if(G__51682__51683) {
      if(function() {
        var or__3824__auto____51684 = G__51682__51683.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____51684) {
          return or__3824__auto____51684
        }else {
          return G__51682__51683.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__51682__51683.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__51682__51683)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__51682__51683)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__51681, cljs.core.merge.call(null, cljs.core.meta.call(null, o__51681), m__51680))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__51688 = cljs.reader.read_char.call(null, reader);
    if(ch__51688 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__51688)) {
        var G__51691 = reader;
        var G__51692 = eof_is_error;
        var G__51693 = sentinel;
        var G__51694 = is_recursive;
        reader = G__51691;
        eof_is_error = G__51692;
        sentinel = G__51693;
        is_recursive = G__51694;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__51688)) {
          var G__51695 = cljs.reader.read_comment.call(null, reader, ch__51688);
          var G__51696 = eof_is_error;
          var G__51697 = sentinel;
          var G__51698 = is_recursive;
          reader = G__51695;
          eof_is_error = G__51696;
          sentinel = G__51697;
          is_recursive = G__51698;
          continue
        }else {
          if("\ufdd0'else") {
            var f__51689 = cljs.reader.macros.call(null, ch__51688);
            var res__51690 = cljs.core.truth_(f__51689) ? f__51689.call(null, reader, ch__51688) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__51688) ? cljs.reader.read_number.call(null, reader, ch__51688) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__51688) : null;
            if(res__51690 === reader) {
              var G__51699 = reader;
              var G__51700 = eof_is_error;
              var G__51701 = sentinel;
              var G__51702 = is_recursive;
              reader = G__51699;
              eof_is_error = G__51700;
              sentinel = G__51701;
              is_recursive = G__51702;
              continue
            }else {
              return res__51690
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__51704 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__51704, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__51706 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__51706.getLength() < width) {
            var G__51707 = b__51706.append("0");
            b__51706 = G__51707;
            continue
          }else {
            return b__51706.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____51710 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____51710)) {
    var or__3824__auto____51711 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____51711)) {
      return or__3824__auto____51711
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____51710
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__51716 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__51717 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__51717 : dim_norm__51716, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__51718 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__51720 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____51719 = low <= n;
      if(and__3822__auto____51719) {
        return n <= high
      }else {
        return and__3822__auto____51719
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____51721 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__51718, ts)));
    if(cljs.core.truth_(temp__3974__auto____51721)) {
      var vec__51722__51725 = temp__3974__auto____51721;
      var vec__51723__51726 = cljs.core.nth.call(null, vec__51722__51725, 0, null);
      var ___51727 = cljs.core.nth.call(null, vec__51723__51726, 0, null);
      var years__51728 = cljs.core.nth.call(null, vec__51723__51726, 1, null);
      var months__51729 = cljs.core.nth.call(null, vec__51723__51726, 2, null);
      var days__51730 = cljs.core.nth.call(null, vec__51723__51726, 3, null);
      var hours__51731 = cljs.core.nth.call(null, vec__51723__51726, 4, null);
      var minutes__51732 = cljs.core.nth.call(null, vec__51723__51726, 5, null);
      var seconds__51733 = cljs.core.nth.call(null, vec__51723__51726, 6, null);
      var milliseconds__51734 = cljs.core.nth.call(null, vec__51723__51726, 7, null);
      var vec__51724__51735 = cljs.core.nth.call(null, vec__51722__51725, 1, null);
      var ___51736 = cljs.core.nth.call(null, vec__51724__51735, 0, null);
      var ___51737 = cljs.core.nth.call(null, vec__51724__51735, 1, null);
      var ___51738 = cljs.core.nth.call(null, vec__51724__51735, 2, null);
      var V__51739 = vec__51722__51725;
      var vec__51740__51743 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__51715_SHARP_) {
          return parseInt(p1__51715_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__51713_SHARP_, p2__51712_SHARP_) {
        return cljs.core.update_in.call(null, p2__51712_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__51713_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__51714_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__51714_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__51739));
      var vec__51741__51744 = cljs.core.nth.call(null, vec__51740__51743, 0, null);
      var ___51745 = cljs.core.nth.call(null, vec__51741__51744, 0, null);
      var y__51746 = cljs.core.nth.call(null, vec__51741__51744, 1, null);
      var mo__51747 = cljs.core.nth.call(null, vec__51741__51744, 2, null);
      var d__51748 = cljs.core.nth.call(null, vec__51741__51744, 3, null);
      var h__51749 = cljs.core.nth.call(null, vec__51741__51744, 4, null);
      var m__51750 = cljs.core.nth.call(null, vec__51741__51744, 5, null);
      var s__51751 = cljs.core.nth.call(null, vec__51741__51744, 6, null);
      var ms__51752 = cljs.core.nth.call(null, vec__51741__51744, 7, null);
      var vec__51742__51753 = cljs.core.nth.call(null, vec__51740__51743, 1, null);
      var offset_sign__51754 = cljs.core.nth.call(null, vec__51742__51753, 0, null);
      var offset_hours__51755 = cljs.core.nth.call(null, vec__51742__51753, 1, null);
      var offset_minutes__51756 = cljs.core.nth.call(null, vec__51742__51753, 2, null);
      var offset__51757 = offset_sign__51754 * (offset_hours__51755 * 60 + offset_minutes__51756);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__51728) ? 1970 : y__51746, cljs.core.not.call(null, months__51729) ? 1 : check__51720.call(null, 1, mo__51747, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__51730) ? 1 : check__51720.call(null, 1, d__51748, cljs.reader.days_in_month.call(null, mo__51747, cljs.reader.leap_year_QMARK_.call(null, y__51746)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__51731) ? 0 : check__51720.call(null, 0, h__51749, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__51732) ? 0 : check__51720.call(null, 0, m__51750, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__51733) ? 0 : check__51720.call(null, 0, s__51751, cljs.core._EQ_.call(null, m__51750, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__51734) ? 0 : check__51720.call(null, 
      0, ms__51752, 999, "timestamp millisecond field must be in range 0..999"), offset__51757], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____51769 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____51769)) {
    var vec__51770__51771 = temp__3971__auto____51769;
    var years__51772 = cljs.core.nth.call(null, vec__51770__51771, 0, null);
    var months__51773 = cljs.core.nth.call(null, vec__51770__51771, 1, null);
    var days__51774 = cljs.core.nth.call(null, vec__51770__51771, 2, null);
    var hours__51775 = cljs.core.nth.call(null, vec__51770__51771, 3, null);
    var minutes__51776 = cljs.core.nth.call(null, vec__51770__51771, 4, null);
    var seconds__51777 = cljs.core.nth.call(null, vec__51770__51771, 5, null);
    var ms__51778 = cljs.core.nth.call(null, vec__51770__51771, 6, null);
    var offset__51779 = cljs.core.nth.call(null, vec__51770__51771, 7, null);
    return new Date(Date.UTC(years__51772, months__51773 - 1, days__51774, hours__51775, minutes__51776, seconds__51777, ms__51778) - offset__51779 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__51783 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____51784 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__51783), null);
  if(cljs.core.truth_(temp__3971__auto____51784)) {
    var pfn__51785 = temp__3971__auto____51784;
    return pfn__51785.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__51783), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__51788 = cljs.core.name.call(null, tag);
  var old_parser__51789 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__51788, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__51788, f);
  return old_parser__51789
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__51792 = cljs.core.name.call(null, tag);
  var old_parser__51793 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__51792, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__51792);
  return old_parser__51793
};
goog.provide("hlisp.reader");
goog.require("cljs.core");
goog.require("cljs.reader");
hlisp.reader.empty_attrs = cljs.core.with_meta(cljs.core.list(cljs.core.List.EMPTY), cljs.core.hash_map("\ufdd0'line", 7));
hlisp.reader.valid_node_expr_QMARK_ = function valid_node_expr_QMARK_(expr) {
  var and__3822__auto____1074102 = cljs.core.seq_QMARK_.call(null, expr);
  if(and__3822__auto____1074102) {
    return cljs.core.symbol_QMARK_.call(null, cljs.core.first.call(null, expr))
  }else {
    return and__3822__auto____1074102
  }
};
hlisp.reader.valid_attrlist_QMARK_ = function valid_attrlist_QMARK_(attrs) {
  var and__3822__auto____1074104 = cljs.core.seq_QMARK_.call(null, attrs);
  if(and__3822__auto____1074104) {
    return cljs.core.seq_QMARK_.call(null, cljs.core.first.call(null, attrs))
  }else {
    return and__3822__auto____1074104
  }
};
hlisp.reader.text_node = function text_node(txt) {
  return cljs.core.list.call(null, cljs.core.symbol.call(null, "#text"), [cljs.core.str(txt)].join(""))
};
hlisp.reader.parse_symbol = function parse_symbol(expr) {
  if(cljs.core.symbol_QMARK_.call(null, expr)) {
    return cljs.core.list.call(null, expr, hlisp.reader.empty_attrs)
  }else {
    return null
  }
};
hlisp.reader.parse_text_node = function parse_text_node(expr) {
  if(cljs.core.string_QMARK_.call(null, expr)) {
    return hlisp.reader.text_node.call(null, expr)
  }else {
    return null
  }
};
hlisp.reader.parse_seqable_literal = function parse_seqable_literal(pred, valtag) {
  return function(expr) {
    if(cljs.core.truth_(pred.call(null, expr))) {
      var head__1074109 = cljs.core.first.call(null, expr);
      var tail__1074110 = cljs.core.rest.call(null, expr);
      var attrs__1074111 = cljs.core.truth_(hlisp.reader.valid_attrlist_QMARK_.call(null, head__1074109)) ? head__1074109 : hlisp.reader.empty_attrs;
      var items__1074112 = cljs.core._EQ_.call(null, hlisp.reader.empty_attrs, attrs__1074111) ? expr : tail__1074110;
      return cljs.core.concat.call(null, cljs.core.list.call(null, valtag, attrs__1074111), cljs.core.map.call(null, hlisp.reader.read_form, items__1074112))
    }else {
      return null
    }
  }
};
hlisp.reader.parse_atomic_literal = function parse_atomic_literal(pred, valtag) {
  return function(expr) {
    if(cljs.core.seq_QMARK_.call(null, expr)) {
      var vec__1074120__1074121 = expr;
      var tag__1074122 = cljs.core.nth.call(null, vec__1074120__1074121, 0, null);
      var thing__1074123 = cljs.core.nth.call(null, vec__1074120__1074121, 1, null);
      var and__3822__auto____1074124 = cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, expr));
      if(and__3822__auto____1074124) {
        var and__3822__auto____1074125 = cljs.core._EQ_.call(null, "\ufdd1'quote", tag__1074122);
        if(and__3822__auto____1074125) {
          var and__3822__auto____1074126 = pred.call(null, thing__1074123);
          if(cljs.core.truth_(and__3822__auto____1074126)) {
            return cljs.core.list.call(null, valtag, hlisp.reader.empty_attrs, hlisp.reader.text_node.call(null, [cljs.core.str(thing__1074123)].join("")))
          }else {
            return and__3822__auto____1074126
          }
        }else {
          return and__3822__auto____1074125
        }
      }else {
        return and__3822__auto____1074124
      }
    }else {
      return null
    }
  }
};
hlisp.reader.parse_bool_literal = function parse_bool_literal(expr) {
  var or__3824__auto____1074128 = hlisp.reader.parse_atomic_literal.call(null, cljs.core.true_QMARK_, "\ufdd1'val:true").call(null, expr);
  if(cljs.core.truth_(or__3824__auto____1074128)) {
    return or__3824__auto____1074128
  }else {
    return hlisp.reader.parse_atomic_literal.call(null, cljs.core.false_QMARK_, "\ufdd1'val:false").call(null, expr)
  }
};
hlisp.reader.parse_map_literal = function parse_map_literal(expr) {
  var temp__3974__auto____1074131 = hlisp.reader.parse_seqable_literal.call(null, cljs.core.map_QMARK_, "\ufdd1'val:map").call(null, expr);
  if(cljs.core.truth_(temp__3974__auto____1074131)) {
    var m__1074132 = temp__3974__auto____1074131;
    return cljs.core.concat.call(null, cljs.core.take.call(null, 2, m__1074132), cljs.core.mapcat.call(null, cljs.core.partial.call(null, cljs.core.drop, 2), cljs.core.drop.call(null, 2, m__1074132)))
  }else {
    return null
  }
};
hlisp.reader.parse_set_literal = function parse_set_literal(expr) {
  return hlisp.reader.parse_seqable_literal.call(null, cljs.core.set_QMARK_, "\ufdd1'val:set").call(null, expr)
};
hlisp.reader.parse_vector_literal = function parse_vector_literal(expr) {
  return hlisp.reader.parse_seqable_literal.call(null, cljs.core.vector_QMARK_, "\ufdd1'val:vec").call(null, expr)
};
hlisp.reader.parse_string_literal = function parse_string_literal(expr) {
  return hlisp.reader.parse_atomic_literal.call(null, cljs.core.string_QMARK_, "\ufdd1'val:str").call(null, expr)
};
hlisp.reader.parse_number_literal = function parse_number_literal(expr) {
  return hlisp.reader.parse_atomic_literal.call(null, cljs.core.number_QMARK_, "\ufdd1'val:num").call(null, expr)
};
hlisp.reader.parse_node = function parse_node(expr) {
  if(cljs.core.truth_(hlisp.reader.valid_node_expr_QMARK_.call(null, expr))) {
    var vec__1074138__1074139 = expr;
    var tag__1074140 = cljs.core.nth.call(null, vec__1074138__1074139, 0, null);
    var attrs__1074141 = cljs.core.nth.call(null, vec__1074138__1074139, 1, null);
    var children__1074142 = cljs.core.nthnext.call(null, vec__1074138__1074139, 2);
    if(cljs.core.truth_(hlisp.reader.valid_attrlist_QMARK_.call(null, attrs__1074141))) {
      return cljs.core.concat.call(null, cljs.core.list.call(null, tag__1074140, attrs__1074141), cljs.core.map.call(null, hlisp.reader.read_form, children__1074142))
    }else {
      return parse_node.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.concat.call(null, cljs.core.list.call(null, tag__1074140, hlisp.reader.empty_attrs, attrs__1074141), children__1074142)))
    }
  }else {
    return null
  }
};
hlisp.reader.read_form = function read_form(expr) {
  var or__3824__auto____1074152 = hlisp.reader.parse_symbol.call(null, expr);
  if(cljs.core.truth_(or__3824__auto____1074152)) {
    return or__3824__auto____1074152
  }else {
    var or__3824__auto____1074153 = hlisp.reader.parse_text_node.call(null, expr);
    if(cljs.core.truth_(or__3824__auto____1074153)) {
      return or__3824__auto____1074153
    }else {
      var or__3824__auto____1074154 = hlisp.reader.parse_bool_literal.call(null, expr);
      if(cljs.core.truth_(or__3824__auto____1074154)) {
        return or__3824__auto____1074154
      }else {
        var or__3824__auto____1074155 = hlisp.reader.parse_map_literal.call(null, expr);
        if(cljs.core.truth_(or__3824__auto____1074155)) {
          return or__3824__auto____1074155
        }else {
          var or__3824__auto____1074156 = hlisp.reader.parse_set_literal.call(null, expr);
          if(cljs.core.truth_(or__3824__auto____1074156)) {
            return or__3824__auto____1074156
          }else {
            var or__3824__auto____1074157 = hlisp.reader.parse_vector_literal.call(null, expr);
            if(cljs.core.truth_(or__3824__auto____1074157)) {
              return or__3824__auto____1074157
            }else {
              var or__3824__auto____1074158 = hlisp.reader.parse_string_literal.call(null, expr);
              if(cljs.core.truth_(or__3824__auto____1074158)) {
                return or__3824__auto____1074158
              }else {
                var or__3824__auto____1074159 = hlisp.reader.parse_number_literal.call(null, expr);
                if(cljs.core.truth_(or__3824__auto____1074159)) {
                  return or__3824__auto____1074159
                }else {
                  var or__3824__auto____1074160 = hlisp.reader.parse_node.call(null, expr);
                  if(cljs.core.truth_(or__3824__auto____1074160)) {
                    return or__3824__auto____1074160
                  }else {
                    if(false) {
                      return null
                    }else {
                      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("read-form: "), cljs.core.str(expr), cljs.core.str(" isn't a valid expression")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
hlisp.reader.read_forms = function read_forms(forms) {
  return cljs.core.map.call(null, hlisp.reader.read_form, forms)
};
hlisp.reader.read_string = function read_string(s) {
  return hlisp.reader.read_forms.call(null, cljs.reader.read_string.call(null, [cljs.core.str("("), cljs.core.str(s), cljs.core.str("\n)")].join("")))
};
hlisp.reader.readit = function readit(s) {
  return cljs.reader.read_string.call(null, s)
};
goog.provide("hlisp.util");
goog.require("cljs.core");
hlisp.util.zipfn = cljs.core.partial.call(null, cljs.core.partial, cljs.core.map, function() {
  var G__490523__delegate = function(p1__490521_SHARP_, rest__490522_SHARP_) {
    return cljs.core.apply.call(null, p1__490521_SHARP_, rest__490522_SHARP_)
  };
  var G__490523 = function(p1__490521_SHARP_, var_args) {
    var rest__490522_SHARP_ = null;
    if(goog.isDef(var_args)) {
      rest__490522_SHARP_ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__490523__delegate.call(this, p1__490521_SHARP_, rest__490522_SHARP_)
  };
  G__490523.cljs$lang$maxFixedArity = 1;
  G__490523.cljs$lang$applyTo = function(arglist__490524) {
    var p1__490521_SHARP_ = cljs.core.first(arglist__490524);
    var rest__490522_SHARP_ = cljs.core.rest(arglist__490524);
    return G__490523__delegate(p1__490521_SHARP_, rest__490522_SHARP_)
  };
  G__490523.cljs$lang$arity$variadic = G__490523__delegate;
  return G__490523
}());
hlisp.util.trans = cljs.core.partial.call(null, cljs.core.apply, cljs.core.map, cljs.core.list);
hlisp.util.funroll_body = cljs.core.partial.call(null, cljs.core.reduce, function(p1__490525_SHARP_, p2__490526_SHARP_) {
  return function() {
    var G__490528__delegate = function(args) {
      cljs.core.apply.call(null, p1__490525_SHARP_, args);
      return cljs.core.apply.call(null, p2__490526_SHARP_, args)
    };
    var G__490528 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__490528__delegate.call(this, args)
    };
    G__490528.cljs$lang$maxFixedArity = 0;
    G__490528.cljs$lang$applyTo = function(arglist__490529) {
      var args = cljs.core.seq(arglist__490529);
      return G__490528__delegate(args)
    };
    G__490528.cljs$lang$arity$variadic = G__490528__delegate;
    return G__490528
  }()
});
hlisp.util.funroll_seq = function funroll_seq(procs) {
  return function() {
    var G__490530__delegate = function(args) {
      return cljs.core.map.call(null, function(p1__490527_SHARP_) {
        return cljs.core.apply.call(null, p1__490527_SHARP_, args)
      }, procs)
    };
    var G__490530 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__490530__delegate.call(this, args)
    };
    G__490530.cljs$lang$maxFixedArity = 0;
    G__490530.cljs$lang$applyTo = function(arglist__490531) {
      var args = cljs.core.seq(arglist__490531);
      return G__490530__delegate(args)
    };
    G__490530.cljs$lang$arity$variadic = G__490530__delegate;
    return G__490530
  }()
};
hlisp.util.tee = function tee(arg) {
  console.log(";;", [cljs.core.str(arg)].join(""));
  return arg
};
goog.provide("hlisp.compiler");
goog.require("cljs.core");
goog.require("hlisp.hexp");
goog.require("hlisp.util");
goog.require("hlisp.hexp");
goog.require("hlisp.util");
goog.require("cljs.reader");
hlisp.compiler.read_attrs_pairs = function read_attrs_pairs(s) {
  return cljs.core.map.call(null, function(p1__1272274_SHARP_) {
    return cljs.core.list.call(null, cljs.core.first.call(null, p1__1272274_SHARP_), cljs.core.string_QMARK_.call(null, cljs.core.second.call(null, p1__1272274_SHARP_)) ? cljs.core.second.call(null, p1__1272274_SHARP_) : "")
  }, cljs.core.filter.call(null, function(p1__1272275_SHARP_) {
    return cljs.core.symbol_QMARK_.call(null, cljs.core.first.call(null, p1__1272275_SHARP_))
  }, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, s, cljs.core.concat.call(null, cljs.core.rest.call(null, s), cljs.core.list.call(null, cljs.core.last.call(null, s)))))))
};
hlisp.compiler.read_attrs = function read_attrs(s) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.vec, hlisp.compiler.read_attrs_pairs.call(null, s))))
};
hlisp.compiler.compile_form = function compile_form(p__1272276) {
  var vec__1272285__1272286 = p__1272276;
  var tagsym__1272287 = cljs.core.nth.call(null, vec__1272285__1272286, 0, null);
  var attrs__1272288 = cljs.core.nth.call(null, vec__1272285__1272286, 1, null);
  var children__1272289 = cljs.core.nthnext.call(null, vec__1272285__1272286, 2);
  var s__1272290 = vec__1272285__1272286;
  var tag__1272291 = [cljs.core.str(tagsym__1272287)].join("");
  var make_attrs__1272292 = cljs.core.comp.call(null, hlisp.compiler.read_attrs, cljs.core.first);
  if(cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, tag__1272291))) {
    return hlisp.hexp.make_text_hexp.call(null, tag__1272291, attrs__1272288)
  }else {
    if(cljs.core._EQ_.call(null, "val:str", tag__1272291)) {
      return hlisp.hexp.make_data_hexp.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.mapv.call(null, cljs.core.second, children__1272289)))
    }else {
      if(cljs.core._EQ_.call(null, "val:nil", tag__1272291)) {
        return hlisp.hexp.make_data_hexp.call(null, null)
      }else {
        if(cljs.core._EQ_.call(null, "val:true", tag__1272291)) {
          return hlisp.hexp.make_data_hexp.call(null, true)
        }else {
          if(cljs.core._EQ_.call(null, "val:false", tag__1272291)) {
            return hlisp.hexp.make_data_hexp.call(null, false)
          }else {
            if("\ufdd0'else") {
              return hlisp.hexp.make_node_hexp.call(null, tag__1272291, make_attrs__1272292.call(null, attrs__1272288), cljs.core.map.call(null, compile_form, children__1272289))
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
hlisp.compiler.compile_forms = function compile_forms(forms) {
  return cljs.core.map.call(null, hlisp.compiler.compile_form, forms)
};
hlisp.compiler.decompile_hexp = function decompile_hexp(p__1272293) {
  var map__1272304__1272305 = p__1272293;
  var map__1272304__1272306 = cljs.core.seq_QMARK_.call(null, map__1272304__1272305) ? cljs.core.apply.call(null, cljs.core.hash_map, map__1272304__1272305) : map__1272304__1272305;
  var hexp__1272307 = map__1272304__1272306;
  var ids__1272308 = cljs.core._lookup.call(null, map__1272304__1272306, "\ufdd0'ids", null);
  var text__1272309 = cljs.core._lookup.call(null, map__1272304__1272306, "\ufdd0'text", null);
  var children__1272310 = cljs.core._lookup.call(null, map__1272304__1272306, "\ufdd0'children", null);
  var attrs__1272311 = cljs.core._lookup.call(null, map__1272304__1272306, "\ufdd0'attrs", null);
  var tag__1272312 = cljs.core._lookup.call(null, map__1272304__1272306, "\ufdd0'tag", null);
  if(cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, tag__1272312))) {
    return cljs.core.list.call(null, cljs.core.symbol.call(null, tag__1272312), text__1272309)
  }else {
    if(cljs.core.string_QMARK_.call(null, tag__1272312)) {
      var attrmap__1272313 = cljs.core.seq.call(null, ids__1272308) ? cljs.core.assoc.call(null, attrs__1272311, "\ufdd0'hl", clojure.string.join.call(null, " ", ids__1272308)) : attrs__1272311;
      return cljs.core.concat.call(null, cljs.core.list.call(null, cljs.core.symbol.call(null, tag__1272312), cljs.core.list.call(null, cljs.core.mapcat.call(null, hlisp.util.zipfn.call(null, cljs.core.PersistentVector.fromArray([cljs.core.symbol, cljs.core.str], true)), attrmap__1272313))), cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, decompile_hexp, children__1272310)))
    }else {
      return null
    }
  }
};
hlisp.compiler.decompile_hexps = function decompile_hexps(hexps) {
  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, hlisp.compiler.decompile_hexp, hexps))
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__51796 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__51796, cljs.core.remove.call(null, function(p1__51794_SHARP_) {
    return max__51796 === p1__51794_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__51800__delegate = function(s1, s2, sets) {
      var bubbled_sets__51799 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__51799), cljs.core.rest.call(null, bubbled_sets__51799))
    };
    var G__51800 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__51800__delegate.call(this, s1, s2, sets)
    };
    G__51800.cljs$lang$maxFixedArity = 2;
    G__51800.cljs$lang$applyTo = function(arglist__51801) {
      var s1 = cljs.core.first(arglist__51801);
      var s2 = cljs.core.first(cljs.core.next(arglist__51801));
      var sets = cljs.core.rest(cljs.core.next(arglist__51801));
      return G__51800__delegate(s1, s2, sets)
    };
    G__51800.cljs$lang$arity$variadic = G__51800__delegate;
    return G__51800
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__51804 = s2;
        var G__51805 = s1;
        s1 = G__51804;
        s2 = G__51805;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__51806__delegate = function(s1, s2, sets) {
      var bubbled_sets__51803 = clojure.set.bubble_max_key.call(null, function(p1__51797_SHARP_) {
        return-cljs.core.count.call(null, p1__51797_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__51803), cljs.core.rest.call(null, bubbled_sets__51803))
    };
    var G__51806 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__51806__delegate.call(this, s1, s2, sets)
    };
    G__51806.cljs$lang$maxFixedArity = 2;
    G__51806.cljs$lang$applyTo = function(arglist__51807) {
      var s1 = cljs.core.first(arglist__51807);
      var s2 = cljs.core.first(cljs.core.next(arglist__51807));
      var sets = cljs.core.rest(cljs.core.next(arglist__51807));
      return G__51806__delegate(s1, s2, sets)
    };
    G__51806.cljs$lang$arity$variadic = G__51806__delegate;
    return G__51806
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__51808__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__51808 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__51808__delegate.call(this, s1, s2, sets)
    };
    G__51808.cljs$lang$maxFixedArity = 2;
    G__51808.cljs$lang$applyTo = function(arglist__51809) {
      var s1 = cljs.core.first(arglist__51809);
      var s2 = cljs.core.first(cljs.core.next(arglist__51809));
      var sets = cljs.core.rest(cljs.core.next(arglist__51809));
      return G__51808__delegate(s1, s2, sets)
    };
    G__51808.cljs$lang$arity$variadic = G__51808__delegate;
    return G__51808
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__51810_SHARP_) {
    return cljs.core.select_keys.call(null, p1__51810_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__51818) {
    var vec__51819__51820 = p__51818;
    var old__51821 = cljs.core.nth.call(null, vec__51819__51820, 0, null);
    var new__51822 = cljs.core.nth.call(null, vec__51819__51820, 1, null);
    if(function() {
      var and__3822__auto____51823 = cljs.core.not_EQ_.call(null, old__51821, new__51822);
      if(and__3822__auto____51823) {
        return cljs.core.contains_QMARK_.call(null, m, old__51821)
      }else {
        return and__3822__auto____51823
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new__51822, cljs.core._lookup.call(null, m, old__51821, null)), old__51821)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__51811_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__51811_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__51825 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__51825, cljs.core.conj.call(null, cljs.core._lookup.call(null, m, ik__51825, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__51835) {
    var vec__51836__51837 = p__51835;
    var k__51838 = cljs.core.nth.call(null, vec__51836__51837, 0, null);
    var v__51839 = cljs.core.nth.call(null, vec__51836__51837, 1, null);
    return cljs.core.assoc.call(null, m, v__51839, k__51838)
  }, cljs.core.ObjMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3822__auto____51856 = cljs.core.seq.call(null, xrel);
      if(and__3822__auto____51856) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____51856
      }
    }()) {
      var ks__51858 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__51857__51859 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r__51860 = cljs.core.nth.call(null, vec__51857__51859, 0, null);
      var s__51861 = cljs.core.nth.call(null, vec__51857__51859, 1, null);
      var idx__51862 = clojure.set.index.call(null, r__51860, ks__51858);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__51863 = idx__51862.call(null, cljs.core.select_keys.call(null, x, ks__51858));
        if(cljs.core.truth_(found__51863)) {
          return cljs.core.reduce.call(null, function(p1__51826_SHARP_, p2__51827_SHARP_) {
            return cljs.core.conj.call(null, p1__51826_SHARP_, cljs.core.merge.call(null, p2__51827_SHARP_, x))
          }, ret, found__51863)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s__51861)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__51864__51865 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r__51866 = cljs.core.nth.call(null, vec__51864__51865, 0, null);
    var s__51867 = cljs.core.nth.call(null, vec__51864__51865, 1, null);
    var k__51868 = cljs.core.nth.call(null, vec__51864__51865, 2, null);
    var idx__51869 = clojure.set.index.call(null, r__51866, cljs.core.vals.call(null, k__51868));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__51870 = idx__51869.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__51868)), k__51868));
      if(cljs.core.truth_(found__51870)) {
        return cljs.core.reduce.call(null, function(p1__51828_SHARP_, p2__51829_SHARP_) {
          return cljs.core.conj.call(null, p1__51828_SHARP_, cljs.core.merge.call(null, p2__51829_SHARP_, x))
        }, ret, found__51870)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s__51867)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____51873 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____51873) {
    return cljs.core.every_QMARK_.call(null, function(p1__51840_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__51840_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____51873
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____51875 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____51875) {
    return cljs.core.every_QMARK_.call(null, function(p1__51871_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__51871_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____51875
  }
};
goog.provide("hlisp.interpreter");
goog.require("cljs.core");
goog.require("hlisp.reader");
goog.require("hlisp.compiler");
goog.require("hlisp.util");
goog.require("hlisp.hexp");
goog.require("hlisp.hexp");
goog.require("hlisp.reader");
goog.require("hlisp.compiler");
goog.require("hlisp.util");
goog.require("clojure.set");
hlisp.interpreter._STAR_global_env_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
hlisp.interpreter.bind_env = cljs.core.into;
hlisp.interpreter.bind_global_BANG_ = cljs.core.partial.call(null, cljs.core.swap_BANG_, hlisp.interpreter._STAR_global_env_STAR_, cljs.core.into);
hlisp.interpreter.resolve_env = function resolve_env(env, name) {
  var or__3824__auto____1268285 = cljs.core._lookup.call(null, env, name, null);
  if(cljs.core.truth_(or__3824__auto____1268285)) {
    return or__3824__auto____1268285
  }else {
    return cljs.core._lookup.call(null, cljs.core.deref.call(null, hlisp.interpreter._STAR_global_env_STAR_), name, null)
  }
};
hlisp.interpreter.html_tags = cljs.core.PersistentHashSet.fromArray(["dd", "big", "col", "head", "sub", "tt", "basefont", "a", "output", "b", "figcaption", "body", "rt", "details", "tfoot", "nav", "acronym", "pre", "img", "form", "iframe", "figure", "meta", "section", "caption", "summary", "bdi", "small", "noframes", "wbr", "var", "dl", "em", "fieldset", "isindex", "datalist", "i", "h1", "meter", "h2", "hr", "span", "data", "input", "del", "h3", "script", "track", "command", "html", "dfn", "h4", 
"noscript", "optgroup", "legend", "bdo", "dir", "param", "area", "h5", "frame", "kbd", "code", "progress", "header", "mark", "time", "h6", "sup", "table", "ins", "font", "blockquote", "br", "p", "dt", "td", "abbr", "q", "samp", "div", "keygen", "style", "base", "button", "strike", "s", "thead", "th", "label", "address", "center", "u", "option", "eventsource", "frameset", "tbody", "article", "audio", "cite", "ul", "strong", "hgroup", "aside", "canvas", "title", "embed", "applet", "ruby", "textarea", 
"link", "source", "video", "footer", "select", "map", "li", "ol", "rp", "tr", "colgroup", "menu", "object"]);
hlisp.interpreter.html_text_tags = cljs.core.PersistentHashSet.fromArray(["#text", "#comment"]);
hlisp.interpreter.hlisp_boxed_tags = cljs.core.PersistentHashSet.fromArray(["val:map", "val:seq", "val:true", "val:set", "val:false", "val:num", "val:nil", "val:str", "val:vec"]);
hlisp.interpreter.self_evaluating_tags = clojure.set.union.call(null, hlisp.interpreter.html_tags, hlisp.interpreter.html_text_tags, hlisp.interpreter.hlisp_boxed_tags);
hlisp.interpreter.elems = function elems(hexps) {
  return cljs.core.remove.call(null, hlisp.interpreter.text_hexp_QMARK_, hexps)
};
hlisp.interpreter.text_hexp_QMARK_ = function text_hexp_QMARK_(hexp) {
  return cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, (new cljs.core.Keyword("\ufdd0'tag")).call(null, hexp)))
};
hlisp.interpreter.self_evaluating_hexp_QMARK_ = function self_evaluating_hexp_QMARK_(hexp) {
  var or__3824__auto____1268288 = cljs.core.contains_QMARK_.call(null, hlisp.interpreter.self_evaluating_tags, (new cljs.core.Keyword("\ufdd0'tag")).call(null, hexp));
  if(or__3824__auto____1268288) {
    return or__3824__auto____1268288
  }else {
    var or__3824__auto____1268289 = hlisp.interpreter.text_hexp_QMARK_.call(null, hexp);
    if(cljs.core.truth_(or__3824__auto____1268289)) {
      return or__3824__auto____1268289
    }else {
      return hlisp.interpreter.data_hexp_QMARK_.call(null, hexp)
    }
  }
};
hlisp.interpreter.has_tag_QMARK_ = function has_tag_QMARK_(tag, hexp) {
  return cljs.core._EQ_.call(null, tag, (new cljs.core.Keyword("\ufdd0'tag")).call(null, hexp))
};
hlisp.interpreter.quoted_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "quote");
hlisp.interpreter.syntax_quoted_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "syntax-quote");
hlisp.interpreter.def_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "def");
hlisp.interpreter.if_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "if");
hlisp.interpreter.do_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "do");
hlisp.interpreter.macro_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "macro");
hlisp.interpreter.data_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "\ufdd0'data");
hlisp.interpreter.let_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "let");
hlisp.interpreter.fn_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "fn");
hlisp.interpreter.truthy_hexp_QMARK_ = function truthy_hexp_QMARK_(hexp) {
  var map__1268298__1268299 = hexp;
  var map__1268298__1268300 = cljs.core.seq_QMARK_.call(null, map__1268298__1268299) ? cljs.core.apply.call(null, cljs.core.hash_map, map__1268298__1268299) : map__1268298__1268299;
  var data__1268301 = cljs.core._lookup.call(null, map__1268298__1268300, "\ufdd0'data", null);
  var tag__1268302 = cljs.core._lookup.call(null, map__1268298__1268300, "\ufdd0'tag", null);
  var or__3824__auto____1268303 = !cljs.core._EQ_.call(null, "\ufdd0'data", tag__1268302);
  if(or__3824__auto____1268303) {
    return or__3824__auto____1268303
  }else {
    var and__3822__auto____1268304 = cljs.core.not_EQ_.call(null, null, data__1268301);
    if(and__3822__auto____1268304) {
      return cljs.core.not_EQ_.call(null, false, data__1268301)
    }else {
      return and__3822__auto____1268304
    }
  }
};
hlisp.interpreter.analyze_self_evaluating = function analyze_self_evaluating(hexp) {
  if(cljs.core.truth_(hlisp.interpreter.self_evaluating_hexp_QMARK_.call(null, hexp))) {
    var children__1268306 = cljs.core.mapv.call(null, hlisp.interpreter.analyze, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp));
    return function(env) {
      return cljs.core.assoc.call(null, hexp, "\ufdd0'children", cljs.core.mapv.call(null, function(p1__1268290_SHARP_) {
        return p1__1268290_SHARP_.call(null, env)
      }, children__1268306))
    }
  }else {
    return null
  }
};
hlisp.interpreter.analyze_quoted = function analyze_quoted(hexp) {
  if(cljs.core.truth_(hlisp.interpreter.quoted_hexp_QMARK_.call(null, hexp))) {
    return function(env) {
      return cljs.core.first.call(null, hlisp.interpreter.elems.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp)))
    }
  }else {
    return null
  }
};
hlisp.interpreter.analyze_syntax_quoted = function analyze_syntax_quoted(hexp) {
  if(cljs.core.truth_(hlisp.interpreter.syntax_quoted_hexp_QMARK_.call(null, hexp))) {
    return hlisp.interpreter.analyze.call(null, cljs.core.first.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hlisp.interpreter.syntax_quote.call(null, cljs.core.first.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp))))))
  }else {
    return null
  }
};
hlisp.interpreter.analyze_def = function analyze_def(hexp) {
  if(cljs.core.truth_(hlisp.interpreter.def_hexp_QMARK_.call(null, hexp))) {
    var children__1268314 = hlisp.interpreter.elems.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp));
    var vec__1268313__1268315 = hlisp.util.zipfn.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'tag", hlisp.interpreter.analyze], true)).call(null, children__1268314);
    var name__1268316 = cljs.core.nth.call(null, vec__1268313__1268315, 0, null);
    var proc__1268317 = cljs.core.nth.call(null, vec__1268313__1268315, 1, null);
    return function(env) {
      var val__1268318 = proc__1268317.call(null, env);
      hlisp.interpreter.bind_global_BANG_.call(null, cljs.core.PersistentArrayMap.fromArrays([name__1268316], [val__1268318]));
      return hlisp.hexp.make_data_hexp.call(null, null)
    }
  }else {
    return null
  }
};
hlisp.interpreter.analyze_if = function analyze_if(hexp) {
  if(cljs.core.truth_(hlisp.interpreter.if_hexp_QMARK_.call(null, hexp))) {
    var vec__1268324__1268325 = hlisp.interpreter.analyze_all.call(null, hlisp.interpreter.elems.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp)));
    var pred__1268326 = cljs.core.nth.call(null, vec__1268324__1268325, 0, null);
    var consq__1268327 = cljs.core.nth.call(null, vec__1268324__1268325, 1, null);
    var alt__1268328 = cljs.core.nth.call(null, vec__1268324__1268325, 2, null);
    return function(env) {
      if(cljs.core.truth_(hlisp.interpreter.truthy_hexp_QMARK_.call(null, pred__1268326.call(null, env)))) {
        return consq__1268327.call(null, env)
      }else {
        if(cljs.core.truth_(alt__1268328)) {
          return alt__1268328.call(null, env)
        }else {
          return hlisp.hexp.make_data_hexp.call(null, null)
        }
      }
    }
  }else {
    return null
  }
};
hlisp.interpreter.analyze_do = function analyze_do(hexp) {
  if(cljs.core.truth_(hlisp.interpreter.do_hexp_QMARK_.call(null, hexp))) {
    return hlisp.interpreter.analyze_body.call(null, hlisp.interpreter.elems.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp)))
  }else {
    return null
  }
};
hlisp.interpreter.analyze_let = function analyze_let(hexp) {
  if(cljs.core.truth_(hlisp.interpreter.let_hexp_QMARK_.call(null, hexp))) {
    var map__1268346__1268349 = hexp;
    var map__1268346__1268350 = cljs.core.seq_QMARK_.call(null, map__1268346__1268349) ? cljs.core.apply.call(null, cljs.core.hash_map, map__1268346__1268349) : map__1268346__1268349;
    var children__1268351 = cljs.core._lookup.call(null, map__1268346__1268350, "\ufdd0'children", null);
    var vec__1268347__1268352 = hlisp.interpreter.elems.call(null, children__1268351);
    var map__1268348__1268353 = cljs.core.nth.call(null, vec__1268347__1268352, 0, null);
    var map__1268348__1268354 = cljs.core.seq_QMARK_.call(null, map__1268348__1268353) ? cljs.core.apply.call(null, cljs.core.hash_map, map__1268348__1268353) : map__1268348__1268353;
    var bind_pairs__1268355 = cljs.core._lookup.call(null, map__1268348__1268354, "\ufdd0'children", null);
    var body__1268356 = cljs.core.nthnext.call(null, vec__1268347__1268352, 1);
    var nbind__1268357 = cljs.core.count.call(null, bind_pairs__1268355);
    if(cljs.core.even_QMARK_.call(null, nbind__1268357)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("odd number of bindings for let"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'even?", "\ufdd1'nbind"), cljs.core.hash_map("\ufdd0'line", 133))))].join(""));
    }
    if(0 < nbind__1268357) {
      var wrap_param__1268358 = cljs.core.PersistentVector.fromArray([hlisp.hexp.make_node_hexp.call(null, "val:vec", cljs.core.ObjMap.EMPTY, cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, bind_pairs__1268355)], true))], true);
      var wrap_arg__1268359 = cljs.core.PersistentVector.fromArray([cljs.core.second.call(null, bind_pairs__1268355)], true);
      var next_bind__1268360 = cljs.core.PersistentVector.fromArray([hlisp.hexp.make_node_hexp.call(null, "val:vec", cljs.core.ObjMap.EMPTY, cljs.core.vec.call(null, cljs.core.drop.call(null, 2, bind_pairs__1268355)))], true);
      var next_let__1268361 = cljs.core.PersistentVector.fromArray([hlisp.hexp.make_node_hexp.call(null, "let", cljs.core.ObjMap.EMPTY, cljs.core.into.call(null, next_bind__1268360, cljs.core.vec.call(null, body__1268356)))], true);
      var wrap_fn__1268362 = cljs.core.PersistentVector.fromArray([hlisp.hexp.make_node_hexp.call(null, "fn", cljs.core.ObjMap.EMPTY, cljs.core.into.call(null, wrap_param__1268358, next_let__1268361))], true);
      return hlisp.interpreter.analyze.call(null, hlisp.hexp.make_node_hexp.call(null, "call", cljs.core.ObjMap.EMPTY, cljs.core.into.call(null, wrap_fn__1268362, wrap_arg__1268359)))
    }else {
      return hlisp.interpreter.analyze_body.call(null, body__1268356)
    }
  }else {
    return null
  }
};
hlisp.interpreter.analyze_fn = function analyze_fn(hexp) {
  var temp__3974__auto____1268372 = cljs.core.truth_(hlisp.interpreter.fn_hexp_QMARK_.call(null, hexp)) ? "\ufdd0'proc" : cljs.core.truth_(hlisp.interpreter.macro_hexp_QMARK_.call(null, hexp)) ? "\ufdd0'macro" : null;
  if(cljs.core.truth_(temp__3974__auto____1268372)) {
    var fn_type__1268373 = temp__3974__auto____1268372;
    var vec__1268374__1268375 = hlisp.interpreter.elems.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp));
    var c_params__1268376 = cljs.core.nth.call(null, vec__1268374__1268375, 0, null);
    var body__1268377 = cljs.core.nthnext.call(null, vec__1268374__1268375, 1);
    var params__1268378 = cljs.core.mapv.call(null, "\ufdd0'tag", (new cljs.core.Keyword("\ufdd0'children")).call(null, c_params__1268376));
    var attr_params__1268379 = (new cljs.core.Keyword("\ufdd0'attrs")).call(null, c_params__1268376);
    var proc__1268380 = hlisp.interpreter.analyze_body.call(null, body__1268377);
    if(cljs.core.seq.call(null, body__1268377)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("empty body"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'seq", "\ufdd1'body"), cljs.core.hash_map("\ufdd0'line", 149))))].join(""));
    }
    return function(env) {
      return hlisp.hexp.make_proc_hexp.call(null, fn_type__1268373, attr_params__1268379, params__1268378, env, proc__1268380)
    }
  }else {
    return null
  }
};
hlisp.interpreter.analyze_node = function analyze_node(hexp) {
  var map__1268391__1268392 = hexp;
  var map__1268391__1268393 = cljs.core.seq_QMARK_.call(null, map__1268391__1268392) ? cljs.core.apply.call(null, cljs.core.hash_map, map__1268391__1268392) : map__1268391__1268392;
  var children__1268394 = cljs.core._lookup.call(null, map__1268391__1268393, "\ufdd0'children", null);
  var attrs__1268395 = cljs.core._lookup.call(null, map__1268391__1268393, "\ufdd0'attrs", null);
  var tag__1268396 = cljs.core._lookup.call(null, map__1268391__1268393, "\ufdd0'tag", null);
  var form__1268397 = hlisp.interpreter.resolve_env.call(null, cljs.core.ObjMap.EMPTY, tag__1268396);
  if(cljs.core._EQ_.call(null, "\ufdd0'macro", tag__1268396)) {
    return hlisp.interpreter.analyze.call(null, hlisp.interpreter.apply_STAR_.call(null, form__1268397, attrs__1268395, children__1268394))
  }else {
    var args__1268398 = hlisp.interpreter.analyze_seq.call(null, children__1268394);
    return function(env) {
      var proc__1268399 = hlisp.interpreter.resolve_env.call(null, env, tag__1268396);
      var argv__1268400 = args__1268398.call(null, env);
      if(cljs.core.truth_(proc__1268399)) {
      }else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("eval: unbound variable "), cljs.core.str(tag__1268396)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, "\ufdd1'proc"))].join(""));
      }
      return hlisp.interpreter.apply_STAR_.call(null, proc__1268399, attrs__1268395, args__1268398.call(null, env))
    }
  }
};
hlisp.interpreter.analyze = function analyze(hexp) {
  var or__3824__auto____1268409 = hlisp.interpreter.analyze_self_evaluating.call(null, hexp);
  if(cljs.core.truth_(or__3824__auto____1268409)) {
    return or__3824__auto____1268409
  }else {
    var or__3824__auto____1268410 = hlisp.interpreter.analyze_quoted.call(null, hexp);
    if(cljs.core.truth_(or__3824__auto____1268410)) {
      return or__3824__auto____1268410
    }else {
      var or__3824__auto____1268411 = hlisp.interpreter.analyze_syntax_quoted.call(null, hexp);
      if(cljs.core.truth_(or__3824__auto____1268411)) {
        return or__3824__auto____1268411
      }else {
        var or__3824__auto____1268412 = hlisp.interpreter.analyze_def.call(null, hexp);
        if(cljs.core.truth_(or__3824__auto____1268412)) {
          return or__3824__auto____1268412
        }else {
          var or__3824__auto____1268413 = hlisp.interpreter.analyze_if.call(null, hexp);
          if(cljs.core.truth_(or__3824__auto____1268413)) {
            return or__3824__auto____1268413
          }else {
            var or__3824__auto____1268414 = hlisp.interpreter.analyze_do.call(null, hexp);
            if(cljs.core.truth_(or__3824__auto____1268414)) {
              return or__3824__auto____1268414
            }else {
              var or__3824__auto____1268415 = hlisp.interpreter.analyze_let.call(null, hexp);
              if(cljs.core.truth_(or__3824__auto____1268415)) {
                return or__3824__auto____1268415
              }else {
                var or__3824__auto____1268416 = hlisp.interpreter.analyze_fn.call(null, hexp);
                if(cljs.core.truth_(or__3824__auto____1268416)) {
                  return or__3824__auto____1268416
                }else {
                  return hlisp.interpreter.analyze_node.call(null, hexp)
                }
              }
            }
          }
        }
      }
    }
  }
};
hlisp.interpreter.analyze_all = cljs.core.partial.call(null, cljs.core.map, hlisp.interpreter.analyze);
hlisp.interpreter.analyze_body = cljs.core.comp.call(null, hlisp.util.funroll_body, hlisp.interpreter.analyze_all);
hlisp.interpreter.analyze_seq = cljs.core.comp.call(null, hlisp.util.funroll_seq, hlisp.interpreter.analyze_all);
hlisp.interpreter.analyze_forms = cljs.core.comp.call(null, hlisp.interpreter.analyze_seq, hlisp.compiler.compile_forms);
hlisp.interpreter.syntax_quote_list = function syntax_quote_list(hexp) {
  var a__1268420 = hlisp.hexp.make_hexp.call(null, "concat");
  var b__1268421 = cljs.core.PersistentVector.fromArray([hlisp.hexp.make_hexp.call(null, "call"), hlisp.interpreter.syntax_quote.call(null, hlisp.hexp.make_hexp.call(null, (new cljs.core.Keyword("\ufdd0'tag")).call(null, hexp)))], true);
  var c__1268422 = cljs.core.mapv.call(null, hlisp.interpreter.syntax_quote, hlisp.interpreter.elems.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp)));
  return cljs.core.assoc.call(null, a__1268420, "\ufdd0'children", cljs.core.into.call(null, b__1268421, c__1268422))
};
hlisp.interpreter.syntax_quote = function syntax_quote(p__1268423) {
  var map__1268431__1268432 = p__1268423;
  var map__1268431__1268433 = cljs.core.seq_QMARK_.call(null, map__1268431__1268432) ? cljs.core.apply.call(null, cljs.core.hash_map, map__1268431__1268432) : map__1268431__1268432;
  var hexp__1268434 = map__1268431__1268433;
  var children__1268435 = cljs.core._lookup.call(null, map__1268431__1268433, "\ufdd0'children", null);
  var tag__1268436 = cljs.core._lookup.call(null, map__1268431__1268433, "\ufdd0'tag", null);
  var child_args__1268437 = hlisp.interpreter.elems.call(null, children__1268435);
  if(cljs.core._EQ_.call(null, "unquote-splicing", tag__1268436)) {
    return cljs.core.first.call(null, child_args__1268437)
  }else {
    if(cljs.core._EQ_.call(null, "unquote", tag__1268436)) {
      return hlisp.hexp.make_node_hexp.call(null, "val:seq", cljs.core.ObjMap.EMPTY, cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, child_args__1268437)], true))
    }else {
      if(cljs.core.not.call(null, cljs.core.seq.call(null, children__1268435))) {
        return hlisp.hexp.make_node_hexp.call(null, "val:seq", cljs.core.ObjMap.EMPTY, cljs.core.PersistentVector.fromArray([hlisp.hexp.make_node_hexp.call(null, "quote", cljs.core.ObjMap.EMPTY, cljs.core.PersistentVector.fromArray([hexp__1268434], true))], true))
      }else {
        if("\ufdd0'else") {
          return hlisp.hexp.make_node_hexp.call(null, "val:seq", cljs.core.ObjMap.EMPTY, cljs.core.PersistentVector.fromArray([hlisp.interpreter.syntax_quote_list.call(null, hexp__1268434)], true))
        }else {
          return null
        }
      }
    }
  }
};
hlisp.interpreter.sq_test = function sq_test(form) {
  return cljs.core.nth.call(null, cljs.core.first.call(null, hlisp.compiler.decompile_hexps.call(null, cljs.core.list.call(null, hlisp.interpreter.syntax_quote.call(null, cljs.core.first.call(null, hlisp.compiler.compile_forms.call(null, hlisp.reader.read_forms.call(null, cljs.core.list.call(null, form)))))))), 2)
};
hlisp.interpreter.filter_ids = function filter_ids(hexps) {
  return cljs.core.map.call(null, function(p1__1268438_SHARP_) {
    if(cljs.core.truth_(hlisp.interpreter.self_evaluating_hexp_QMARK_.call(null, p1__1268438_SHARP_))) {
      return p1__1268438_SHARP_
    }else {
      return cljs.core.assoc.call(null, p1__1268438_SHARP_, "\ufdd0'ids", cljs.core.PersistentVector.EMPTY)
    }
  }, hexps)
};
hlisp.interpreter.eval_STAR_ = function eval_STAR_(forms) {
  return hlisp.compiler.decompile_hexps.call(null, hlisp.interpreter.filter_ids.call(null, hlisp.interpreter.analyze_forms.call(null, forms).call(null, cljs.core.ObjMap.EMPTY)))
};
hlisp.interpreter.parse_bindings = function parse_bindings(params, args) {
  var k__1268443 = cljs.core.first.call(null, params);
  var v__1268444 = cljs.core.first.call(null, args);
  if(cljs.core._EQ_.call(null, "&", k__1268443)) {
    return parse_bindings.call(null, cljs.core.rest.call(null, params), cljs.core.list.call(null, hlisp.hexp.make_seq_hexp.call(null, args)))
  }else {
    if(cljs.core.truth_(function() {
      var and__3822__auto____1268445 = k__1268443;
      if(cljs.core.truth_(and__3822__auto____1268445)) {
        return v__1268444
      }else {
        return and__3822__auto____1268445
      }
    }())) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.fromArrays([k__1268443], [v__1268444]), parse_bindings.call(null, cljs.core.rest.call(null, params), cljs.core.rest.call(null, args)))
    }else {
      if(cljs.core.truth_(function() {
        var or__3824__auto____1268446 = k__1268443;
        if(cljs.core.truth_(or__3824__auto____1268446)) {
          return or__3824__auto____1268446
        }else {
          return v__1268444
        }
      }())) {
        if(false) {
          return null
        }else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("arity mismatch"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
        }
      }else {
        return null
      }
    }
  }
};
hlisp.interpreter.apply_STAR_ = function apply_STAR_(hexp, attr_args, args) {
  var map__1268459__1268460 = hexp;
  var map__1268459__1268461 = cljs.core.seq_QMARK_.call(null, map__1268459__1268460) ? cljs.core.apply.call(null, cljs.core.hash_map, map__1268459__1268460) : map__1268459__1268460;
  var children__1268462 = cljs.core._lookup.call(null, map__1268459__1268461, "\ufdd0'children", null);
  var env__1268463 = cljs.core._lookup.call(null, map__1268459__1268461, "\ufdd0'env", null);
  var attr_params__1268464 = cljs.core._lookup.call(null, map__1268459__1268461, "\ufdd0'attr-params", null);
  var params__1268465 = cljs.core._lookup.call(null, map__1268459__1268461, "\ufdd0'params", null);
  var proc__1268466 = cljs.core._lookup.call(null, map__1268459__1268461, "\ufdd0'proc", null);
  var attrs__1268467 = cljs.core._lookup.call(null, map__1268459__1268461, "\ufdd0'attrs", null);
  var tag__1268468 = cljs.core._lookup.call(null, map__1268459__1268461, "\ufdd0'tag", null);
  if(function() {
    var or__3824__auto____1268469 = cljs.core.string_QMARK_.call(null, tag__1268468);
    if(or__3824__auto____1268469) {
      return or__3824__auto____1268469
    }else {
      return cljs.core.seq.call(null, args) == null
    }
  }()) {
    return cljs.core.update_in.call(null, cljs.core.update_in.call(null, hexp, cljs.core.PersistentVector.fromArray(["\ufdd0'children"], true), cljs.core.into, args), cljs.core.PersistentVector.fromArray(["\ufdd0'attrs"], true), cljs.core.into, attr_args)
  }else {
    if(cljs.core._EQ_.call(null, "\ufdd0'prim", tag__1268468)) {
      return proc__1268466.call(null, attr_args, hlisp.interpreter.elems.call(null, args))
    }else {
      if(function() {
        var or__3824__auto____1268470 = cljs.core._EQ_.call(null, "\ufdd0'macro", tag__1268468);
        if(or__3824__auto____1268470) {
          return or__3824__auto____1268470
        }else {
          return cljs.core._EQ_.call(null, "\ufdd0'proc", tag__1268468)
        }
      }()) {
        return proc__1268466.call(null, hlisp.interpreter.bind_env.call(null, env__1268463, hlisp.interpreter.parse_bindings.call(null, params__1268465, hlisp.interpreter.elems.call(null, args))))
      }else {
        return null
      }
    }
  }
};
hlisp.interpreter.bind_primitive_BANG_ = function bind_primitive_BANG_(prims) {
  return hlisp.interpreter.bind_global_BANG_.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.mapv.call(null, cljs.core.comp.call(null, cljs.core.vec, hlisp.util.zipfn.call(null, cljs.core.PersistentVector.fromArray([cljs.core.str, hlisp.hexp.make_prim_hexp], true))), cljs.core.partition.call(null, 2, prims))))
};
goog.provide("hlisp.primitives");
goog.require("cljs.core");
goog.require("hlisp.util");
goog.require("hlisp.hexp");
goog.require("hlisp.interpreter");
goog.require("hlisp.hexp");
goog.require("hlisp.interpreter");
goog.require("hlisp.util");
goog.require("jayq.util");
goog.require("jayq.core");
hlisp.primitives.filter_e = function filter_e(id) {
  return function(v) {
    return 0 < jayq.core.$.call(null, v.target).parentsUntil("body").andSelf().filter([cljs.core.str("[hl~='"), cljs.core.str(id), cljs.core.str("']")].join("")).size()
  }
};
hlisp.primitives.prims = cljs.core.PersistentVector.fromArray(["concat", function prims(_, args) {
  var children__1247236 = cljs.core.vec.call(null, cljs.core.mapcat.call(null, "\ufdd0'children", args));
  return cljs.core.assoc.call(null, cljs.core.first.call(null, args), "\ufdd0'children", children__1247236)
}, "call", function prims(_, args) {
  return hlisp.interpreter.apply_STAR_.call(null, cljs.core.first.call(null, args), cljs.core.ObjMap.EMPTY, cljs.core.rest.call(null, args))
}, "log", function prims(_, args) {
  return console.log(cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, "\ufdd0'data", args)))
}, "str", function prims(_, args) {
  return hlisp.hexp.make_data_hexp.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, "\ufdd0'data", args)))
}, "clone", function prims(_, p__1247237) {
  var vec__1247245__1247247 = p__1247237;
  var map__1247246__1247248 = cljs.core.nth.call(null, vec__1247245__1247247, 0, null);
  var map__1247246__1247249 = cljs.core.seq_QMARK_.call(null, map__1247246__1247248) ? cljs.core.apply.call(null, cljs.core.hash_map, map__1247246__1247248) : map__1247246__1247248;
  var hexp__1247250 = map__1247246__1247249;
  var ids__1247251 = cljs.core._lookup.call(null, map__1247246__1247249, "\ufdd0'ids", null);
  return cljs.core.assoc.call(null, hexp__1247250, "\ufdd0'ids", cljs.core.conj.call(null, ids__1247251, cljs.core.gensym.call(null)))
}, "clicksE", function prims(_, p__1247252) {
  var vec__1247260__1247262 = p__1247252;
  var map__1247261__1247263 = cljs.core.nth.call(null, vec__1247260__1247262, 0, null);
  var map__1247261__1247264 = cljs.core.seq_QMARK_.call(null, map__1247261__1247263) ? cljs.core.apply.call(null, cljs.core.hash_map, map__1247261__1247263) : map__1247261__1247263;
  var hexp__1247265 = map__1247261__1247264;
  var ids__1247266 = cljs.core._lookup.call(null, map__1247261__1247264, "\ufdd0'ids", null);
  mapE(function(v) {
    return console.log(v)
  }, filterE(clicksE(document.body), hlisp.primitives.filter_e.call(null, [cljs.core.str(cljs.core.peek.call(null, ids__1247266))].join(""))));
  return hexp__1247265
}], true);
goog.provide("hlisp.dom");
goog.require("cljs.core");
goog.require("hlisp.util");
goog.require("jayq.util");
goog.require("jayq.core");
hlisp.dom.node_types = cljs.core.PersistentArrayMap.fromArrays([1], ["\ufdd0'element"]);
hlisp.dom.branch_QMARK_ = function branch_QMARK_(node) {
  var and__3822__auto____597616 = !(node == null);
  if(and__3822__auto____597616) {
    return cljs.core._EQ_.call(null, "\ufdd0'element", hlisp.dom.node_types.call(null, node.nodeType))
  }else {
    return and__3822__auto____597616
  }
};
hlisp.dom.nodelist_seq = function nodelist_seq(nodelist) {
  if(cljs.core.truth_(nodelist)) {
    var len__597619 = nodelist.length;
    return cljs.core.map.call(null, function(p1__597614_SHARP_) {
      return nodelist.item(p1__597614_SHARP_)
    }, cljs.core.range.call(null, 0, len__597619))
  }else {
    return null
  }
};
hlisp.dom.specified_attr_nodes = function specified_attr_nodes(node) {
  return cljs.core.filter.call(null, function(p1__597617_SHARP_) {
    return p1__597617_SHARP_.specified
  }, hlisp.dom.nodelist_seq.call(null, node.attributes))
};
hlisp.dom.attr_kv = function attr_kv(node, attr_node) {
  var k__597627 = cljs.core.symbol.call(null, attr_node.nodeName.toLowerCase());
  var v__597633 = function() {
    var pred__597628__597631 = cljs.core._EQ_;
    var expr__597629__597632 = k__597627;
    if(pred__597628__597631.call(null, "style", expr__597629__597632)) {
      return node.style.cssText
    }else {
      return attr_node.nodeValue
    }
  }();
  return cljs.core.list.call(null, k__597627, v__597633)
};
hlisp.dom.ie7_value = function ie7_value(node) {
  var temp__3971__auto____597638 = function() {
    var and__3822__auto____597637 = hlisp.dom.branch_QMARK_.call(null, node);
    if(cljs.core.truth_(and__3822__auto____597637)) {
      return node.value
    }else {
      return and__3822__auto____597637
    }
  }();
  if(cljs.core.truth_(temp__3971__auto____597638)) {
    var v__597639 = temp__3971__auto____597638;
    return cljs.core.list.call(null, "\ufdd1'value", node.value)
  }else {
    return cljs.core.List.EMPTY
  }
};
hlisp.dom.build_attrs = function build_attrs(node) {
  return cljs.core.list.call(null, cljs.core.list.call(null, cljs.core.concat.call(null, cljs.core.mapcat.call(null, cljs.core.partial.call(null, hlisp.dom.attr_kv, node), hlisp.dom.specified_attr_nodes.call(null, node)), hlisp.dom.ie7_value.call(null, node))))
};
hlisp.dom.dom__GT_list = function dom__GT_list(node) {
  var tag__597643 = node.nodeName.toLowerCase();
  if(cljs.core.not_EQ_.call(null, "script", tag__597643)) {
    var attrs__597644 = cljs.core.not_EQ_.call(null, "#", cljs.core.first.call(null, tag__597643)) ? hlisp.dom.build_attrs.call(null, node) : cljs.core.List.EMPTY;
    var children__597645 = cljs.core.truth_(hlisp.dom.branch_QMARK_.call(null, node)) ? cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, dom__GT_list, hlisp.dom.nodelist_seq.call(null, node.childNodes))) : cljs.core.list.call(null, node.nodeValue);
    return cljs.core.concat.call(null, cljs.core.list.call(null, cljs.core.symbol.call(null, tag__597643)), attrs__597644, children__597645)
  }else {
    return null
  }
};
hlisp.dom.read_dom = function read_dom(root) {
  return cljs.core.list.call(null, hlisp.dom.dom__GT_list.call(null, root))
};
hlisp.dom.create_elem = function create_elem(p__597646) {
  var vec__597658__597659 = p__597646;
  var tag__597660 = cljs.core.nth.call(null, vec__597658__597659, 0, null);
  var text__597661 = cljs.core.nth.call(null, vec__597658__597659, 1, null);
  var ___597662 = cljs.core.nthnext.call(null, vec__597658__597659, 2);
  var t__597663 = [cljs.core.str(tag__597660)].join("");
  var pred__597664__597667 = cljs.core._EQ_;
  var expr__597665__597668 = t__597663;
  if(pred__597664__597667.call(null, "#text", expr__597665__597668)) {
    return document.createTextNode(text__597661)
  }else {
    if(pred__597664__597667.call(null, "#comment", expr__597665__597668)) {
      return document.createComment(text__597661)
    }else {
      return document.createElement(t__597663)
    }
  }
};
hlisp.dom.write_dom = function write_dom(p__597669) {
  var vec__597677__597678 = p__597669;
  var tag__597679 = cljs.core.nth.call(null, vec__597677__597678, 0, null);
  var attrs__597680 = cljs.core.nth.call(null, vec__597677__597678, 1, null);
  var children__597681 = cljs.core.nthnext.call(null, vec__597677__597678, 2);
  var hexp__597682 = vec__597677__597678;
  var $elem__597683 = jayq.core.$.call(null, hlisp.dom.create_elem.call(null, hexp__597682));
  if(cljs.core.list_QMARK_.call(null, attrs__597680)) {
    return jayq.core.append.call(null, jayq.core.attr.call(null, $elem__597683, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, cljs.core.first.call(null, attrs__597680)))))), cljs.core.mapv.call(null, write_dom, children__597681))
  }else {
    return $elem__597683
  }
};
goog.provide("hlisp.main");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("hlisp.primitives");
goog.require("hlisp.dom");
goog.require("hlisp.reader");
goog.require("hlisp.util");
goog.require("hlisp.interpreter");
goog.require("hlisp.interpreter");
goog.require("hlisp.reader");
goog.require("hlisp.dom");
goog.require("hlisp.util");
goog.require("hlisp.primitives");
goog.require("jayq.util");
goog.require("goog.dom");
goog.require("jayq.core");
hlisp.main.xhr_opts = cljs.core.ObjMap.fromObject(["\ufdd0'async", "\ufdd0'dataType", "\ufdd0'type"], {"\ufdd0'async":false, "\ufdd0'dataType":"text", "\ufdd0'type":"GET"});
hlisp.main.status_ok_QMARK_ = function status_ok_QMARK_(status) {
  var and__3822__auto____1264278 = status >= 200;
  if(and__3822__auto____1264278) {
    return status < 300
  }else {
    return and__3822__auto____1264278
  }
};
hlisp.main.xhr = function() {
  var xhr__delegate = function(uri, p__1264280) {
    var map__1264289__1264290 = p__1264280;
    var map__1264289__1264291 = cljs.core.seq_QMARK_.call(null, map__1264289__1264290) ? cljs.core.apply.call(null, cljs.core.hash_map, map__1264289__1264290) : map__1264289__1264290;
    var opt__1264292 = cljs.core._lookup.call(null, map__1264289__1264291, "\ufdd0'opt", null);
    var ret__1264293 = jQuery.ajax([cljs.core.str(uri)].join(""), jayq.util.clj__GT_js.call(null, cljs.core.into.call(null, hlisp.main.xhr_opts, opt__1264292)));
    var status__1264294 = ret__1264293.status;
    var message__1264295 = ret__1264293.statusText;
    var text__1264296 = ret__1264293.responseText;
    if(cljs.core.truth_(hlisp.main.status_ok_QMARK_.call(null, status__1264294))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(status__1264294), cljs.core.str(" "), cljs.core.str(message__1264295)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'status-ok?", "\ufdd1'status"), cljs.core.hash_map("\ufdd0'line", 33))))].join(""));
    }
    return text__1264296
  };
  var xhr = function(uri, var_args) {
    var p__1264280 = null;
    if(goog.isDef(var_args)) {
      p__1264280 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return xhr__delegate.call(this, uri, p__1264280)
  };
  xhr.cljs$lang$maxFixedArity = 1;
  xhr.cljs$lang$applyTo = function(arglist__1264297) {
    var uri = cljs.core.first(arglist__1264297);
    var p__1264280 = cljs.core.rest(arglist__1264297);
    return xhr__delegate(uri, p__1264280)
  };
  xhr.cljs$lang$arity$variadic = xhr__delegate;
  return xhr
}();
hlisp.main.load_remote_scripts = function load_remote_scripts() {
  return cljs.core.mapv.call(null, cljs.core.comp.call(null, hlisp.main.xhr, function(p1__1264279_SHARP_) {
    return jayq.core.attr.call(null, jayq.core.$.call(null, p1__1264279_SHARP_), "src")
  }), jayq.core.find.call(null, jayq.core.$.call(null, "head"), "script[type='text/hlisp'][src]"))
};
hlisp.main.init = function init() {
  var body__1264303 = document.body;
  var $body__1264304 = jayq.core.$.call(null, body__1264303);
  var scrp_src__1264305 = cljs.core.first.call(null, cljs.core.mapv.call(null, hlisp.reader.read_string, hlisp.main.load_remote_scripts.call(null)));
  var body_src__1264306 = cljs.core.drop.call(null, 2, cljs.core.vec.call(null, cljs.core.first.call(null, hlisp.dom.read_dom.call(null, body__1264303))));
  jayq.core.empty.call(null, $body__1264304);
  return cljs.core.mapv.call(null, function(p1__1264298_SHARP_) {
    return jayq.core.append.call(null, $body__1264304, p1__1264298_SHARP_)
  }, cljs.core.concat.call(null, cljs.core.map.call(null, hlisp.dom.write_dom, hlisp.interpreter.eval_STAR_.call(null, scrp_src__1264305)), cljs.core.map.call(null, hlisp.dom.write_dom, hlisp.interpreter.eval_STAR_.call(null, body_src__1264306))))
};
hlisp.interpreter.bind_primitive_BANG_.call(null, hlisp.primitives.prims);
jayq.core.document_ready.call(null, hlisp.main.init);
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____52033 = this$;
    if(and__3822__auto____52033) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____52033
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2363__auto____52034 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____52035 = clojure.browser.event.event_types[goog.typeOf(x__2363__auto____52034)];
      if(or__3824__auto____52035) {
        return or__3824__auto____52035
      }else {
        var or__3824__auto____52036 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____52036) {
          return or__3824__auto____52036
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__52037) {
    var vec__52038__52039 = p__52037;
    var k__52040 = cljs.core.nth.call(null, vec__52038__52039, 0, null);
    var v__52041 = cljs.core.nth.call(null, vec__52038__52039, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__52040.toLowerCase()), v__52041], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__52042) {
    var vec__52043__52044 = p__52042;
    var k__52045 = cljs.core.nth.call(null, vec__52043__52044, 0, null);
    var v__52046 = cljs.core.nth.call(null, vec__52043__52044, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__52045.toLowerCase()), v__52046], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(this.isDisposed()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  delete this.send
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  this.connectDeferred_ = false;
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  this.connectCb_ = null;
  this.connectDeferred_ = false;
  this.deferredDeliveries_.length = 0;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(Boolean(this.peerWindowObject_.closed)) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(this.connectDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  this.deferredDeliveries_.length = 0
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__51896) {
  var vec__51897__51898 = p__51896;
  var k__51899 = cljs.core.nth.call(null, vec__51897__51898, 0, null);
  var v__51900 = cljs.core.nth.call(null, vec__51897__51898, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__51899.toLowerCase()), v__51900], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____51917 = this$;
      if(and__3822__auto____51917) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____51917
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2363__auto____51918 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____51919 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____51918)];
        if(or__3824__auto____51919) {
          return or__3824__auto____51919
        }else {
          var or__3824__auto____51920 = clojure.browser.net.connect["_"];
          if(or__3824__auto____51920) {
            return or__3824__auto____51920
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____51921 = this$;
      if(and__3822__auto____51921) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____51921
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2363__auto____51922 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____51923 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____51922)];
        if(or__3824__auto____51923) {
          return or__3824__auto____51923
        }else {
          var or__3824__auto____51924 = clojure.browser.net.connect["_"];
          if(or__3824__auto____51924) {
            return or__3824__auto____51924
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____51925 = this$;
      if(and__3822__auto____51925) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____51925
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2363__auto____51926 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____51927 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____51926)];
        if(or__3824__auto____51927) {
          return or__3824__auto____51927
        }else {
          var or__3824__auto____51928 = clojure.browser.net.connect["_"];
          if(or__3824__auto____51928) {
            return or__3824__auto____51928
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____51929 = this$;
      if(and__3822__auto____51929) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____51929
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2363__auto____51930 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____51931 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____51930)];
        if(or__3824__auto____51931) {
          return or__3824__auto____51931
        }else {
          var or__3824__auto____51932 = clojure.browser.net.connect["_"];
          if(or__3824__auto____51932) {
            return or__3824__auto____51932
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____51953 = this$;
      if(and__3822__auto____51953) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____51953
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2363__auto____51954 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____51955 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____51954)];
        if(or__3824__auto____51955) {
          return or__3824__auto____51955
        }else {
          var or__3824__auto____51956 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____51956) {
            return or__3824__auto____51956
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____51957 = this$;
      if(and__3822__auto____51957) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____51957
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2363__auto____51958 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____51959 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____51958)];
        if(or__3824__auto____51959) {
          return or__3824__auto____51959
        }else {
          var or__3824__auto____51960 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____51960) {
            return or__3824__auto____51960
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____51961 = this$;
      if(and__3822__auto____51961) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____51961
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2363__auto____51962 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____51963 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____51962)];
        if(or__3824__auto____51963) {
          return or__3824__auto____51963
        }else {
          var or__3824__auto____51964 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____51964) {
            return or__3824__auto____51964
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____51965 = this$;
      if(and__3822__auto____51965) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____51965
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2363__auto____51966 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____51967 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____51966)];
        if(or__3824__auto____51967) {
          return or__3824__auto____51967
        }else {
          var or__3824__auto____51968 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____51968) {
            return or__3824__auto____51968
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____51969 = this$;
      if(and__3822__auto____51969) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____51969
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2363__auto____51970 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____51971 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____51970)];
        if(or__3824__auto____51971) {
          return or__3824__auto____51971
        }else {
          var or__3824__auto____51972 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____51972) {
            return or__3824__auto____51972
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____51977 = this$;
    if(and__3822__auto____51977) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____51977
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2363__auto____51978 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____51979 = clojure.browser.net.close[goog.typeOf(x__2363__auto____51978)];
      if(or__3824__auto____51979) {
        return or__3824__auto____51979
      }else {
        var or__3824__auto____51980 = clojure.browser.net.close["_"];
        if(or__3824__auto____51980) {
          return or__3824__auto____51980
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__51981) {
    var vec__51982__51983 = p__51981;
    var k__51984 = cljs.core.nth.call(null, vec__51982__51983, 0, null);
    var v__51985 = cljs.core.nth.call(null, vec__51982__51983, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__51984.toLowerCase()), v__51985], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__51986) {
  var vec__51987__51988 = p__51986;
  var k__51989 = cljs.core.nth.call(null, vec__51987__51988, 0, null);
  var v__51990 = cljs.core.nth.call(null, vec__51987__51988, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__51989.toLowerCase()), v__51990], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____51999 = this$;
      if(and__3822__auto____51999) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____51999
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2363__auto____52000 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____52001 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____52000)];
        if(or__3824__auto____52001) {
          return or__3824__auto____52001
        }else {
          var or__3824__auto____52002 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____52002) {
            return or__3824__auto____52002
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____52003 = this$;
      if(and__3822__auto____52003) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____52003
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2363__auto____52004 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____52005 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____52004)];
        if(or__3824__auto____52005) {
          return or__3824__auto____52005
        }else {
          var or__3824__auto____52006 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____52006) {
            return or__3824__auto____52006
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____52018 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____52018)) {
      var config__52019 = temp__3974__auto____52018;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__52019))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__52020) {
      var vec__52021__52022 = p__52020;
      var k__52023 = cljs.core.nth.call(null, vec__52021__52022, 0, null);
      var v__52024 = cljs.core.nth.call(null, vec__52021__52022, 1, null);
      var temp__3971__auto____52025 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__52023, null);
      if(cljs.core.truth_(temp__3971__auto____52025)) {
        var field__52026 = temp__3971__auto____52025;
        var G__52027__52028 = sum;
        G__52027__52028[field__52026] = v__52024;
        return G__52027__52028
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____51878 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____51878)) {
    var conn__51879 = temp__3971__auto____51878;
    return clojure.browser.net.transmit.call(null, conn__51879, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__51885 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e51883) {
      if(cljs.core.instance_QMARK_.call(null, Error, e51883)) {
        var e__51884 = e51883;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__51884), "\ufdd0'stacktrace":cljs.core.truth_(e__51884.hasOwnProperty("stack")) ? e__51884.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e51883;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__51885)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__51887 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__51887, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__51887, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____51891 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____51891)) {
    var repl_connection__51892 = temp__3971__auto____51891;
    var connection__51893 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__51893, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__51892, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__51892, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__51893, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__51892, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__51892, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__51893, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__51895 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__51895));
  clojure.browser.net.register_service.call(null, repl_connection__51895, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__51895, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__51895, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__51895, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("hlisp.repl");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
