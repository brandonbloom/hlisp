var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__6857 = x == null ? null : x;
  if(p[goog.typeOf(x__6857)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__6858__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__6858 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6858__delegate.call(this, array, i, idxs)
    };
    G__6858.cljs$lang$maxFixedArity = 2;
    G__6858.cljs$lang$applyTo = function(arglist__6859) {
      var array = cljs.core.first(arglist__6859);
      var i = cljs.core.first(cljs.core.next(arglist__6859));
      var idxs = cljs.core.rest(cljs.core.next(arglist__6859));
      return G__6858__delegate(array, i, idxs)
    };
    G__6858.cljs$lang$arity$variadic = G__6858__delegate;
    return G__6858
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____6944 = this$;
      if(and__3822__auto____6944) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____6944
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2363__auto____6945 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6946 = cljs.core._invoke[goog.typeOf(x__2363__auto____6945)];
        if(or__3824__auto____6946) {
          return or__3824__auto____6946
        }else {
          var or__3824__auto____6947 = cljs.core._invoke["_"];
          if(or__3824__auto____6947) {
            return or__3824__auto____6947
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____6948 = this$;
      if(and__3822__auto____6948) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____6948
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2363__auto____6949 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6950 = cljs.core._invoke[goog.typeOf(x__2363__auto____6949)];
        if(or__3824__auto____6950) {
          return or__3824__auto____6950
        }else {
          var or__3824__auto____6951 = cljs.core._invoke["_"];
          if(or__3824__auto____6951) {
            return or__3824__auto____6951
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____6952 = this$;
      if(and__3822__auto____6952) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____6952
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2363__auto____6953 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6954 = cljs.core._invoke[goog.typeOf(x__2363__auto____6953)];
        if(or__3824__auto____6954) {
          return or__3824__auto____6954
        }else {
          var or__3824__auto____6955 = cljs.core._invoke["_"];
          if(or__3824__auto____6955) {
            return or__3824__auto____6955
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____6956 = this$;
      if(and__3822__auto____6956) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____6956
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2363__auto____6957 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6958 = cljs.core._invoke[goog.typeOf(x__2363__auto____6957)];
        if(or__3824__auto____6958) {
          return or__3824__auto____6958
        }else {
          var or__3824__auto____6959 = cljs.core._invoke["_"];
          if(or__3824__auto____6959) {
            return or__3824__auto____6959
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____6960 = this$;
      if(and__3822__auto____6960) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____6960
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2363__auto____6961 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6962 = cljs.core._invoke[goog.typeOf(x__2363__auto____6961)];
        if(or__3824__auto____6962) {
          return or__3824__auto____6962
        }else {
          var or__3824__auto____6963 = cljs.core._invoke["_"];
          if(or__3824__auto____6963) {
            return or__3824__auto____6963
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____6964 = this$;
      if(and__3822__auto____6964) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____6964
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2363__auto____6965 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6966 = cljs.core._invoke[goog.typeOf(x__2363__auto____6965)];
        if(or__3824__auto____6966) {
          return or__3824__auto____6966
        }else {
          var or__3824__auto____6967 = cljs.core._invoke["_"];
          if(or__3824__auto____6967) {
            return or__3824__auto____6967
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____6968 = this$;
      if(and__3822__auto____6968) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____6968
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2363__auto____6969 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6970 = cljs.core._invoke[goog.typeOf(x__2363__auto____6969)];
        if(or__3824__auto____6970) {
          return or__3824__auto____6970
        }else {
          var or__3824__auto____6971 = cljs.core._invoke["_"];
          if(or__3824__auto____6971) {
            return or__3824__auto____6971
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____6972 = this$;
      if(and__3822__auto____6972) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____6972
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2363__auto____6973 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6974 = cljs.core._invoke[goog.typeOf(x__2363__auto____6973)];
        if(or__3824__auto____6974) {
          return or__3824__auto____6974
        }else {
          var or__3824__auto____6975 = cljs.core._invoke["_"];
          if(or__3824__auto____6975) {
            return or__3824__auto____6975
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____6976 = this$;
      if(and__3822__auto____6976) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____6976
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2363__auto____6977 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6978 = cljs.core._invoke[goog.typeOf(x__2363__auto____6977)];
        if(or__3824__auto____6978) {
          return or__3824__auto____6978
        }else {
          var or__3824__auto____6979 = cljs.core._invoke["_"];
          if(or__3824__auto____6979) {
            return or__3824__auto____6979
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____6980 = this$;
      if(and__3822__auto____6980) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____6980
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2363__auto____6981 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6982 = cljs.core._invoke[goog.typeOf(x__2363__auto____6981)];
        if(or__3824__auto____6982) {
          return or__3824__auto____6982
        }else {
          var or__3824__auto____6983 = cljs.core._invoke["_"];
          if(or__3824__auto____6983) {
            return or__3824__auto____6983
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____6984 = this$;
      if(and__3822__auto____6984) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____6984
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2363__auto____6985 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6986 = cljs.core._invoke[goog.typeOf(x__2363__auto____6985)];
        if(or__3824__auto____6986) {
          return or__3824__auto____6986
        }else {
          var or__3824__auto____6987 = cljs.core._invoke["_"];
          if(or__3824__auto____6987) {
            return or__3824__auto____6987
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____6988 = this$;
      if(and__3822__auto____6988) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____6988
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2363__auto____6989 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6990 = cljs.core._invoke[goog.typeOf(x__2363__auto____6989)];
        if(or__3824__auto____6990) {
          return or__3824__auto____6990
        }else {
          var or__3824__auto____6991 = cljs.core._invoke["_"];
          if(or__3824__auto____6991) {
            return or__3824__auto____6991
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____6992 = this$;
      if(and__3822__auto____6992) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____6992
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2363__auto____6993 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6994 = cljs.core._invoke[goog.typeOf(x__2363__auto____6993)];
        if(or__3824__auto____6994) {
          return or__3824__auto____6994
        }else {
          var or__3824__auto____6995 = cljs.core._invoke["_"];
          if(or__3824__auto____6995) {
            return or__3824__auto____6995
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____6996 = this$;
      if(and__3822__auto____6996) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____6996
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2363__auto____6997 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____6998 = cljs.core._invoke[goog.typeOf(x__2363__auto____6997)];
        if(or__3824__auto____6998) {
          return or__3824__auto____6998
        }else {
          var or__3824__auto____6999 = cljs.core._invoke["_"];
          if(or__3824__auto____6999) {
            return or__3824__auto____6999
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____7000 = this$;
      if(and__3822__auto____7000) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____7000
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2363__auto____7001 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7002 = cljs.core._invoke[goog.typeOf(x__2363__auto____7001)];
        if(or__3824__auto____7002) {
          return or__3824__auto____7002
        }else {
          var or__3824__auto____7003 = cljs.core._invoke["_"];
          if(or__3824__auto____7003) {
            return or__3824__auto____7003
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____7004 = this$;
      if(and__3822__auto____7004) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____7004
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2363__auto____7005 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7006 = cljs.core._invoke[goog.typeOf(x__2363__auto____7005)];
        if(or__3824__auto____7006) {
          return or__3824__auto____7006
        }else {
          var or__3824__auto____7007 = cljs.core._invoke["_"];
          if(or__3824__auto____7007) {
            return or__3824__auto____7007
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____7008 = this$;
      if(and__3822__auto____7008) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____7008
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2363__auto____7009 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7010 = cljs.core._invoke[goog.typeOf(x__2363__auto____7009)];
        if(or__3824__auto____7010) {
          return or__3824__auto____7010
        }else {
          var or__3824__auto____7011 = cljs.core._invoke["_"];
          if(or__3824__auto____7011) {
            return or__3824__auto____7011
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____7012 = this$;
      if(and__3822__auto____7012) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____7012
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2363__auto____7013 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7014 = cljs.core._invoke[goog.typeOf(x__2363__auto____7013)];
        if(or__3824__auto____7014) {
          return or__3824__auto____7014
        }else {
          var or__3824__auto____7015 = cljs.core._invoke["_"];
          if(or__3824__auto____7015) {
            return or__3824__auto____7015
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____7016 = this$;
      if(and__3822__auto____7016) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____7016
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2363__auto____7017 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7018 = cljs.core._invoke[goog.typeOf(x__2363__auto____7017)];
        if(or__3824__auto____7018) {
          return or__3824__auto____7018
        }else {
          var or__3824__auto____7019 = cljs.core._invoke["_"];
          if(or__3824__auto____7019) {
            return or__3824__auto____7019
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____7020 = this$;
      if(and__3822__auto____7020) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____7020
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2363__auto____7021 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7022 = cljs.core._invoke[goog.typeOf(x__2363__auto____7021)];
        if(or__3824__auto____7022) {
          return or__3824__auto____7022
        }else {
          var or__3824__auto____7023 = cljs.core._invoke["_"];
          if(or__3824__auto____7023) {
            return or__3824__auto____7023
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____7024 = this$;
      if(and__3822__auto____7024) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____7024
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2363__auto____7025 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7026 = cljs.core._invoke[goog.typeOf(x__2363__auto____7025)];
        if(or__3824__auto____7026) {
          return or__3824__auto____7026
        }else {
          var or__3824__auto____7027 = cljs.core._invoke["_"];
          if(or__3824__auto____7027) {
            return or__3824__auto____7027
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____7032 = coll;
    if(and__3822__auto____7032) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____7032
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2363__auto____7033 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7034 = cljs.core._count[goog.typeOf(x__2363__auto____7033)];
      if(or__3824__auto____7034) {
        return or__3824__auto____7034
      }else {
        var or__3824__auto____7035 = cljs.core._count["_"];
        if(or__3824__auto____7035) {
          return or__3824__auto____7035
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____7040 = coll;
    if(and__3822__auto____7040) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____7040
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2363__auto____7041 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7042 = cljs.core._empty[goog.typeOf(x__2363__auto____7041)];
      if(or__3824__auto____7042) {
        return or__3824__auto____7042
      }else {
        var or__3824__auto____7043 = cljs.core._empty["_"];
        if(or__3824__auto____7043) {
          return or__3824__auto____7043
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____7048 = coll;
    if(and__3822__auto____7048) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____7048
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2363__auto____7049 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7050 = cljs.core._conj[goog.typeOf(x__2363__auto____7049)];
      if(or__3824__auto____7050) {
        return or__3824__auto____7050
      }else {
        var or__3824__auto____7051 = cljs.core._conj["_"];
        if(or__3824__auto____7051) {
          return or__3824__auto____7051
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____7060 = coll;
      if(and__3822__auto____7060) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____7060
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2363__auto____7061 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7062 = cljs.core._nth[goog.typeOf(x__2363__auto____7061)];
        if(or__3824__auto____7062) {
          return or__3824__auto____7062
        }else {
          var or__3824__auto____7063 = cljs.core._nth["_"];
          if(or__3824__auto____7063) {
            return or__3824__auto____7063
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____7064 = coll;
      if(and__3822__auto____7064) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____7064
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2363__auto____7065 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7066 = cljs.core._nth[goog.typeOf(x__2363__auto____7065)];
        if(or__3824__auto____7066) {
          return or__3824__auto____7066
        }else {
          var or__3824__auto____7067 = cljs.core._nth["_"];
          if(or__3824__auto____7067) {
            return or__3824__auto____7067
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____7072 = coll;
    if(and__3822__auto____7072) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____7072
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2363__auto____7073 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7074 = cljs.core._first[goog.typeOf(x__2363__auto____7073)];
      if(or__3824__auto____7074) {
        return or__3824__auto____7074
      }else {
        var or__3824__auto____7075 = cljs.core._first["_"];
        if(or__3824__auto____7075) {
          return or__3824__auto____7075
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____7080 = coll;
    if(and__3822__auto____7080) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____7080
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2363__auto____7081 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7082 = cljs.core._rest[goog.typeOf(x__2363__auto____7081)];
      if(or__3824__auto____7082) {
        return or__3824__auto____7082
      }else {
        var or__3824__auto____7083 = cljs.core._rest["_"];
        if(or__3824__auto____7083) {
          return or__3824__auto____7083
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____7088 = coll;
    if(and__3822__auto____7088) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____7088
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2363__auto____7089 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7090 = cljs.core._next[goog.typeOf(x__2363__auto____7089)];
      if(or__3824__auto____7090) {
        return or__3824__auto____7090
      }else {
        var or__3824__auto____7091 = cljs.core._next["_"];
        if(or__3824__auto____7091) {
          return or__3824__auto____7091
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____7100 = o;
      if(and__3822__auto____7100) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____7100
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2363__auto____7101 = o == null ? null : o;
      return function() {
        var or__3824__auto____7102 = cljs.core._lookup[goog.typeOf(x__2363__auto____7101)];
        if(or__3824__auto____7102) {
          return or__3824__auto____7102
        }else {
          var or__3824__auto____7103 = cljs.core._lookup["_"];
          if(or__3824__auto____7103) {
            return or__3824__auto____7103
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____7104 = o;
      if(and__3822__auto____7104) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____7104
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2363__auto____7105 = o == null ? null : o;
      return function() {
        var or__3824__auto____7106 = cljs.core._lookup[goog.typeOf(x__2363__auto____7105)];
        if(or__3824__auto____7106) {
          return or__3824__auto____7106
        }else {
          var or__3824__auto____7107 = cljs.core._lookup["_"];
          if(or__3824__auto____7107) {
            return or__3824__auto____7107
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____7112 = coll;
    if(and__3822__auto____7112) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____7112
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2363__auto____7113 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7114 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2363__auto____7113)];
      if(or__3824__auto____7114) {
        return or__3824__auto____7114
      }else {
        var or__3824__auto____7115 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____7115) {
          return or__3824__auto____7115
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____7120 = coll;
    if(and__3822__auto____7120) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____7120
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2363__auto____7121 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7122 = cljs.core._assoc[goog.typeOf(x__2363__auto____7121)];
      if(or__3824__auto____7122) {
        return or__3824__auto____7122
      }else {
        var or__3824__auto____7123 = cljs.core._assoc["_"];
        if(or__3824__auto____7123) {
          return or__3824__auto____7123
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____7128 = coll;
    if(and__3822__auto____7128) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____7128
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2363__auto____7129 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7130 = cljs.core._dissoc[goog.typeOf(x__2363__auto____7129)];
      if(or__3824__auto____7130) {
        return or__3824__auto____7130
      }else {
        var or__3824__auto____7131 = cljs.core._dissoc["_"];
        if(or__3824__auto____7131) {
          return or__3824__auto____7131
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____7136 = coll;
    if(and__3822__auto____7136) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____7136
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2363__auto____7137 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7138 = cljs.core._key[goog.typeOf(x__2363__auto____7137)];
      if(or__3824__auto____7138) {
        return or__3824__auto____7138
      }else {
        var or__3824__auto____7139 = cljs.core._key["_"];
        if(or__3824__auto____7139) {
          return or__3824__auto____7139
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____7144 = coll;
    if(and__3822__auto____7144) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____7144
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2363__auto____7145 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7146 = cljs.core._val[goog.typeOf(x__2363__auto____7145)];
      if(or__3824__auto____7146) {
        return or__3824__auto____7146
      }else {
        var or__3824__auto____7147 = cljs.core._val["_"];
        if(or__3824__auto____7147) {
          return or__3824__auto____7147
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____7152 = coll;
    if(and__3822__auto____7152) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____7152
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2363__auto____7153 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7154 = cljs.core._disjoin[goog.typeOf(x__2363__auto____7153)];
      if(or__3824__auto____7154) {
        return or__3824__auto____7154
      }else {
        var or__3824__auto____7155 = cljs.core._disjoin["_"];
        if(or__3824__auto____7155) {
          return or__3824__auto____7155
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____7160 = coll;
    if(and__3822__auto____7160) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____7160
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2363__auto____7161 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7162 = cljs.core._peek[goog.typeOf(x__2363__auto____7161)];
      if(or__3824__auto____7162) {
        return or__3824__auto____7162
      }else {
        var or__3824__auto____7163 = cljs.core._peek["_"];
        if(or__3824__auto____7163) {
          return or__3824__auto____7163
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____7168 = coll;
    if(and__3822__auto____7168) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____7168
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2363__auto____7169 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7170 = cljs.core._pop[goog.typeOf(x__2363__auto____7169)];
      if(or__3824__auto____7170) {
        return or__3824__auto____7170
      }else {
        var or__3824__auto____7171 = cljs.core._pop["_"];
        if(or__3824__auto____7171) {
          return or__3824__auto____7171
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____7176 = coll;
    if(and__3822__auto____7176) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____7176
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2363__auto____7177 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7178 = cljs.core._assoc_n[goog.typeOf(x__2363__auto____7177)];
      if(or__3824__auto____7178) {
        return or__3824__auto____7178
      }else {
        var or__3824__auto____7179 = cljs.core._assoc_n["_"];
        if(or__3824__auto____7179) {
          return or__3824__auto____7179
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____7184 = o;
    if(and__3822__auto____7184) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____7184
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2363__auto____7185 = o == null ? null : o;
    return function() {
      var or__3824__auto____7186 = cljs.core._deref[goog.typeOf(x__2363__auto____7185)];
      if(or__3824__auto____7186) {
        return or__3824__auto____7186
      }else {
        var or__3824__auto____7187 = cljs.core._deref["_"];
        if(or__3824__auto____7187) {
          return or__3824__auto____7187
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____7192 = o;
    if(and__3822__auto____7192) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____7192
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2363__auto____7193 = o == null ? null : o;
    return function() {
      var or__3824__auto____7194 = cljs.core._deref_with_timeout[goog.typeOf(x__2363__auto____7193)];
      if(or__3824__auto____7194) {
        return or__3824__auto____7194
      }else {
        var or__3824__auto____7195 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____7195) {
          return or__3824__auto____7195
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____7200 = o;
    if(and__3822__auto____7200) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____7200
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2363__auto____7201 = o == null ? null : o;
    return function() {
      var or__3824__auto____7202 = cljs.core._meta[goog.typeOf(x__2363__auto____7201)];
      if(or__3824__auto____7202) {
        return or__3824__auto____7202
      }else {
        var or__3824__auto____7203 = cljs.core._meta["_"];
        if(or__3824__auto____7203) {
          return or__3824__auto____7203
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____7208 = o;
    if(and__3822__auto____7208) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____7208
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2363__auto____7209 = o == null ? null : o;
    return function() {
      var or__3824__auto____7210 = cljs.core._with_meta[goog.typeOf(x__2363__auto____7209)];
      if(or__3824__auto____7210) {
        return or__3824__auto____7210
      }else {
        var or__3824__auto____7211 = cljs.core._with_meta["_"];
        if(or__3824__auto____7211) {
          return or__3824__auto____7211
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____7220 = coll;
      if(and__3822__auto____7220) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____7220
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2363__auto____7221 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7222 = cljs.core._reduce[goog.typeOf(x__2363__auto____7221)];
        if(or__3824__auto____7222) {
          return or__3824__auto____7222
        }else {
          var or__3824__auto____7223 = cljs.core._reduce["_"];
          if(or__3824__auto____7223) {
            return or__3824__auto____7223
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____7224 = coll;
      if(and__3822__auto____7224) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____7224
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2363__auto____7225 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7226 = cljs.core._reduce[goog.typeOf(x__2363__auto____7225)];
        if(or__3824__auto____7226) {
          return or__3824__auto____7226
        }else {
          var or__3824__auto____7227 = cljs.core._reduce["_"];
          if(or__3824__auto____7227) {
            return or__3824__auto____7227
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____7232 = coll;
    if(and__3822__auto____7232) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____7232
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2363__auto____7233 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7234 = cljs.core._kv_reduce[goog.typeOf(x__2363__auto____7233)];
      if(or__3824__auto____7234) {
        return or__3824__auto____7234
      }else {
        var or__3824__auto____7235 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____7235) {
          return or__3824__auto____7235
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____7240 = o;
    if(and__3822__auto____7240) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____7240
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2363__auto____7241 = o == null ? null : o;
    return function() {
      var or__3824__auto____7242 = cljs.core._equiv[goog.typeOf(x__2363__auto____7241)];
      if(or__3824__auto____7242) {
        return or__3824__auto____7242
      }else {
        var or__3824__auto____7243 = cljs.core._equiv["_"];
        if(or__3824__auto____7243) {
          return or__3824__auto____7243
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____7248 = o;
    if(and__3822__auto____7248) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____7248
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2363__auto____7249 = o == null ? null : o;
    return function() {
      var or__3824__auto____7250 = cljs.core._hash[goog.typeOf(x__2363__auto____7249)];
      if(or__3824__auto____7250) {
        return or__3824__auto____7250
      }else {
        var or__3824__auto____7251 = cljs.core._hash["_"];
        if(or__3824__auto____7251) {
          return or__3824__auto____7251
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____7256 = o;
    if(and__3822__auto____7256) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____7256
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2363__auto____7257 = o == null ? null : o;
    return function() {
      var or__3824__auto____7258 = cljs.core._seq[goog.typeOf(x__2363__auto____7257)];
      if(or__3824__auto____7258) {
        return or__3824__auto____7258
      }else {
        var or__3824__auto____7259 = cljs.core._seq["_"];
        if(or__3824__auto____7259) {
          return or__3824__auto____7259
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____7264 = coll;
    if(and__3822__auto____7264) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____7264
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2363__auto____7265 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7266 = cljs.core._rseq[goog.typeOf(x__2363__auto____7265)];
      if(or__3824__auto____7266) {
        return or__3824__auto____7266
      }else {
        var or__3824__auto____7267 = cljs.core._rseq["_"];
        if(or__3824__auto____7267) {
          return or__3824__auto____7267
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7272 = coll;
    if(and__3822__auto____7272) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____7272
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2363__auto____7273 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7274 = cljs.core._sorted_seq[goog.typeOf(x__2363__auto____7273)];
      if(or__3824__auto____7274) {
        return or__3824__auto____7274
      }else {
        var or__3824__auto____7275 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____7275) {
          return or__3824__auto____7275
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7280 = coll;
    if(and__3822__auto____7280) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____7280
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2363__auto____7281 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7282 = cljs.core._sorted_seq_from[goog.typeOf(x__2363__auto____7281)];
      if(or__3824__auto____7282) {
        return or__3824__auto____7282
      }else {
        var or__3824__auto____7283 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____7283) {
          return or__3824__auto____7283
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____7288 = coll;
    if(and__3822__auto____7288) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____7288
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2363__auto____7289 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7290 = cljs.core._entry_key[goog.typeOf(x__2363__auto____7289)];
      if(or__3824__auto____7290) {
        return or__3824__auto____7290
      }else {
        var or__3824__auto____7291 = cljs.core._entry_key["_"];
        if(or__3824__auto____7291) {
          return or__3824__auto____7291
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____7296 = coll;
    if(and__3822__auto____7296) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____7296
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2363__auto____7297 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7298 = cljs.core._comparator[goog.typeOf(x__2363__auto____7297)];
      if(or__3824__auto____7298) {
        return or__3824__auto____7298
      }else {
        var or__3824__auto____7299 = cljs.core._comparator["_"];
        if(or__3824__auto____7299) {
          return or__3824__auto____7299
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____7304 = o;
    if(and__3822__auto____7304) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____7304
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2363__auto____7305 = o == null ? null : o;
    return function() {
      var or__3824__auto____7306 = cljs.core._pr_seq[goog.typeOf(x__2363__auto____7305)];
      if(or__3824__auto____7306) {
        return or__3824__auto____7306
      }else {
        var or__3824__auto____7307 = cljs.core._pr_seq["_"];
        if(or__3824__auto____7307) {
          return or__3824__auto____7307
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____7312 = d;
    if(and__3822__auto____7312) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____7312
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2363__auto____7313 = d == null ? null : d;
    return function() {
      var or__3824__auto____7314 = cljs.core._realized_QMARK_[goog.typeOf(x__2363__auto____7313)];
      if(or__3824__auto____7314) {
        return or__3824__auto____7314
      }else {
        var or__3824__auto____7315 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____7315) {
          return or__3824__auto____7315
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____7320 = this$;
    if(and__3822__auto____7320) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____7320
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2363__auto____7321 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7322 = cljs.core._notify_watches[goog.typeOf(x__2363__auto____7321)];
      if(or__3824__auto____7322) {
        return or__3824__auto____7322
      }else {
        var or__3824__auto____7323 = cljs.core._notify_watches["_"];
        if(or__3824__auto____7323) {
          return or__3824__auto____7323
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____7328 = this$;
    if(and__3822__auto____7328) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____7328
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2363__auto____7329 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7330 = cljs.core._add_watch[goog.typeOf(x__2363__auto____7329)];
      if(or__3824__auto____7330) {
        return or__3824__auto____7330
      }else {
        var or__3824__auto____7331 = cljs.core._add_watch["_"];
        if(or__3824__auto____7331) {
          return or__3824__auto____7331
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____7336 = this$;
    if(and__3822__auto____7336) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____7336
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2363__auto____7337 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7338 = cljs.core._remove_watch[goog.typeOf(x__2363__auto____7337)];
      if(or__3824__auto____7338) {
        return or__3824__auto____7338
      }else {
        var or__3824__auto____7339 = cljs.core._remove_watch["_"];
        if(or__3824__auto____7339) {
          return or__3824__auto____7339
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____7344 = coll;
    if(and__3822__auto____7344) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____7344
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2363__auto____7345 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7346 = cljs.core._as_transient[goog.typeOf(x__2363__auto____7345)];
      if(or__3824__auto____7346) {
        return or__3824__auto____7346
      }else {
        var or__3824__auto____7347 = cljs.core._as_transient["_"];
        if(or__3824__auto____7347) {
          return or__3824__auto____7347
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____7352 = tcoll;
    if(and__3822__auto____7352) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____7352
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2363__auto____7353 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7354 = cljs.core._conj_BANG_[goog.typeOf(x__2363__auto____7353)];
      if(or__3824__auto____7354) {
        return or__3824__auto____7354
      }else {
        var or__3824__auto____7355 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____7355) {
          return or__3824__auto____7355
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7360 = tcoll;
    if(and__3822__auto____7360) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____7360
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____7361 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7362 = cljs.core._persistent_BANG_[goog.typeOf(x__2363__auto____7361)];
      if(or__3824__auto____7362) {
        return or__3824__auto____7362
      }else {
        var or__3824__auto____7363 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____7363) {
          return or__3824__auto____7363
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____7368 = tcoll;
    if(and__3822__auto____7368) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____7368
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2363__auto____7369 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7370 = cljs.core._assoc_BANG_[goog.typeOf(x__2363__auto____7369)];
      if(or__3824__auto____7370) {
        return or__3824__auto____7370
      }else {
        var or__3824__auto____7371 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____7371) {
          return or__3824__auto____7371
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____7376 = tcoll;
    if(and__3822__auto____7376) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____7376
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2363__auto____7377 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7378 = cljs.core._dissoc_BANG_[goog.typeOf(x__2363__auto____7377)];
      if(or__3824__auto____7378) {
        return or__3824__auto____7378
      }else {
        var or__3824__auto____7379 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____7379) {
          return or__3824__auto____7379
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____7384 = tcoll;
    if(and__3822__auto____7384) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____7384
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2363__auto____7385 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7386 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2363__auto____7385)];
      if(or__3824__auto____7386) {
        return or__3824__auto____7386
      }else {
        var or__3824__auto____7387 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____7387) {
          return or__3824__auto____7387
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7392 = tcoll;
    if(and__3822__auto____7392) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____7392
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____7393 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7394 = cljs.core._pop_BANG_[goog.typeOf(x__2363__auto____7393)];
      if(or__3824__auto____7394) {
        return or__3824__auto____7394
      }else {
        var or__3824__auto____7395 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____7395) {
          return or__3824__auto____7395
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____7400 = tcoll;
    if(and__3822__auto____7400) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____7400
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2363__auto____7401 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7402 = cljs.core._disjoin_BANG_[goog.typeOf(x__2363__auto____7401)];
      if(or__3824__auto____7402) {
        return or__3824__auto____7402
      }else {
        var or__3824__auto____7403 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____7403) {
          return or__3824__auto____7403
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____7408 = x;
    if(and__3822__auto____7408) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____7408
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2363__auto____7409 = x == null ? null : x;
    return function() {
      var or__3824__auto____7410 = cljs.core._compare[goog.typeOf(x__2363__auto____7409)];
      if(or__3824__auto____7410) {
        return or__3824__auto____7410
      }else {
        var or__3824__auto____7411 = cljs.core._compare["_"];
        if(or__3824__auto____7411) {
          return or__3824__auto____7411
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____7416 = coll;
    if(and__3822__auto____7416) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____7416
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2363__auto____7417 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7418 = cljs.core._drop_first[goog.typeOf(x__2363__auto____7417)];
      if(or__3824__auto____7418) {
        return or__3824__auto____7418
      }else {
        var or__3824__auto____7419 = cljs.core._drop_first["_"];
        if(or__3824__auto____7419) {
          return or__3824__auto____7419
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____7424 = coll;
    if(and__3822__auto____7424) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____7424
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2363__auto____7425 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7426 = cljs.core._chunked_first[goog.typeOf(x__2363__auto____7425)];
      if(or__3824__auto____7426) {
        return or__3824__auto____7426
      }else {
        var or__3824__auto____7427 = cljs.core._chunked_first["_"];
        if(or__3824__auto____7427) {
          return or__3824__auto____7427
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____7432 = coll;
    if(and__3822__auto____7432) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____7432
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2363__auto____7433 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7434 = cljs.core._chunked_rest[goog.typeOf(x__2363__auto____7433)];
      if(or__3824__auto____7434) {
        return or__3824__auto____7434
      }else {
        var or__3824__auto____7435 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____7435) {
          return or__3824__auto____7435
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____7440 = coll;
    if(and__3822__auto____7440) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____7440
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2363__auto____7441 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7442 = cljs.core._chunked_next[goog.typeOf(x__2363__auto____7441)];
      if(or__3824__auto____7442) {
        return or__3824__auto____7442
      }else {
        var or__3824__auto____7443 = cljs.core._chunked_next["_"];
        if(or__3824__auto____7443) {
          return or__3824__auto____7443
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____7445 = x === y;
    if(or__3824__auto____7445) {
      return or__3824__auto____7445
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__7446__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7447 = y;
            var G__7448 = cljs.core.first.call(null, more);
            var G__7449 = cljs.core.next.call(null, more);
            x = G__7447;
            y = G__7448;
            more = G__7449;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7446 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7446__delegate.call(this, x, y, more)
    };
    G__7446.cljs$lang$maxFixedArity = 2;
    G__7446.cljs$lang$applyTo = function(arglist__7450) {
      var x = cljs.core.first(arglist__7450);
      var y = cljs.core.first(cljs.core.next(arglist__7450));
      var more = cljs.core.rest(cljs.core.next(arglist__7450));
      return G__7446__delegate(x, y, more)
    };
    G__7446.cljs$lang$arity$variadic = G__7446__delegate;
    return G__7446
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__7451 = null;
  var G__7451__2 = function(o, k) {
    return null
  };
  var G__7451__3 = function(o, k, not_found) {
    return not_found
  };
  G__7451 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7451__2.call(this, o, k);
      case 3:
        return G__7451__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7451
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__7452 = null;
  var G__7452__2 = function(_, f) {
    return f.call(null)
  };
  var G__7452__3 = function(_, f, start) {
    return start
  };
  G__7452 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7452__2.call(this, _, f);
      case 3:
        return G__7452__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7452
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__7453 = null;
  var G__7453__2 = function(_, n) {
    return null
  };
  var G__7453__3 = function(_, n, not_found) {
    return not_found
  };
  G__7453 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7453__2.call(this, _, n);
      case 3:
        return G__7453__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7453
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____7454 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____7454) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____7454
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__7467 = cljs.core._count.call(null, cicoll);
    if(cnt__7467 === 0) {
      return f.call(null)
    }else {
      var val__7468 = cljs.core._nth.call(null, cicoll, 0);
      var n__7469 = 1;
      while(true) {
        if(n__7469 < cnt__7467) {
          var nval__7470 = f.call(null, val__7468, cljs.core._nth.call(null, cicoll, n__7469));
          if(cljs.core.reduced_QMARK_.call(null, nval__7470)) {
            return cljs.core.deref.call(null, nval__7470)
          }else {
            var G__7479 = nval__7470;
            var G__7480 = n__7469 + 1;
            val__7468 = G__7479;
            n__7469 = G__7480;
            continue
          }
        }else {
          return val__7468
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__7471 = cljs.core._count.call(null, cicoll);
    var val__7472 = val;
    var n__7473 = 0;
    while(true) {
      if(n__7473 < cnt__7471) {
        var nval__7474 = f.call(null, val__7472, cljs.core._nth.call(null, cicoll, n__7473));
        if(cljs.core.reduced_QMARK_.call(null, nval__7474)) {
          return cljs.core.deref.call(null, nval__7474)
        }else {
          var G__7481 = nval__7474;
          var G__7482 = n__7473 + 1;
          val__7472 = G__7481;
          n__7473 = G__7482;
          continue
        }
      }else {
        return val__7472
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__7475 = cljs.core._count.call(null, cicoll);
    var val__7476 = val;
    var n__7477 = idx;
    while(true) {
      if(n__7477 < cnt__7475) {
        var nval__7478 = f.call(null, val__7476, cljs.core._nth.call(null, cicoll, n__7477));
        if(cljs.core.reduced_QMARK_.call(null, nval__7478)) {
          return cljs.core.deref.call(null, nval__7478)
        }else {
          var G__7483 = nval__7478;
          var G__7484 = n__7477 + 1;
          val__7476 = G__7483;
          n__7477 = G__7484;
          continue
        }
      }else {
        return val__7476
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__7497 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__7498 = arr[0];
      var n__7499 = 1;
      while(true) {
        if(n__7499 < cnt__7497) {
          var nval__7500 = f.call(null, val__7498, arr[n__7499]);
          if(cljs.core.reduced_QMARK_.call(null, nval__7500)) {
            return cljs.core.deref.call(null, nval__7500)
          }else {
            var G__7509 = nval__7500;
            var G__7510 = n__7499 + 1;
            val__7498 = G__7509;
            n__7499 = G__7510;
            continue
          }
        }else {
          return val__7498
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__7501 = arr.length;
    var val__7502 = val;
    var n__7503 = 0;
    while(true) {
      if(n__7503 < cnt__7501) {
        var nval__7504 = f.call(null, val__7502, arr[n__7503]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7504)) {
          return cljs.core.deref.call(null, nval__7504)
        }else {
          var G__7511 = nval__7504;
          var G__7512 = n__7503 + 1;
          val__7502 = G__7511;
          n__7503 = G__7512;
          continue
        }
      }else {
        return val__7502
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__7505 = arr.length;
    var val__7506 = val;
    var n__7507 = idx;
    while(true) {
      if(n__7507 < cnt__7505) {
        var nval__7508 = f.call(null, val__7506, arr[n__7507]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7508)) {
          return cljs.core.deref.call(null, nval__7508)
        }else {
          var G__7513 = nval__7508;
          var G__7514 = n__7507 + 1;
          val__7506 = G__7513;
          n__7507 = G__7514;
          continue
        }
      }else {
        return val__7506
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7515 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__7516 = this;
  if(this__7516.i + 1 < this__7516.a.length) {
    return new cljs.core.IndexedSeq(this__7516.a, this__7516.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7517 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__7518 = this;
  var c__7519 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__7519 > 0) {
    return new cljs.core.RSeq(coll, c__7519 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__7520 = this;
  var this__7521 = this;
  return cljs.core.pr_str.call(null, this__7521)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__7522 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7522.a)) {
    return cljs.core.ci_reduce.call(null, this__7522.a, f, this__7522.a[this__7522.i], this__7522.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__7522.a[this__7522.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__7523 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7523.a)) {
    return cljs.core.ci_reduce.call(null, this__7523.a, f, start, this__7523.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__7524 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__7525 = this;
  return this__7525.a.length - this__7525.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__7526 = this;
  return this__7526.a[this__7526.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__7527 = this;
  if(this__7527.i + 1 < this__7527.a.length) {
    return new cljs.core.IndexedSeq(this__7527.a, this__7527.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7528 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__7529 = this;
  var i__7530 = n + this__7529.i;
  if(i__7530 < this__7529.a.length) {
    return this__7529.a[i__7530]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__7531 = this;
  var i__7532 = n + this__7531.i;
  if(i__7532 < this__7531.a.length) {
    return this__7531.a[i__7532]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__7533 = null;
  var G__7533__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__7533__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__7533 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7533__2.call(this, array, f);
      case 3:
        return G__7533__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7533
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__7534 = null;
  var G__7534__2 = function(array, k) {
    return array[k]
  };
  var G__7534__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__7534 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7534__2.call(this, array, k);
      case 3:
        return G__7534__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7534
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__7535 = null;
  var G__7535__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__7535__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__7535 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7535__2.call(this, array, n);
      case 3:
        return G__7535__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7535
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7536 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7537 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__7538 = this;
  var this__7539 = this;
  return cljs.core.pr_str.call(null, this__7539)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7540 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7541 = this;
  return this__7541.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7542 = this;
  return cljs.core._nth.call(null, this__7542.ci, this__7542.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7543 = this;
  if(this__7543.i > 0) {
    return new cljs.core.RSeq(this__7543.ci, this__7543.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7544 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__7545 = this;
  return new cljs.core.RSeq(this__7545.ci, this__7545.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7546 = this;
  return this__7546.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7550__7551 = coll;
      if(G__7550__7551) {
        if(function() {
          var or__3824__auto____7552 = G__7550__7551.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____7552) {
            return or__3824__auto____7552
          }else {
            return G__7550__7551.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__7550__7551.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7550__7551)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7550__7551)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7557__7558 = coll;
      if(G__7557__7558) {
        if(function() {
          var or__3824__auto____7559 = G__7557__7558.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____7559) {
            return or__3824__auto____7559
          }else {
            return G__7557__7558.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7557__7558.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7557__7558)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7557__7558)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__7560 = cljs.core.seq.call(null, coll);
      if(s__7560 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__7560)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__7565__7566 = coll;
      if(G__7565__7566) {
        if(function() {
          var or__3824__auto____7567 = G__7565__7566.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____7567) {
            return or__3824__auto____7567
          }else {
            return G__7565__7566.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7565__7566.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7565__7566)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7565__7566)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__7568 = cljs.core.seq.call(null, coll);
      if(!(s__7568 == null)) {
        return cljs.core._rest.call(null, s__7568)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7572__7573 = coll;
      if(G__7572__7573) {
        if(function() {
          var or__3824__auto____7574 = G__7572__7573.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____7574) {
            return or__3824__auto____7574
          }else {
            return G__7572__7573.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__7572__7573.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__7572__7573)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__7572__7573)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__7576 = cljs.core.next.call(null, s);
    if(!(sn__7576 == null)) {
      var G__7577 = sn__7576;
      s = G__7577;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__7578__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__7579 = conj.call(null, coll, x);
          var G__7580 = cljs.core.first.call(null, xs);
          var G__7581 = cljs.core.next.call(null, xs);
          coll = G__7579;
          x = G__7580;
          xs = G__7581;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__7578 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7578__delegate.call(this, coll, x, xs)
    };
    G__7578.cljs$lang$maxFixedArity = 2;
    G__7578.cljs$lang$applyTo = function(arglist__7582) {
      var coll = cljs.core.first(arglist__7582);
      var x = cljs.core.first(cljs.core.next(arglist__7582));
      var xs = cljs.core.rest(cljs.core.next(arglist__7582));
      return G__7578__delegate(coll, x, xs)
    };
    G__7578.cljs$lang$arity$variadic = G__7578__delegate;
    return G__7578
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__7585 = cljs.core.seq.call(null, coll);
  var acc__7586 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__7585)) {
      return acc__7586 + cljs.core._count.call(null, s__7585)
    }else {
      var G__7587 = cljs.core.next.call(null, s__7585);
      var G__7588 = acc__7586 + 1;
      s__7585 = G__7587;
      acc__7586 = G__7588;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__7595__7596 = coll;
        if(G__7595__7596) {
          if(function() {
            var or__3824__auto____7597 = G__7595__7596.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____7597) {
              return or__3824__auto____7597
            }else {
              return G__7595__7596.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__7595__7596.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7595__7596)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7595__7596)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__7598__7599 = coll;
        if(G__7598__7599) {
          if(function() {
            var or__3824__auto____7600 = G__7598__7599.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____7600) {
              return or__3824__auto____7600
            }else {
              return G__7598__7599.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__7598__7599.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7598__7599)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7598__7599)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__7603__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__7602 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__7604 = ret__7602;
          var G__7605 = cljs.core.first.call(null, kvs);
          var G__7606 = cljs.core.second.call(null, kvs);
          var G__7607 = cljs.core.nnext.call(null, kvs);
          coll = G__7604;
          k = G__7605;
          v = G__7606;
          kvs = G__7607;
          continue
        }else {
          return ret__7602
        }
        break
      }
    };
    var G__7603 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__7603__delegate.call(this, coll, k, v, kvs)
    };
    G__7603.cljs$lang$maxFixedArity = 3;
    G__7603.cljs$lang$applyTo = function(arglist__7608) {
      var coll = cljs.core.first(arglist__7608);
      var k = cljs.core.first(cljs.core.next(arglist__7608));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7608)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7608)));
      return G__7603__delegate(coll, k, v, kvs)
    };
    G__7603.cljs$lang$arity$variadic = G__7603__delegate;
    return G__7603
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__7611__delegate = function(coll, k, ks) {
      while(true) {
        var ret__7610 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__7612 = ret__7610;
          var G__7613 = cljs.core.first.call(null, ks);
          var G__7614 = cljs.core.next.call(null, ks);
          coll = G__7612;
          k = G__7613;
          ks = G__7614;
          continue
        }else {
          return ret__7610
        }
        break
      }
    };
    var G__7611 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7611__delegate.call(this, coll, k, ks)
    };
    G__7611.cljs$lang$maxFixedArity = 2;
    G__7611.cljs$lang$applyTo = function(arglist__7615) {
      var coll = cljs.core.first(arglist__7615);
      var k = cljs.core.first(cljs.core.next(arglist__7615));
      var ks = cljs.core.rest(cljs.core.next(arglist__7615));
      return G__7611__delegate(coll, k, ks)
    };
    G__7611.cljs$lang$arity$variadic = G__7611__delegate;
    return G__7611
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__7619__7620 = o;
    if(G__7619__7620) {
      if(function() {
        var or__3824__auto____7621 = G__7619__7620.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____7621) {
          return or__3824__auto____7621
        }else {
          return G__7619__7620.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__7619__7620.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7619__7620)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7619__7620)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__7624__delegate = function(coll, k, ks) {
      while(true) {
        var ret__7623 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__7625 = ret__7623;
          var G__7626 = cljs.core.first.call(null, ks);
          var G__7627 = cljs.core.next.call(null, ks);
          coll = G__7625;
          k = G__7626;
          ks = G__7627;
          continue
        }else {
          return ret__7623
        }
        break
      }
    };
    var G__7624 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7624__delegate.call(this, coll, k, ks)
    };
    G__7624.cljs$lang$maxFixedArity = 2;
    G__7624.cljs$lang$applyTo = function(arglist__7628) {
      var coll = cljs.core.first(arglist__7628);
      var k = cljs.core.first(cljs.core.next(arglist__7628));
      var ks = cljs.core.rest(cljs.core.next(arglist__7628));
      return G__7624__delegate(coll, k, ks)
    };
    G__7624.cljs$lang$arity$variadic = G__7624__delegate;
    return G__7624
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__7630 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__7630;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__7630
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__7632 = cljs.core.string_hash_cache[k];
  if(!(h__7632 == null)) {
    return h__7632
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____7634 = goog.isString(o);
      if(and__3822__auto____7634) {
        return check_cache
      }else {
        return and__3822__auto____7634
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7638__7639 = x;
    if(G__7638__7639) {
      if(function() {
        var or__3824__auto____7640 = G__7638__7639.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____7640) {
          return or__3824__auto____7640
        }else {
          return G__7638__7639.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__7638__7639.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__7638__7639)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__7638__7639)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7644__7645 = x;
    if(G__7644__7645) {
      if(function() {
        var or__3824__auto____7646 = G__7644__7645.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____7646) {
          return or__3824__auto____7646
        }else {
          return G__7644__7645.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__7644__7645.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__7644__7645)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__7644__7645)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__7650__7651 = x;
  if(G__7650__7651) {
    if(function() {
      var or__3824__auto____7652 = G__7650__7651.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____7652) {
        return or__3824__auto____7652
      }else {
        return G__7650__7651.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__7650__7651.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__7650__7651)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__7650__7651)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__7656__7657 = x;
  if(G__7656__7657) {
    if(function() {
      var or__3824__auto____7658 = G__7656__7657.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____7658) {
        return or__3824__auto____7658
      }else {
        return G__7656__7657.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__7656__7657.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__7656__7657)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__7656__7657)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__7662__7663 = x;
  if(G__7662__7663) {
    if(function() {
      var or__3824__auto____7664 = G__7662__7663.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____7664) {
        return or__3824__auto____7664
      }else {
        return G__7662__7663.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__7662__7663.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__7662__7663)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__7662__7663)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__7668__7669 = x;
  if(G__7668__7669) {
    if(function() {
      var or__3824__auto____7670 = G__7668__7669.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____7670) {
        return or__3824__auto____7670
      }else {
        return G__7668__7669.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__7668__7669.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7668__7669)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7668__7669)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__7674__7675 = x;
  if(G__7674__7675) {
    if(function() {
      var or__3824__auto____7676 = G__7674__7675.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____7676) {
        return or__3824__auto____7676
      }else {
        return G__7674__7675.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__7674__7675.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7674__7675)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7674__7675)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7680__7681 = x;
    if(G__7680__7681) {
      if(function() {
        var or__3824__auto____7682 = G__7680__7681.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____7682) {
          return or__3824__auto____7682
        }else {
          return G__7680__7681.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__7680__7681.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__7680__7681)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__7680__7681)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__7686__7687 = x;
  if(G__7686__7687) {
    if(function() {
      var or__3824__auto____7688 = G__7686__7687.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____7688) {
        return or__3824__auto____7688
      }else {
        return G__7686__7687.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__7686__7687.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__7686__7687)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__7686__7687)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__7692__7693 = x;
  if(G__7692__7693) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____7694 = null;
      if(cljs.core.truth_(or__3824__auto____7694)) {
        return or__3824__auto____7694
      }else {
        return G__7692__7693.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__7692__7693.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__7692__7693)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__7692__7693)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__7695__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__7695 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__7695__delegate.call(this, keyvals)
    };
    G__7695.cljs$lang$maxFixedArity = 0;
    G__7695.cljs$lang$applyTo = function(arglist__7696) {
      var keyvals = cljs.core.seq(arglist__7696);
      return G__7695__delegate(keyvals)
    };
    G__7695.cljs$lang$arity$variadic = G__7695__delegate;
    return G__7695
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__7698 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__7698.push(key)
  });
  return keys__7698
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__7702 = i;
  var j__7703 = j;
  var len__7704 = len;
  while(true) {
    if(len__7704 === 0) {
      return to
    }else {
      to[j__7703] = from[i__7702];
      var G__7705 = i__7702 + 1;
      var G__7706 = j__7703 + 1;
      var G__7707 = len__7704 - 1;
      i__7702 = G__7705;
      j__7703 = G__7706;
      len__7704 = G__7707;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__7711 = i + (len - 1);
  var j__7712 = j + (len - 1);
  var len__7713 = len;
  while(true) {
    if(len__7713 === 0) {
      return to
    }else {
      to[j__7712] = from[i__7711];
      var G__7714 = i__7711 - 1;
      var G__7715 = j__7712 - 1;
      var G__7716 = len__7713 - 1;
      i__7711 = G__7714;
      j__7712 = G__7715;
      len__7713 = G__7716;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__7720__7721 = s;
    if(G__7720__7721) {
      if(function() {
        var or__3824__auto____7722 = G__7720__7721.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____7722) {
          return or__3824__auto____7722
        }else {
          return G__7720__7721.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__7720__7721.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7720__7721)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7720__7721)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__7726__7727 = s;
  if(G__7726__7727) {
    if(function() {
      var or__3824__auto____7728 = G__7726__7727.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____7728) {
        return or__3824__auto____7728
      }else {
        return G__7726__7727.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__7726__7727.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__7726__7727)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__7726__7727)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____7731 = goog.isString(x);
  if(and__3822__auto____7731) {
    return!function() {
      var or__3824__auto____7732 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____7732) {
        return or__3824__auto____7732
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____7731
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____7734 = goog.isString(x);
  if(and__3822__auto____7734) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____7734
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____7736 = goog.isString(x);
  if(and__3822__auto____7736) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____7736
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____7741 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____7741) {
    return or__3824__auto____7741
  }else {
    var G__7742__7743 = f;
    if(G__7742__7743) {
      if(function() {
        var or__3824__auto____7744 = G__7742__7743.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____7744) {
          return or__3824__auto____7744
        }else {
          return G__7742__7743.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__7742__7743.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__7742__7743)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__7742__7743)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____7746 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____7746) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____7746
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____7749 = coll;
    if(cljs.core.truth_(and__3822__auto____7749)) {
      var and__3822__auto____7750 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____7750) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____7750
      }
    }else {
      return and__3822__auto____7749
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__7759__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__7755 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__7756 = more;
        while(true) {
          var x__7757 = cljs.core.first.call(null, xs__7756);
          var etc__7758 = cljs.core.next.call(null, xs__7756);
          if(cljs.core.truth_(xs__7756)) {
            if(cljs.core.contains_QMARK_.call(null, s__7755, x__7757)) {
              return false
            }else {
              var G__7760 = cljs.core.conj.call(null, s__7755, x__7757);
              var G__7761 = etc__7758;
              s__7755 = G__7760;
              xs__7756 = G__7761;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__7759 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7759__delegate.call(this, x, y, more)
    };
    G__7759.cljs$lang$maxFixedArity = 2;
    G__7759.cljs$lang$applyTo = function(arglist__7762) {
      var x = cljs.core.first(arglist__7762);
      var y = cljs.core.first(cljs.core.next(arglist__7762));
      var more = cljs.core.rest(cljs.core.next(arglist__7762));
      return G__7759__delegate(x, y, more)
    };
    G__7759.cljs$lang$arity$variadic = G__7759__delegate;
    return G__7759
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__7766__7767 = x;
            if(G__7766__7767) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____7768 = null;
                if(cljs.core.truth_(or__3824__auto____7768)) {
                  return or__3824__auto____7768
                }else {
                  return G__7766__7767.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__7766__7767.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__7766__7767)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__7766__7767)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__7773 = cljs.core.count.call(null, xs);
    var yl__7774 = cljs.core.count.call(null, ys);
    if(xl__7773 < yl__7774) {
      return-1
    }else {
      if(xl__7773 > yl__7774) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__7773, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__7775 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____7776 = d__7775 === 0;
        if(and__3822__auto____7776) {
          return n + 1 < len
        }else {
          return and__3822__auto____7776
        }
      }()) {
        var G__7777 = xs;
        var G__7778 = ys;
        var G__7779 = len;
        var G__7780 = n + 1;
        xs = G__7777;
        ys = G__7778;
        len = G__7779;
        n = G__7780;
        continue
      }else {
        return d__7775
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__7782 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__7782)) {
        return r__7782
      }else {
        if(cljs.core.truth_(r__7782)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__7784 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__7784, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__7784)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____7790 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____7790) {
      var s__7791 = temp__3971__auto____7790;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__7791), cljs.core.next.call(null, s__7791))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__7792 = val;
    var coll__7793 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__7793) {
        var nval__7794 = f.call(null, val__7792, cljs.core.first.call(null, coll__7793));
        if(cljs.core.reduced_QMARK_.call(null, nval__7794)) {
          return cljs.core.deref.call(null, nval__7794)
        }else {
          var G__7795 = nval__7794;
          var G__7796 = cljs.core.next.call(null, coll__7793);
          val__7792 = G__7795;
          coll__7793 = G__7796;
          continue
        }
      }else {
        return val__7792
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__7798 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__7798);
  return cljs.core.vec.call(null, a__7798)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__7805__7806 = coll;
      if(G__7805__7806) {
        if(function() {
          var or__3824__auto____7807 = G__7805__7806.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____7807) {
            return or__3824__auto____7807
          }else {
            return G__7805__7806.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__7805__7806.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7805__7806)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7805__7806)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__7808__7809 = coll;
      if(G__7808__7809) {
        if(function() {
          var or__3824__auto____7810 = G__7808__7809.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____7810) {
            return or__3824__auto____7810
          }else {
            return G__7808__7809.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__7808__7809.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7808__7809)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7808__7809)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__7811 = this;
  return this__7811.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__7812__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__7812 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7812__delegate.call(this, x, y, more)
    };
    G__7812.cljs$lang$maxFixedArity = 2;
    G__7812.cljs$lang$applyTo = function(arglist__7813) {
      var x = cljs.core.first(arglist__7813);
      var y = cljs.core.first(cljs.core.next(arglist__7813));
      var more = cljs.core.rest(cljs.core.next(arglist__7813));
      return G__7812__delegate(x, y, more)
    };
    G__7812.cljs$lang$arity$variadic = G__7812__delegate;
    return G__7812
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__7814__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__7814 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7814__delegate.call(this, x, y, more)
    };
    G__7814.cljs$lang$maxFixedArity = 2;
    G__7814.cljs$lang$applyTo = function(arglist__7815) {
      var x = cljs.core.first(arglist__7815);
      var y = cljs.core.first(cljs.core.next(arglist__7815));
      var more = cljs.core.rest(cljs.core.next(arglist__7815));
      return G__7814__delegate(x, y, more)
    };
    G__7814.cljs$lang$arity$variadic = G__7814__delegate;
    return G__7814
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__7816__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__7816 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7816__delegate.call(this, x, y, more)
    };
    G__7816.cljs$lang$maxFixedArity = 2;
    G__7816.cljs$lang$applyTo = function(arglist__7817) {
      var x = cljs.core.first(arglist__7817);
      var y = cljs.core.first(cljs.core.next(arglist__7817));
      var more = cljs.core.rest(cljs.core.next(arglist__7817));
      return G__7816__delegate(x, y, more)
    };
    G__7816.cljs$lang$arity$variadic = G__7816__delegate;
    return G__7816
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__7818__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__7818 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7818__delegate.call(this, x, y, more)
    };
    G__7818.cljs$lang$maxFixedArity = 2;
    G__7818.cljs$lang$applyTo = function(arglist__7819) {
      var x = cljs.core.first(arglist__7819);
      var y = cljs.core.first(cljs.core.next(arglist__7819));
      var more = cljs.core.rest(cljs.core.next(arglist__7819));
      return G__7818__delegate(x, y, more)
    };
    G__7818.cljs$lang$arity$variadic = G__7818__delegate;
    return G__7818
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__7820__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__7821 = y;
            var G__7822 = cljs.core.first.call(null, more);
            var G__7823 = cljs.core.next.call(null, more);
            x = G__7821;
            y = G__7822;
            more = G__7823;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7820 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7820__delegate.call(this, x, y, more)
    };
    G__7820.cljs$lang$maxFixedArity = 2;
    G__7820.cljs$lang$applyTo = function(arglist__7824) {
      var x = cljs.core.first(arglist__7824);
      var y = cljs.core.first(cljs.core.next(arglist__7824));
      var more = cljs.core.rest(cljs.core.next(arglist__7824));
      return G__7820__delegate(x, y, more)
    };
    G__7820.cljs$lang$arity$variadic = G__7820__delegate;
    return G__7820
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__7825__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__7826 = y;
            var G__7827 = cljs.core.first.call(null, more);
            var G__7828 = cljs.core.next.call(null, more);
            x = G__7826;
            y = G__7827;
            more = G__7828;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7825 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7825__delegate.call(this, x, y, more)
    };
    G__7825.cljs$lang$maxFixedArity = 2;
    G__7825.cljs$lang$applyTo = function(arglist__7829) {
      var x = cljs.core.first(arglist__7829);
      var y = cljs.core.first(cljs.core.next(arglist__7829));
      var more = cljs.core.rest(cljs.core.next(arglist__7829));
      return G__7825__delegate(x, y, more)
    };
    G__7825.cljs$lang$arity$variadic = G__7825__delegate;
    return G__7825
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__7830__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__7831 = y;
            var G__7832 = cljs.core.first.call(null, more);
            var G__7833 = cljs.core.next.call(null, more);
            x = G__7831;
            y = G__7832;
            more = G__7833;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7830 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7830__delegate.call(this, x, y, more)
    };
    G__7830.cljs$lang$maxFixedArity = 2;
    G__7830.cljs$lang$applyTo = function(arglist__7834) {
      var x = cljs.core.first(arglist__7834);
      var y = cljs.core.first(cljs.core.next(arglist__7834));
      var more = cljs.core.rest(cljs.core.next(arglist__7834));
      return G__7830__delegate(x, y, more)
    };
    G__7830.cljs$lang$arity$variadic = G__7830__delegate;
    return G__7830
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__7835__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__7836 = y;
            var G__7837 = cljs.core.first.call(null, more);
            var G__7838 = cljs.core.next.call(null, more);
            x = G__7836;
            y = G__7837;
            more = G__7838;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7835 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7835__delegate.call(this, x, y, more)
    };
    G__7835.cljs$lang$maxFixedArity = 2;
    G__7835.cljs$lang$applyTo = function(arglist__7839) {
      var x = cljs.core.first(arglist__7839);
      var y = cljs.core.first(cljs.core.next(arglist__7839));
      var more = cljs.core.rest(cljs.core.next(arglist__7839));
      return G__7835__delegate(x, y, more)
    };
    G__7835.cljs$lang$arity$variadic = G__7835__delegate;
    return G__7835
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__7840__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__7840 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7840__delegate.call(this, x, y, more)
    };
    G__7840.cljs$lang$maxFixedArity = 2;
    G__7840.cljs$lang$applyTo = function(arglist__7841) {
      var x = cljs.core.first(arglist__7841);
      var y = cljs.core.first(cljs.core.next(arglist__7841));
      var more = cljs.core.rest(cljs.core.next(arglist__7841));
      return G__7840__delegate(x, y, more)
    };
    G__7840.cljs$lang$arity$variadic = G__7840__delegate;
    return G__7840
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__7842__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__7842 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7842__delegate.call(this, x, y, more)
    };
    G__7842.cljs$lang$maxFixedArity = 2;
    G__7842.cljs$lang$applyTo = function(arglist__7843) {
      var x = cljs.core.first(arglist__7843);
      var y = cljs.core.first(cljs.core.next(arglist__7843));
      var more = cljs.core.rest(cljs.core.next(arglist__7843));
      return G__7842__delegate(x, y, more)
    };
    G__7842.cljs$lang$arity$variadic = G__7842__delegate;
    return G__7842
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__7845 = n % d;
  return cljs.core.fix.call(null, (n - rem__7845) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__7847 = cljs.core.quot.call(null, n, d);
  return n - d * q__7847
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__7850 = v - (v >> 1 & 1431655765);
  var v__7851 = (v__7850 & 858993459) + (v__7850 >> 2 & 858993459);
  return(v__7851 + (v__7851 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__7852__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7853 = y;
            var G__7854 = cljs.core.first.call(null, more);
            var G__7855 = cljs.core.next.call(null, more);
            x = G__7853;
            y = G__7854;
            more = G__7855;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7852 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7852__delegate.call(this, x, y, more)
    };
    G__7852.cljs$lang$maxFixedArity = 2;
    G__7852.cljs$lang$applyTo = function(arglist__7856) {
      var x = cljs.core.first(arglist__7856);
      var y = cljs.core.first(cljs.core.next(arglist__7856));
      var more = cljs.core.rest(cljs.core.next(arglist__7856));
      return G__7852__delegate(x, y, more)
    };
    G__7852.cljs$lang$arity$variadic = G__7852__delegate;
    return G__7852
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__7860 = n;
  var xs__7861 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7862 = xs__7861;
      if(and__3822__auto____7862) {
        return n__7860 > 0
      }else {
        return and__3822__auto____7862
      }
    }())) {
      var G__7863 = n__7860 - 1;
      var G__7864 = cljs.core.next.call(null, xs__7861);
      n__7860 = G__7863;
      xs__7861 = G__7864;
      continue
    }else {
      return xs__7861
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__7865__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__7866 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__7867 = cljs.core.next.call(null, more);
            sb = G__7866;
            more = G__7867;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__7865 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7865__delegate.call(this, x, ys)
    };
    G__7865.cljs$lang$maxFixedArity = 1;
    G__7865.cljs$lang$applyTo = function(arglist__7868) {
      var x = cljs.core.first(arglist__7868);
      var ys = cljs.core.rest(arglist__7868);
      return G__7865__delegate(x, ys)
    };
    G__7865.cljs$lang$arity$variadic = G__7865__delegate;
    return G__7865
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__7869__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__7870 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__7871 = cljs.core.next.call(null, more);
            sb = G__7870;
            more = G__7871;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__7869 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7869__delegate.call(this, x, ys)
    };
    G__7869.cljs$lang$maxFixedArity = 1;
    G__7869.cljs$lang$applyTo = function(arglist__7872) {
      var x = cljs.core.first(arglist__7872);
      var ys = cljs.core.rest(arglist__7872);
      return G__7869__delegate(x, ys)
    };
    G__7869.cljs$lang$arity$variadic = G__7869__delegate;
    return G__7869
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__7873) {
    var fmt = cljs.core.first(arglist__7873);
    var args = cljs.core.rest(arglist__7873);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__7876 = cljs.core.seq.call(null, x);
    var ys__7877 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__7876 == null) {
        return ys__7877 == null
      }else {
        if(ys__7877 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__7876), cljs.core.first.call(null, ys__7877))) {
            var G__7878 = cljs.core.next.call(null, xs__7876);
            var G__7879 = cljs.core.next.call(null, ys__7877);
            xs__7876 = G__7878;
            ys__7877 = G__7879;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__7880_SHARP_, p2__7881_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__7880_SHARP_, cljs.core.hash.call(null, p2__7881_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__7885 = 0;
  var s__7886 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__7886) {
      var e__7887 = cljs.core.first.call(null, s__7886);
      var G__7888 = (h__7885 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__7887)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__7887)))) % 4503599627370496;
      var G__7889 = cljs.core.next.call(null, s__7886);
      h__7885 = G__7888;
      s__7886 = G__7889;
      continue
    }else {
      return h__7885
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__7893 = 0;
  var s__7894 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__7894) {
      var e__7895 = cljs.core.first.call(null, s__7894);
      var G__7896 = (h__7893 + cljs.core.hash.call(null, e__7895)) % 4503599627370496;
      var G__7897 = cljs.core.next.call(null, s__7894);
      h__7893 = G__7896;
      s__7894 = G__7897;
      continue
    }else {
      return h__7893
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__7918__7919 = cljs.core.seq.call(null, fn_map);
  if(G__7918__7919) {
    var G__7921__7923 = cljs.core.first.call(null, G__7918__7919);
    var vec__7922__7924 = G__7921__7923;
    var key_name__7925 = cljs.core.nth.call(null, vec__7922__7924, 0, null);
    var f__7926 = cljs.core.nth.call(null, vec__7922__7924, 1, null);
    var G__7918__7927 = G__7918__7919;
    var G__7921__7928 = G__7921__7923;
    var G__7918__7929 = G__7918__7927;
    while(true) {
      var vec__7930__7931 = G__7921__7928;
      var key_name__7932 = cljs.core.nth.call(null, vec__7930__7931, 0, null);
      var f__7933 = cljs.core.nth.call(null, vec__7930__7931, 1, null);
      var G__7918__7934 = G__7918__7929;
      var str_name__7935 = cljs.core.name.call(null, key_name__7932);
      obj[str_name__7935] = f__7933;
      var temp__3974__auto____7936 = cljs.core.next.call(null, G__7918__7934);
      if(temp__3974__auto____7936) {
        var G__7918__7937 = temp__3974__auto____7936;
        var G__7938 = cljs.core.first.call(null, G__7918__7937);
        var G__7939 = G__7918__7937;
        G__7921__7928 = G__7938;
        G__7918__7929 = G__7939;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7940 = this;
  var h__2192__auto____7941 = this__7940.__hash;
  if(!(h__2192__auto____7941 == null)) {
    return h__2192__auto____7941
  }else {
    var h__2192__auto____7942 = cljs.core.hash_coll.call(null, coll);
    this__7940.__hash = h__2192__auto____7942;
    return h__2192__auto____7942
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__7943 = this;
  if(this__7943.count === 1) {
    return null
  }else {
    return this__7943.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7944 = this;
  return new cljs.core.List(this__7944.meta, o, coll, this__7944.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__7945 = this;
  var this__7946 = this;
  return cljs.core.pr_str.call(null, this__7946)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7947 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7948 = this;
  return this__7948.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__7949 = this;
  return this__7949.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__7950 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7951 = this;
  return this__7951.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7952 = this;
  if(this__7952.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__7952.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7953 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7954 = this;
  return new cljs.core.List(meta, this__7954.first, this__7954.rest, this__7954.count, this__7954.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7955 = this;
  return this__7955.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7956 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7957 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__7958 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7959 = this;
  return new cljs.core.List(this__7959.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__7960 = this;
  var this__7961 = this;
  return cljs.core.pr_str.call(null, this__7961)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7962 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7963 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__7964 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__7965 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7966 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7967 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7968 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7969 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7970 = this;
  return this__7970.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7971 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__7975__7976 = coll;
  if(G__7975__7976) {
    if(function() {
      var or__3824__auto____7977 = G__7975__7976.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____7977) {
        return or__3824__auto____7977
      }else {
        return G__7975__7976.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__7975__7976.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__7975__7976)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__7975__7976)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__7978__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__7978 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__7978__delegate.call(this, x, y, z, items)
    };
    G__7978.cljs$lang$maxFixedArity = 3;
    G__7978.cljs$lang$applyTo = function(arglist__7979) {
      var x = cljs.core.first(arglist__7979);
      var y = cljs.core.first(cljs.core.next(arglist__7979));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7979)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7979)));
      return G__7978__delegate(x, y, z, items)
    };
    G__7978.cljs$lang$arity$variadic = G__7978__delegate;
    return G__7978
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7980 = this;
  var h__2192__auto____7981 = this__7980.__hash;
  if(!(h__2192__auto____7981 == null)) {
    return h__2192__auto____7981
  }else {
    var h__2192__auto____7982 = cljs.core.hash_coll.call(null, coll);
    this__7980.__hash = h__2192__auto____7982;
    return h__2192__auto____7982
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__7983 = this;
  if(this__7983.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__7983.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7984 = this;
  return new cljs.core.Cons(null, o, coll, this__7984.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__7985 = this;
  var this__7986 = this;
  return cljs.core.pr_str.call(null, this__7986)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7987 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7988 = this;
  return this__7988.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7989 = this;
  if(this__7989.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__7989.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7990 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7991 = this;
  return new cljs.core.Cons(meta, this__7991.first, this__7991.rest, this__7991.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7992 = this;
  return this__7992.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7993 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__7993.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____7998 = coll == null;
    if(or__3824__auto____7998) {
      return or__3824__auto____7998
    }else {
      var G__7999__8000 = coll;
      if(G__7999__8000) {
        if(function() {
          var or__3824__auto____8001 = G__7999__8000.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8001) {
            return or__3824__auto____8001
          }else {
            return G__7999__8000.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7999__8000.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7999__8000)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7999__8000)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8005__8006 = x;
  if(G__8005__8006) {
    if(function() {
      var or__3824__auto____8007 = G__8005__8006.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____8007) {
        return or__3824__auto____8007
      }else {
        return G__8005__8006.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8005__8006.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8005__8006)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8005__8006)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8008 = null;
  var G__8008__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8008__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8008 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8008__2.call(this, string, f);
      case 3:
        return G__8008__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8008
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8009 = null;
  var G__8009__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8009__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8009 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8009__2.call(this, string, k);
      case 3:
        return G__8009__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8009
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8010 = null;
  var G__8010__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8010__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8010 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8010__2.call(this, string, n);
      case 3:
        return G__8010__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8010
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__8022 = null;
  var G__8022__2 = function(this_sym8013, coll) {
    var this__8015 = this;
    var this_sym8013__8016 = this;
    var ___8017 = this_sym8013__8016;
    if(coll == null) {
      return null
    }else {
      var strobj__8018 = coll.strobj;
      if(strobj__8018 == null) {
        return cljs.core._lookup.call(null, coll, this__8015.k, null)
      }else {
        return strobj__8018[this__8015.k]
      }
    }
  };
  var G__8022__3 = function(this_sym8014, coll, not_found) {
    var this__8015 = this;
    var this_sym8014__8019 = this;
    var ___8020 = this_sym8014__8019;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__8015.k, not_found)
    }
  };
  G__8022 = function(this_sym8014, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8022__2.call(this, this_sym8014, coll);
      case 3:
        return G__8022__3.call(this, this_sym8014, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8022
}();
cljs.core.Keyword.prototype.apply = function(this_sym8011, args8012) {
  var this__8021 = this;
  return this_sym8011.call.apply(this_sym8011, [this_sym8011].concat(args8012.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8031 = null;
  var G__8031__2 = function(this_sym8025, coll) {
    var this_sym8025__8027 = this;
    var this__8028 = this_sym8025__8027;
    return cljs.core._lookup.call(null, coll, this__8028.toString(), null)
  };
  var G__8031__3 = function(this_sym8026, coll, not_found) {
    var this_sym8026__8029 = this;
    var this__8030 = this_sym8026__8029;
    return cljs.core._lookup.call(null, coll, this__8030.toString(), not_found)
  };
  G__8031 = function(this_sym8026, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8031__2.call(this, this_sym8026, coll);
      case 3:
        return G__8031__3.call(this, this_sym8026, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8031
}();
String.prototype.apply = function(this_sym8023, args8024) {
  return this_sym8023.call.apply(this_sym8023, [this_sym8023].concat(args8024.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8033 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8033
  }else {
    lazy_seq.x = x__8033.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8034 = this;
  var h__2192__auto____8035 = this__8034.__hash;
  if(!(h__2192__auto____8035 == null)) {
    return h__2192__auto____8035
  }else {
    var h__2192__auto____8036 = cljs.core.hash_coll.call(null, coll);
    this__8034.__hash = h__2192__auto____8036;
    return h__2192__auto____8036
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8037 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8038 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8039 = this;
  var this__8040 = this;
  return cljs.core.pr_str.call(null, this__8040)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8041 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8042 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8043 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8044 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8045 = this;
  return new cljs.core.LazySeq(meta, this__8045.realized, this__8045.x, this__8045.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8046 = this;
  return this__8046.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8047 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8047.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8048 = this;
  return this__8048.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8049 = this;
  var ___8050 = this;
  this__8049.buf[this__8049.end] = o;
  return this__8049.end = this__8049.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8051 = this;
  var ___8052 = this;
  var ret__8053 = new cljs.core.ArrayChunk(this__8051.buf, 0, this__8051.end);
  this__8051.buf = null;
  return ret__8053
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8054 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__8054.arr[this__8054.off], this__8054.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8055 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__8055.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8056 = this;
  if(this__8056.off === this__8056.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8056.arr, this__8056.off + 1, this__8056.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8057 = this;
  return this__8057.arr[this__8057.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8058 = this;
  if(function() {
    var and__3822__auto____8059 = i >= 0;
    if(and__3822__auto____8059) {
      return i < this__8058.end - this__8058.off
    }else {
      return and__3822__auto____8059
    }
  }()) {
    return this__8058.arr[this__8058.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8060 = this;
  return this__8060.end - this__8060.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8061 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8062 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8063 = this;
  return cljs.core._nth.call(null, this__8063.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8064 = this;
  if(cljs.core._count.call(null, this__8064.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8064.chunk), this__8064.more, this__8064.meta)
  }else {
    if(this__8064.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8064.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8065 = this;
  if(this__8065.more == null) {
    return null
  }else {
    return this__8065.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8066 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8067 = this;
  return new cljs.core.ChunkedCons(this__8067.chunk, this__8067.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8068 = this;
  return this__8068.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8069 = this;
  return this__8069.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8070 = this;
  if(this__8070.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8070.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8074__8075 = s;
    if(G__8074__8075) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____8076 = null;
        if(cljs.core.truth_(or__3824__auto____8076)) {
          return or__3824__auto____8076
        }else {
          return G__8074__8075.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__8074__8075.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8074__8075)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8074__8075)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8079 = [];
  var s__8080 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8080)) {
      ary__8079.push(cljs.core.first.call(null, s__8080));
      var G__8081 = cljs.core.next.call(null, s__8080);
      s__8080 = G__8081;
      continue
    }else {
      return ary__8079
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8085 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8086 = 0;
  var xs__8087 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8087) {
      ret__8085[i__8086] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8087));
      var G__8088 = i__8086 + 1;
      var G__8089 = cljs.core.next.call(null, xs__8087);
      i__8086 = G__8088;
      xs__8087 = G__8089;
      continue
    }else {
    }
    break
  }
  return ret__8085
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8097 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8098 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8099 = 0;
      var s__8100 = s__8098;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8101 = s__8100;
          if(and__3822__auto____8101) {
            return i__8099 < size
          }else {
            return and__3822__auto____8101
          }
        }())) {
          a__8097[i__8099] = cljs.core.first.call(null, s__8100);
          var G__8104 = i__8099 + 1;
          var G__8105 = cljs.core.next.call(null, s__8100);
          i__8099 = G__8104;
          s__8100 = G__8105;
          continue
        }else {
          return a__8097
        }
        break
      }
    }else {
      var n__2527__auto____8102 = size;
      var i__8103 = 0;
      while(true) {
        if(i__8103 < n__2527__auto____8102) {
          a__8097[i__8103] = init_val_or_seq;
          var G__8106 = i__8103 + 1;
          i__8103 = G__8106;
          continue
        }else {
        }
        break
      }
      return a__8097
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8114 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8115 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8116 = 0;
      var s__8117 = s__8115;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8118 = s__8117;
          if(and__3822__auto____8118) {
            return i__8116 < size
          }else {
            return and__3822__auto____8118
          }
        }())) {
          a__8114[i__8116] = cljs.core.first.call(null, s__8117);
          var G__8121 = i__8116 + 1;
          var G__8122 = cljs.core.next.call(null, s__8117);
          i__8116 = G__8121;
          s__8117 = G__8122;
          continue
        }else {
          return a__8114
        }
        break
      }
    }else {
      var n__2527__auto____8119 = size;
      var i__8120 = 0;
      while(true) {
        if(i__8120 < n__2527__auto____8119) {
          a__8114[i__8120] = init_val_or_seq;
          var G__8123 = i__8120 + 1;
          i__8120 = G__8123;
          continue
        }else {
        }
        break
      }
      return a__8114
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8131 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8132 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8133 = 0;
      var s__8134 = s__8132;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8135 = s__8134;
          if(and__3822__auto____8135) {
            return i__8133 < size
          }else {
            return and__3822__auto____8135
          }
        }())) {
          a__8131[i__8133] = cljs.core.first.call(null, s__8134);
          var G__8138 = i__8133 + 1;
          var G__8139 = cljs.core.next.call(null, s__8134);
          i__8133 = G__8138;
          s__8134 = G__8139;
          continue
        }else {
          return a__8131
        }
        break
      }
    }else {
      var n__2527__auto____8136 = size;
      var i__8137 = 0;
      while(true) {
        if(i__8137 < n__2527__auto____8136) {
          a__8131[i__8137] = init_val_or_seq;
          var G__8140 = i__8137 + 1;
          i__8137 = G__8140;
          continue
        }else {
        }
        break
      }
      return a__8131
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8145 = s;
    var i__8146 = n;
    var sum__8147 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____8148 = i__8146 > 0;
        if(and__3822__auto____8148) {
          return cljs.core.seq.call(null, s__8145)
        }else {
          return and__3822__auto____8148
        }
      }())) {
        var G__8149 = cljs.core.next.call(null, s__8145);
        var G__8150 = i__8146 - 1;
        var G__8151 = sum__8147 + 1;
        s__8145 = G__8149;
        i__8146 = G__8150;
        sum__8147 = G__8151;
        continue
      }else {
        return sum__8147
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8156 = cljs.core.seq.call(null, x);
      if(s__8156) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8156)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8156), concat.call(null, cljs.core.chunk_rest.call(null, s__8156), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8156), concat.call(null, cljs.core.rest.call(null, s__8156), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8160__delegate = function(x, y, zs) {
      var cat__8159 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8158 = cljs.core.seq.call(null, xys);
          if(xys__8158) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8158)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8158), cat.call(null, cljs.core.chunk_rest.call(null, xys__8158), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8158), cat.call(null, cljs.core.rest.call(null, xys__8158), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8159.call(null, concat.call(null, x, y), zs)
    };
    var G__8160 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8160__delegate.call(this, x, y, zs)
    };
    G__8160.cljs$lang$maxFixedArity = 2;
    G__8160.cljs$lang$applyTo = function(arglist__8161) {
      var x = cljs.core.first(arglist__8161);
      var y = cljs.core.first(cljs.core.next(arglist__8161));
      var zs = cljs.core.rest(cljs.core.next(arglist__8161));
      return G__8160__delegate(x, y, zs)
    };
    G__8160.cljs$lang$arity$variadic = G__8160__delegate;
    return G__8160
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8162__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8162 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8162__delegate.call(this, a, b, c, d, more)
    };
    G__8162.cljs$lang$maxFixedArity = 4;
    G__8162.cljs$lang$applyTo = function(arglist__8163) {
      var a = cljs.core.first(arglist__8163);
      var b = cljs.core.first(cljs.core.next(arglist__8163));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8163)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8163))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8163))));
      return G__8162__delegate(a, b, c, d, more)
    };
    G__8162.cljs$lang$arity$variadic = G__8162__delegate;
    return G__8162
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8205 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8206 = cljs.core._first.call(null, args__8205);
    var args__8207 = cljs.core._rest.call(null, args__8205);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8206)
      }else {
        return f.call(null, a__8206)
      }
    }else {
      var b__8208 = cljs.core._first.call(null, args__8207);
      var args__8209 = cljs.core._rest.call(null, args__8207);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8206, b__8208)
        }else {
          return f.call(null, a__8206, b__8208)
        }
      }else {
        var c__8210 = cljs.core._first.call(null, args__8209);
        var args__8211 = cljs.core._rest.call(null, args__8209);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8206, b__8208, c__8210)
          }else {
            return f.call(null, a__8206, b__8208, c__8210)
          }
        }else {
          var d__8212 = cljs.core._first.call(null, args__8211);
          var args__8213 = cljs.core._rest.call(null, args__8211);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8206, b__8208, c__8210, d__8212)
            }else {
              return f.call(null, a__8206, b__8208, c__8210, d__8212)
            }
          }else {
            var e__8214 = cljs.core._first.call(null, args__8213);
            var args__8215 = cljs.core._rest.call(null, args__8213);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8206, b__8208, c__8210, d__8212, e__8214)
              }else {
                return f.call(null, a__8206, b__8208, c__8210, d__8212, e__8214)
              }
            }else {
              var f__8216 = cljs.core._first.call(null, args__8215);
              var args__8217 = cljs.core._rest.call(null, args__8215);
              if(argc === 6) {
                if(f__8216.cljs$lang$arity$6) {
                  return f__8216.cljs$lang$arity$6(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216)
                }else {
                  return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216)
                }
              }else {
                var g__8218 = cljs.core._first.call(null, args__8217);
                var args__8219 = cljs.core._rest.call(null, args__8217);
                if(argc === 7) {
                  if(f__8216.cljs$lang$arity$7) {
                    return f__8216.cljs$lang$arity$7(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218)
                  }else {
                    return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218)
                  }
                }else {
                  var h__8220 = cljs.core._first.call(null, args__8219);
                  var args__8221 = cljs.core._rest.call(null, args__8219);
                  if(argc === 8) {
                    if(f__8216.cljs$lang$arity$8) {
                      return f__8216.cljs$lang$arity$8(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220)
                    }else {
                      return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220)
                    }
                  }else {
                    var i__8222 = cljs.core._first.call(null, args__8221);
                    var args__8223 = cljs.core._rest.call(null, args__8221);
                    if(argc === 9) {
                      if(f__8216.cljs$lang$arity$9) {
                        return f__8216.cljs$lang$arity$9(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222)
                      }else {
                        return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222)
                      }
                    }else {
                      var j__8224 = cljs.core._first.call(null, args__8223);
                      var args__8225 = cljs.core._rest.call(null, args__8223);
                      if(argc === 10) {
                        if(f__8216.cljs$lang$arity$10) {
                          return f__8216.cljs$lang$arity$10(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224)
                        }else {
                          return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224)
                        }
                      }else {
                        var k__8226 = cljs.core._first.call(null, args__8225);
                        var args__8227 = cljs.core._rest.call(null, args__8225);
                        if(argc === 11) {
                          if(f__8216.cljs$lang$arity$11) {
                            return f__8216.cljs$lang$arity$11(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226)
                          }else {
                            return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226)
                          }
                        }else {
                          var l__8228 = cljs.core._first.call(null, args__8227);
                          var args__8229 = cljs.core._rest.call(null, args__8227);
                          if(argc === 12) {
                            if(f__8216.cljs$lang$arity$12) {
                              return f__8216.cljs$lang$arity$12(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228)
                            }else {
                              return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228)
                            }
                          }else {
                            var m__8230 = cljs.core._first.call(null, args__8229);
                            var args__8231 = cljs.core._rest.call(null, args__8229);
                            if(argc === 13) {
                              if(f__8216.cljs$lang$arity$13) {
                                return f__8216.cljs$lang$arity$13(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230)
                              }else {
                                return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230)
                              }
                            }else {
                              var n__8232 = cljs.core._first.call(null, args__8231);
                              var args__8233 = cljs.core._rest.call(null, args__8231);
                              if(argc === 14) {
                                if(f__8216.cljs$lang$arity$14) {
                                  return f__8216.cljs$lang$arity$14(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232)
                                }else {
                                  return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232)
                                }
                              }else {
                                var o__8234 = cljs.core._first.call(null, args__8233);
                                var args__8235 = cljs.core._rest.call(null, args__8233);
                                if(argc === 15) {
                                  if(f__8216.cljs$lang$arity$15) {
                                    return f__8216.cljs$lang$arity$15(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234)
                                  }else {
                                    return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234)
                                  }
                                }else {
                                  var p__8236 = cljs.core._first.call(null, args__8235);
                                  var args__8237 = cljs.core._rest.call(null, args__8235);
                                  if(argc === 16) {
                                    if(f__8216.cljs$lang$arity$16) {
                                      return f__8216.cljs$lang$arity$16(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234, p__8236)
                                    }else {
                                      return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234, p__8236)
                                    }
                                  }else {
                                    var q__8238 = cljs.core._first.call(null, args__8237);
                                    var args__8239 = cljs.core._rest.call(null, args__8237);
                                    if(argc === 17) {
                                      if(f__8216.cljs$lang$arity$17) {
                                        return f__8216.cljs$lang$arity$17(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234, p__8236, q__8238)
                                      }else {
                                        return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234, p__8236, q__8238)
                                      }
                                    }else {
                                      var r__8240 = cljs.core._first.call(null, args__8239);
                                      var args__8241 = cljs.core._rest.call(null, args__8239);
                                      if(argc === 18) {
                                        if(f__8216.cljs$lang$arity$18) {
                                          return f__8216.cljs$lang$arity$18(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234, p__8236, q__8238, r__8240)
                                        }else {
                                          return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234, p__8236, q__8238, r__8240)
                                        }
                                      }else {
                                        var s__8242 = cljs.core._first.call(null, args__8241);
                                        var args__8243 = cljs.core._rest.call(null, args__8241);
                                        if(argc === 19) {
                                          if(f__8216.cljs$lang$arity$19) {
                                            return f__8216.cljs$lang$arity$19(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234, p__8236, q__8238, r__8240, s__8242)
                                          }else {
                                            return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234, p__8236, q__8238, r__8240, s__8242)
                                          }
                                        }else {
                                          var t__8244 = cljs.core._first.call(null, args__8243);
                                          var args__8245 = cljs.core._rest.call(null, args__8243);
                                          if(argc === 20) {
                                            if(f__8216.cljs$lang$arity$20) {
                                              return f__8216.cljs$lang$arity$20(a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234, p__8236, q__8238, r__8240, s__8242, t__8244)
                                            }else {
                                              return f__8216.call(null, a__8206, b__8208, c__8210, d__8212, e__8214, f__8216, g__8218, h__8220, i__8222, j__8224, k__8226, l__8228, m__8230, n__8232, o__8234, p__8236, q__8238, r__8240, s__8242, t__8244)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__8260 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8261 = cljs.core.bounded_count.call(null, args, fixed_arity__8260 + 1);
      if(bc__8261 <= fixed_arity__8260) {
        return cljs.core.apply_to.call(null, f, bc__8261, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__8262 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__8263 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8264 = cljs.core.bounded_count.call(null, arglist__8262, fixed_arity__8263 + 1);
      if(bc__8264 <= fixed_arity__8263) {
        return cljs.core.apply_to.call(null, f, bc__8264, arglist__8262)
      }else {
        return f.cljs$lang$applyTo(arglist__8262)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8262))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__8265 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__8266 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8267 = cljs.core.bounded_count.call(null, arglist__8265, fixed_arity__8266 + 1);
      if(bc__8267 <= fixed_arity__8266) {
        return cljs.core.apply_to.call(null, f, bc__8267, arglist__8265)
      }else {
        return f.cljs$lang$applyTo(arglist__8265)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8265))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__8268 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__8269 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8270 = cljs.core.bounded_count.call(null, arglist__8268, fixed_arity__8269 + 1);
      if(bc__8270 <= fixed_arity__8269) {
        return cljs.core.apply_to.call(null, f, bc__8270, arglist__8268)
      }else {
        return f.cljs$lang$applyTo(arglist__8268)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8268))
    }
  };
  var apply__6 = function() {
    var G__8274__delegate = function(f, a, b, c, d, args) {
      var arglist__8271 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__8272 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__8273 = cljs.core.bounded_count.call(null, arglist__8271, fixed_arity__8272 + 1);
        if(bc__8273 <= fixed_arity__8272) {
          return cljs.core.apply_to.call(null, f, bc__8273, arglist__8271)
        }else {
          return f.cljs$lang$applyTo(arglist__8271)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__8271))
      }
    };
    var G__8274 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__8274__delegate.call(this, f, a, b, c, d, args)
    };
    G__8274.cljs$lang$maxFixedArity = 5;
    G__8274.cljs$lang$applyTo = function(arglist__8275) {
      var f = cljs.core.first(arglist__8275);
      var a = cljs.core.first(cljs.core.next(arglist__8275));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8275)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8275))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8275)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8275)))));
      return G__8274__delegate(f, a, b, c, d, args)
    };
    G__8274.cljs$lang$arity$variadic = G__8274__delegate;
    return G__8274
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__8276) {
    var obj = cljs.core.first(arglist__8276);
    var f = cljs.core.first(cljs.core.next(arglist__8276));
    var args = cljs.core.rest(cljs.core.next(arglist__8276));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__8277__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__8277 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8277__delegate.call(this, x, y, more)
    };
    G__8277.cljs$lang$maxFixedArity = 2;
    G__8277.cljs$lang$applyTo = function(arglist__8278) {
      var x = cljs.core.first(arglist__8278);
      var y = cljs.core.first(cljs.core.next(arglist__8278));
      var more = cljs.core.rest(cljs.core.next(arglist__8278));
      return G__8277__delegate(x, y, more)
    };
    G__8277.cljs$lang$arity$variadic = G__8277__delegate;
    return G__8277
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__8279 = pred;
        var G__8280 = cljs.core.next.call(null, coll);
        pred = G__8279;
        coll = G__8280;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____8282 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____8282)) {
        return or__3824__auto____8282
      }else {
        var G__8283 = pred;
        var G__8284 = cljs.core.next.call(null, coll);
        pred = G__8283;
        coll = G__8284;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__8285 = null;
    var G__8285__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__8285__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__8285__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__8285__3 = function() {
      var G__8286__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__8286 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__8286__delegate.call(this, x, y, zs)
      };
      G__8286.cljs$lang$maxFixedArity = 2;
      G__8286.cljs$lang$applyTo = function(arglist__8287) {
        var x = cljs.core.first(arglist__8287);
        var y = cljs.core.first(cljs.core.next(arglist__8287));
        var zs = cljs.core.rest(cljs.core.next(arglist__8287));
        return G__8286__delegate(x, y, zs)
      };
      G__8286.cljs$lang$arity$variadic = G__8286__delegate;
      return G__8286
    }();
    G__8285 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8285__0.call(this);
        case 1:
          return G__8285__1.call(this, x);
        case 2:
          return G__8285__2.call(this, x, y);
        default:
          return G__8285__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__8285.cljs$lang$maxFixedArity = 2;
    G__8285.cljs$lang$applyTo = G__8285__3.cljs$lang$applyTo;
    return G__8285
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__8288__delegate = function(args) {
      return x
    };
    var G__8288 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8288__delegate.call(this, args)
    };
    G__8288.cljs$lang$maxFixedArity = 0;
    G__8288.cljs$lang$applyTo = function(arglist__8289) {
      var args = cljs.core.seq(arglist__8289);
      return G__8288__delegate(args)
    };
    G__8288.cljs$lang$arity$variadic = G__8288__delegate;
    return G__8288
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__8296 = null;
      var G__8296__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__8296__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__8296__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__8296__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__8296__4 = function() {
        var G__8297__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__8297 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8297__delegate.call(this, x, y, z, args)
        };
        G__8297.cljs$lang$maxFixedArity = 3;
        G__8297.cljs$lang$applyTo = function(arglist__8298) {
          var x = cljs.core.first(arglist__8298);
          var y = cljs.core.first(cljs.core.next(arglist__8298));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8298)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8298)));
          return G__8297__delegate(x, y, z, args)
        };
        G__8297.cljs$lang$arity$variadic = G__8297__delegate;
        return G__8297
      }();
      G__8296 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8296__0.call(this);
          case 1:
            return G__8296__1.call(this, x);
          case 2:
            return G__8296__2.call(this, x, y);
          case 3:
            return G__8296__3.call(this, x, y, z);
          default:
            return G__8296__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8296.cljs$lang$maxFixedArity = 3;
      G__8296.cljs$lang$applyTo = G__8296__4.cljs$lang$applyTo;
      return G__8296
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__8299 = null;
      var G__8299__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__8299__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__8299__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__8299__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__8299__4 = function() {
        var G__8300__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__8300 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8300__delegate.call(this, x, y, z, args)
        };
        G__8300.cljs$lang$maxFixedArity = 3;
        G__8300.cljs$lang$applyTo = function(arglist__8301) {
          var x = cljs.core.first(arglist__8301);
          var y = cljs.core.first(cljs.core.next(arglist__8301));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8301)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8301)));
          return G__8300__delegate(x, y, z, args)
        };
        G__8300.cljs$lang$arity$variadic = G__8300__delegate;
        return G__8300
      }();
      G__8299 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8299__0.call(this);
          case 1:
            return G__8299__1.call(this, x);
          case 2:
            return G__8299__2.call(this, x, y);
          case 3:
            return G__8299__3.call(this, x, y, z);
          default:
            return G__8299__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8299.cljs$lang$maxFixedArity = 3;
      G__8299.cljs$lang$applyTo = G__8299__4.cljs$lang$applyTo;
      return G__8299
    }()
  };
  var comp__4 = function() {
    var G__8302__delegate = function(f1, f2, f3, fs) {
      var fs__8293 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__8303__delegate = function(args) {
          var ret__8294 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__8293), args);
          var fs__8295 = cljs.core.next.call(null, fs__8293);
          while(true) {
            if(fs__8295) {
              var G__8304 = cljs.core.first.call(null, fs__8295).call(null, ret__8294);
              var G__8305 = cljs.core.next.call(null, fs__8295);
              ret__8294 = G__8304;
              fs__8295 = G__8305;
              continue
            }else {
              return ret__8294
            }
            break
          }
        };
        var G__8303 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8303__delegate.call(this, args)
        };
        G__8303.cljs$lang$maxFixedArity = 0;
        G__8303.cljs$lang$applyTo = function(arglist__8306) {
          var args = cljs.core.seq(arglist__8306);
          return G__8303__delegate(args)
        };
        G__8303.cljs$lang$arity$variadic = G__8303__delegate;
        return G__8303
      }()
    };
    var G__8302 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8302__delegate.call(this, f1, f2, f3, fs)
    };
    G__8302.cljs$lang$maxFixedArity = 3;
    G__8302.cljs$lang$applyTo = function(arglist__8307) {
      var f1 = cljs.core.first(arglist__8307);
      var f2 = cljs.core.first(cljs.core.next(arglist__8307));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8307)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8307)));
      return G__8302__delegate(f1, f2, f3, fs)
    };
    G__8302.cljs$lang$arity$variadic = G__8302__delegate;
    return G__8302
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__8308__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__8308 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8308__delegate.call(this, args)
      };
      G__8308.cljs$lang$maxFixedArity = 0;
      G__8308.cljs$lang$applyTo = function(arglist__8309) {
        var args = cljs.core.seq(arglist__8309);
        return G__8308__delegate(args)
      };
      G__8308.cljs$lang$arity$variadic = G__8308__delegate;
      return G__8308
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__8310__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__8310 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8310__delegate.call(this, args)
      };
      G__8310.cljs$lang$maxFixedArity = 0;
      G__8310.cljs$lang$applyTo = function(arglist__8311) {
        var args = cljs.core.seq(arglist__8311);
        return G__8310__delegate(args)
      };
      G__8310.cljs$lang$arity$variadic = G__8310__delegate;
      return G__8310
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__8312__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__8312 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8312__delegate.call(this, args)
      };
      G__8312.cljs$lang$maxFixedArity = 0;
      G__8312.cljs$lang$applyTo = function(arglist__8313) {
        var args = cljs.core.seq(arglist__8313);
        return G__8312__delegate(args)
      };
      G__8312.cljs$lang$arity$variadic = G__8312__delegate;
      return G__8312
    }()
  };
  var partial__5 = function() {
    var G__8314__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__8315__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__8315 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8315__delegate.call(this, args)
        };
        G__8315.cljs$lang$maxFixedArity = 0;
        G__8315.cljs$lang$applyTo = function(arglist__8316) {
          var args = cljs.core.seq(arglist__8316);
          return G__8315__delegate(args)
        };
        G__8315.cljs$lang$arity$variadic = G__8315__delegate;
        return G__8315
      }()
    };
    var G__8314 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8314__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__8314.cljs$lang$maxFixedArity = 4;
    G__8314.cljs$lang$applyTo = function(arglist__8317) {
      var f = cljs.core.first(arglist__8317);
      var arg1 = cljs.core.first(cljs.core.next(arglist__8317));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8317)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8317))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8317))));
      return G__8314__delegate(f, arg1, arg2, arg3, more)
    };
    G__8314.cljs$lang$arity$variadic = G__8314__delegate;
    return G__8314
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__8318 = null;
      var G__8318__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__8318__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__8318__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__8318__4 = function() {
        var G__8319__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__8319 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8319__delegate.call(this, a, b, c, ds)
        };
        G__8319.cljs$lang$maxFixedArity = 3;
        G__8319.cljs$lang$applyTo = function(arglist__8320) {
          var a = cljs.core.first(arglist__8320);
          var b = cljs.core.first(cljs.core.next(arglist__8320));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8320)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8320)));
          return G__8319__delegate(a, b, c, ds)
        };
        G__8319.cljs$lang$arity$variadic = G__8319__delegate;
        return G__8319
      }();
      G__8318 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__8318__1.call(this, a);
          case 2:
            return G__8318__2.call(this, a, b);
          case 3:
            return G__8318__3.call(this, a, b, c);
          default:
            return G__8318__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8318.cljs$lang$maxFixedArity = 3;
      G__8318.cljs$lang$applyTo = G__8318__4.cljs$lang$applyTo;
      return G__8318
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__8321 = null;
      var G__8321__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8321__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__8321__4 = function() {
        var G__8322__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__8322 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8322__delegate.call(this, a, b, c, ds)
        };
        G__8322.cljs$lang$maxFixedArity = 3;
        G__8322.cljs$lang$applyTo = function(arglist__8323) {
          var a = cljs.core.first(arglist__8323);
          var b = cljs.core.first(cljs.core.next(arglist__8323));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8323)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8323)));
          return G__8322__delegate(a, b, c, ds)
        };
        G__8322.cljs$lang$arity$variadic = G__8322__delegate;
        return G__8322
      }();
      G__8321 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8321__2.call(this, a, b);
          case 3:
            return G__8321__3.call(this, a, b, c);
          default:
            return G__8321__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8321.cljs$lang$maxFixedArity = 3;
      G__8321.cljs$lang$applyTo = G__8321__4.cljs$lang$applyTo;
      return G__8321
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__8324 = null;
      var G__8324__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8324__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__8324__4 = function() {
        var G__8325__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__8325 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8325__delegate.call(this, a, b, c, ds)
        };
        G__8325.cljs$lang$maxFixedArity = 3;
        G__8325.cljs$lang$applyTo = function(arglist__8326) {
          var a = cljs.core.first(arglist__8326);
          var b = cljs.core.first(cljs.core.next(arglist__8326));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8326)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8326)));
          return G__8325__delegate(a, b, c, ds)
        };
        G__8325.cljs$lang$arity$variadic = G__8325__delegate;
        return G__8325
      }();
      G__8324 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8324__2.call(this, a, b);
          case 3:
            return G__8324__3.call(this, a, b, c);
          default:
            return G__8324__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8324.cljs$lang$maxFixedArity = 3;
      G__8324.cljs$lang$applyTo = G__8324__4.cljs$lang$applyTo;
      return G__8324
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__8342 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8350 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8350) {
        var s__8351 = temp__3974__auto____8350;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8351)) {
          var c__8352 = cljs.core.chunk_first.call(null, s__8351);
          var size__8353 = cljs.core.count.call(null, c__8352);
          var b__8354 = cljs.core.chunk_buffer.call(null, size__8353);
          var n__2527__auto____8355 = size__8353;
          var i__8356 = 0;
          while(true) {
            if(i__8356 < n__2527__auto____8355) {
              cljs.core.chunk_append.call(null, b__8354, f.call(null, idx + i__8356, cljs.core._nth.call(null, c__8352, i__8356)));
              var G__8357 = i__8356 + 1;
              i__8356 = G__8357;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8354), mapi.call(null, idx + size__8353, cljs.core.chunk_rest.call(null, s__8351)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__8351)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__8351)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__8342.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8367 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8367) {
      var s__8368 = temp__3974__auto____8367;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8368)) {
        var c__8369 = cljs.core.chunk_first.call(null, s__8368);
        var size__8370 = cljs.core.count.call(null, c__8369);
        var b__8371 = cljs.core.chunk_buffer.call(null, size__8370);
        var n__2527__auto____8372 = size__8370;
        var i__8373 = 0;
        while(true) {
          if(i__8373 < n__2527__auto____8372) {
            var x__8374 = f.call(null, cljs.core._nth.call(null, c__8369, i__8373));
            if(x__8374 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__8371, x__8374)
            }
            var G__8376 = i__8373 + 1;
            i__8373 = G__8376;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8371), keep.call(null, f, cljs.core.chunk_rest.call(null, s__8368)))
      }else {
        var x__8375 = f.call(null, cljs.core.first.call(null, s__8368));
        if(x__8375 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__8368))
        }else {
          return cljs.core.cons.call(null, x__8375, keep.call(null, f, cljs.core.rest.call(null, s__8368)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__8402 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8412 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8412) {
        var s__8413 = temp__3974__auto____8412;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8413)) {
          var c__8414 = cljs.core.chunk_first.call(null, s__8413);
          var size__8415 = cljs.core.count.call(null, c__8414);
          var b__8416 = cljs.core.chunk_buffer.call(null, size__8415);
          var n__2527__auto____8417 = size__8415;
          var i__8418 = 0;
          while(true) {
            if(i__8418 < n__2527__auto____8417) {
              var x__8419 = f.call(null, idx + i__8418, cljs.core._nth.call(null, c__8414, i__8418));
              if(x__8419 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__8416, x__8419)
              }
              var G__8421 = i__8418 + 1;
              i__8418 = G__8421;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8416), keepi.call(null, idx + size__8415, cljs.core.chunk_rest.call(null, s__8413)))
        }else {
          var x__8420 = f.call(null, idx, cljs.core.first.call(null, s__8413));
          if(x__8420 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8413))
          }else {
            return cljs.core.cons.call(null, x__8420, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8413)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__8402.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8507 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8507)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____8507
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8508 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8508)) {
            var and__3822__auto____8509 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8509)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____8509
            }
          }else {
            return and__3822__auto____8508
          }
        }())
      };
      var ep1__4 = function() {
        var G__8578__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8510 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8510)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____8510
            }
          }())
        };
        var G__8578 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8578__delegate.call(this, x, y, z, args)
        };
        G__8578.cljs$lang$maxFixedArity = 3;
        G__8578.cljs$lang$applyTo = function(arglist__8579) {
          var x = cljs.core.first(arglist__8579);
          var y = cljs.core.first(cljs.core.next(arglist__8579));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8579)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8579)));
          return G__8578__delegate(x, y, z, args)
        };
        G__8578.cljs$lang$arity$variadic = G__8578__delegate;
        return G__8578
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8522 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8522)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____8522
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8523 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8523)) {
            var and__3822__auto____8524 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8524)) {
              var and__3822__auto____8525 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8525)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____8525
              }
            }else {
              return and__3822__auto____8524
            }
          }else {
            return and__3822__auto____8523
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8526 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8526)) {
            var and__3822__auto____8527 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8527)) {
              var and__3822__auto____8528 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____8528)) {
                var and__3822__auto____8529 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____8529)) {
                  var and__3822__auto____8530 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8530)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____8530
                  }
                }else {
                  return and__3822__auto____8529
                }
              }else {
                return and__3822__auto____8528
              }
            }else {
              return and__3822__auto____8527
            }
          }else {
            return and__3822__auto____8526
          }
        }())
      };
      var ep2__4 = function() {
        var G__8580__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8531 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8531)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8377_SHARP_) {
                var and__3822__auto____8532 = p1.call(null, p1__8377_SHARP_);
                if(cljs.core.truth_(and__3822__auto____8532)) {
                  return p2.call(null, p1__8377_SHARP_)
                }else {
                  return and__3822__auto____8532
                }
              }, args)
            }else {
              return and__3822__auto____8531
            }
          }())
        };
        var G__8580 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8580__delegate.call(this, x, y, z, args)
        };
        G__8580.cljs$lang$maxFixedArity = 3;
        G__8580.cljs$lang$applyTo = function(arglist__8581) {
          var x = cljs.core.first(arglist__8581);
          var y = cljs.core.first(cljs.core.next(arglist__8581));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8581)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8581)));
          return G__8580__delegate(x, y, z, args)
        };
        G__8580.cljs$lang$arity$variadic = G__8580__delegate;
        return G__8580
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8551 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8551)) {
            var and__3822__auto____8552 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8552)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____8552
            }
          }else {
            return and__3822__auto____8551
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8553 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8553)) {
            var and__3822__auto____8554 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8554)) {
              var and__3822__auto____8555 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8555)) {
                var and__3822__auto____8556 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____8556)) {
                  var and__3822__auto____8557 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8557)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____8557
                  }
                }else {
                  return and__3822__auto____8556
                }
              }else {
                return and__3822__auto____8555
              }
            }else {
              return and__3822__auto____8554
            }
          }else {
            return and__3822__auto____8553
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8558 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8558)) {
            var and__3822__auto____8559 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8559)) {
              var and__3822__auto____8560 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8560)) {
                var and__3822__auto____8561 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____8561)) {
                  var and__3822__auto____8562 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8562)) {
                    var and__3822__auto____8563 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____8563)) {
                      var and__3822__auto____8564 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____8564)) {
                        var and__3822__auto____8565 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____8565)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____8565
                        }
                      }else {
                        return and__3822__auto____8564
                      }
                    }else {
                      return and__3822__auto____8563
                    }
                  }else {
                    return and__3822__auto____8562
                  }
                }else {
                  return and__3822__auto____8561
                }
              }else {
                return and__3822__auto____8560
              }
            }else {
              return and__3822__auto____8559
            }
          }else {
            return and__3822__auto____8558
          }
        }())
      };
      var ep3__4 = function() {
        var G__8582__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8566 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8566)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8378_SHARP_) {
                var and__3822__auto____8567 = p1.call(null, p1__8378_SHARP_);
                if(cljs.core.truth_(and__3822__auto____8567)) {
                  var and__3822__auto____8568 = p2.call(null, p1__8378_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____8568)) {
                    return p3.call(null, p1__8378_SHARP_)
                  }else {
                    return and__3822__auto____8568
                  }
                }else {
                  return and__3822__auto____8567
                }
              }, args)
            }else {
              return and__3822__auto____8566
            }
          }())
        };
        var G__8582 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8582__delegate.call(this, x, y, z, args)
        };
        G__8582.cljs$lang$maxFixedArity = 3;
        G__8582.cljs$lang$applyTo = function(arglist__8583) {
          var x = cljs.core.first(arglist__8583);
          var y = cljs.core.first(cljs.core.next(arglist__8583));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8583)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8583)));
          return G__8582__delegate(x, y, z, args)
        };
        G__8582.cljs$lang$arity$variadic = G__8582__delegate;
        return G__8582
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__8584__delegate = function(p1, p2, p3, ps) {
      var ps__8569 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__8379_SHARP_) {
            return p1__8379_SHARP_.call(null, x)
          }, ps__8569)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__8380_SHARP_) {
            var and__3822__auto____8574 = p1__8380_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8574)) {
              return p1__8380_SHARP_.call(null, y)
            }else {
              return and__3822__auto____8574
            }
          }, ps__8569)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__8381_SHARP_) {
            var and__3822__auto____8575 = p1__8381_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8575)) {
              var and__3822__auto____8576 = p1__8381_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____8576)) {
                return p1__8381_SHARP_.call(null, z)
              }else {
                return and__3822__auto____8576
              }
            }else {
              return and__3822__auto____8575
            }
          }, ps__8569)
        };
        var epn__4 = function() {
          var G__8585__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____8577 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____8577)) {
                return cljs.core.every_QMARK_.call(null, function(p1__8382_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__8382_SHARP_, args)
                }, ps__8569)
              }else {
                return and__3822__auto____8577
              }
            }())
          };
          var G__8585 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__8585__delegate.call(this, x, y, z, args)
          };
          G__8585.cljs$lang$maxFixedArity = 3;
          G__8585.cljs$lang$applyTo = function(arglist__8586) {
            var x = cljs.core.first(arglist__8586);
            var y = cljs.core.first(cljs.core.next(arglist__8586));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8586)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8586)));
            return G__8585__delegate(x, y, z, args)
          };
          G__8585.cljs$lang$arity$variadic = G__8585__delegate;
          return G__8585
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__8584 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8584__delegate.call(this, p1, p2, p3, ps)
    };
    G__8584.cljs$lang$maxFixedArity = 3;
    G__8584.cljs$lang$applyTo = function(arglist__8587) {
      var p1 = cljs.core.first(arglist__8587);
      var p2 = cljs.core.first(cljs.core.next(arglist__8587));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8587)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8587)));
      return G__8584__delegate(p1, p2, p3, ps)
    };
    G__8584.cljs$lang$arity$variadic = G__8584__delegate;
    return G__8584
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____8668 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8668)) {
          return or__3824__auto____8668
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____8669 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8669)) {
          return or__3824__auto____8669
        }else {
          var or__3824__auto____8670 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8670)) {
            return or__3824__auto____8670
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__8739__delegate = function(x, y, z, args) {
          var or__3824__auto____8671 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8671)) {
            return or__3824__auto____8671
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__8739 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8739__delegate.call(this, x, y, z, args)
        };
        G__8739.cljs$lang$maxFixedArity = 3;
        G__8739.cljs$lang$applyTo = function(arglist__8740) {
          var x = cljs.core.first(arglist__8740);
          var y = cljs.core.first(cljs.core.next(arglist__8740));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8740)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8740)));
          return G__8739__delegate(x, y, z, args)
        };
        G__8739.cljs$lang$arity$variadic = G__8739__delegate;
        return G__8739
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____8683 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8683)) {
          return or__3824__auto____8683
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____8684 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8684)) {
          return or__3824__auto____8684
        }else {
          var or__3824__auto____8685 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8685)) {
            return or__3824__auto____8685
          }else {
            var or__3824__auto____8686 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8686)) {
              return or__3824__auto____8686
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____8687 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8687)) {
          return or__3824__auto____8687
        }else {
          var or__3824__auto____8688 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8688)) {
            return or__3824__auto____8688
          }else {
            var or__3824__auto____8689 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____8689)) {
              return or__3824__auto____8689
            }else {
              var or__3824__auto____8690 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____8690)) {
                return or__3824__auto____8690
              }else {
                var or__3824__auto____8691 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8691)) {
                  return or__3824__auto____8691
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__8741__delegate = function(x, y, z, args) {
          var or__3824__auto____8692 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8692)) {
            return or__3824__auto____8692
          }else {
            return cljs.core.some.call(null, function(p1__8422_SHARP_) {
              var or__3824__auto____8693 = p1.call(null, p1__8422_SHARP_);
              if(cljs.core.truth_(or__3824__auto____8693)) {
                return or__3824__auto____8693
              }else {
                return p2.call(null, p1__8422_SHARP_)
              }
            }, args)
          }
        };
        var G__8741 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8741__delegate.call(this, x, y, z, args)
        };
        G__8741.cljs$lang$maxFixedArity = 3;
        G__8741.cljs$lang$applyTo = function(arglist__8742) {
          var x = cljs.core.first(arglist__8742);
          var y = cljs.core.first(cljs.core.next(arglist__8742));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8742)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8742)));
          return G__8741__delegate(x, y, z, args)
        };
        G__8741.cljs$lang$arity$variadic = G__8741__delegate;
        return G__8741
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____8712 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8712)) {
          return or__3824__auto____8712
        }else {
          var or__3824__auto____8713 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8713)) {
            return or__3824__auto____8713
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____8714 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8714)) {
          return or__3824__auto____8714
        }else {
          var or__3824__auto____8715 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8715)) {
            return or__3824__auto____8715
          }else {
            var or__3824__auto____8716 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8716)) {
              return or__3824__auto____8716
            }else {
              var or__3824__auto____8717 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8717)) {
                return or__3824__auto____8717
              }else {
                var or__3824__auto____8718 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8718)) {
                  return or__3824__auto____8718
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____8719 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8719)) {
          return or__3824__auto____8719
        }else {
          var or__3824__auto____8720 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8720)) {
            return or__3824__auto____8720
          }else {
            var or__3824__auto____8721 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8721)) {
              return or__3824__auto____8721
            }else {
              var or__3824__auto____8722 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8722)) {
                return or__3824__auto____8722
              }else {
                var or__3824__auto____8723 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8723)) {
                  return or__3824__auto____8723
                }else {
                  var or__3824__auto____8724 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____8724)) {
                    return or__3824__auto____8724
                  }else {
                    var or__3824__auto____8725 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____8725)) {
                      return or__3824__auto____8725
                    }else {
                      var or__3824__auto____8726 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____8726)) {
                        return or__3824__auto____8726
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__8743__delegate = function(x, y, z, args) {
          var or__3824__auto____8727 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8727)) {
            return or__3824__auto____8727
          }else {
            return cljs.core.some.call(null, function(p1__8423_SHARP_) {
              var or__3824__auto____8728 = p1.call(null, p1__8423_SHARP_);
              if(cljs.core.truth_(or__3824__auto____8728)) {
                return or__3824__auto____8728
              }else {
                var or__3824__auto____8729 = p2.call(null, p1__8423_SHARP_);
                if(cljs.core.truth_(or__3824__auto____8729)) {
                  return or__3824__auto____8729
                }else {
                  return p3.call(null, p1__8423_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__8743 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8743__delegate.call(this, x, y, z, args)
        };
        G__8743.cljs$lang$maxFixedArity = 3;
        G__8743.cljs$lang$applyTo = function(arglist__8744) {
          var x = cljs.core.first(arglist__8744);
          var y = cljs.core.first(cljs.core.next(arglist__8744));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8744)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8744)));
          return G__8743__delegate(x, y, z, args)
        };
        G__8743.cljs$lang$arity$variadic = G__8743__delegate;
        return G__8743
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__8745__delegate = function(p1, p2, p3, ps) {
      var ps__8730 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__8424_SHARP_) {
            return p1__8424_SHARP_.call(null, x)
          }, ps__8730)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__8425_SHARP_) {
            var or__3824__auto____8735 = p1__8425_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8735)) {
              return or__3824__auto____8735
            }else {
              return p1__8425_SHARP_.call(null, y)
            }
          }, ps__8730)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__8426_SHARP_) {
            var or__3824__auto____8736 = p1__8426_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8736)) {
              return or__3824__auto____8736
            }else {
              var or__3824__auto____8737 = p1__8426_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8737)) {
                return or__3824__auto____8737
              }else {
                return p1__8426_SHARP_.call(null, z)
              }
            }
          }, ps__8730)
        };
        var spn__4 = function() {
          var G__8746__delegate = function(x, y, z, args) {
            var or__3824__auto____8738 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____8738)) {
              return or__3824__auto____8738
            }else {
              return cljs.core.some.call(null, function(p1__8427_SHARP_) {
                return cljs.core.some.call(null, p1__8427_SHARP_, args)
              }, ps__8730)
            }
          };
          var G__8746 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__8746__delegate.call(this, x, y, z, args)
          };
          G__8746.cljs$lang$maxFixedArity = 3;
          G__8746.cljs$lang$applyTo = function(arglist__8747) {
            var x = cljs.core.first(arglist__8747);
            var y = cljs.core.first(cljs.core.next(arglist__8747));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8747)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8747)));
            return G__8746__delegate(x, y, z, args)
          };
          G__8746.cljs$lang$arity$variadic = G__8746__delegate;
          return G__8746
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__8745 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8745__delegate.call(this, p1, p2, p3, ps)
    };
    G__8745.cljs$lang$maxFixedArity = 3;
    G__8745.cljs$lang$applyTo = function(arglist__8748) {
      var p1 = cljs.core.first(arglist__8748);
      var p2 = cljs.core.first(cljs.core.next(arglist__8748));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8748)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8748)));
      return G__8745__delegate(p1, p2, p3, ps)
    };
    G__8745.cljs$lang$arity$variadic = G__8745__delegate;
    return G__8745
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8767 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8767) {
        var s__8768 = temp__3974__auto____8767;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8768)) {
          var c__8769 = cljs.core.chunk_first.call(null, s__8768);
          var size__8770 = cljs.core.count.call(null, c__8769);
          var b__8771 = cljs.core.chunk_buffer.call(null, size__8770);
          var n__2527__auto____8772 = size__8770;
          var i__8773 = 0;
          while(true) {
            if(i__8773 < n__2527__auto____8772) {
              cljs.core.chunk_append.call(null, b__8771, f.call(null, cljs.core._nth.call(null, c__8769, i__8773)));
              var G__8785 = i__8773 + 1;
              i__8773 = G__8785;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8771), map.call(null, f, cljs.core.chunk_rest.call(null, s__8768)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__8768)), map.call(null, f, cljs.core.rest.call(null, s__8768)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8774 = cljs.core.seq.call(null, c1);
      var s2__8775 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____8776 = s1__8774;
        if(and__3822__auto____8776) {
          return s2__8775
        }else {
          return and__3822__auto____8776
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__8774), cljs.core.first.call(null, s2__8775)), map.call(null, f, cljs.core.rest.call(null, s1__8774), cljs.core.rest.call(null, s2__8775)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8777 = cljs.core.seq.call(null, c1);
      var s2__8778 = cljs.core.seq.call(null, c2);
      var s3__8779 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____8780 = s1__8777;
        if(and__3822__auto____8780) {
          var and__3822__auto____8781 = s2__8778;
          if(and__3822__auto____8781) {
            return s3__8779
          }else {
            return and__3822__auto____8781
          }
        }else {
          return and__3822__auto____8780
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__8777), cljs.core.first.call(null, s2__8778), cljs.core.first.call(null, s3__8779)), map.call(null, f, cljs.core.rest.call(null, s1__8777), cljs.core.rest.call(null, s2__8778), cljs.core.rest.call(null, s3__8779)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__8786__delegate = function(f, c1, c2, c3, colls) {
      var step__8784 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__8783 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__8783)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__8783), step.call(null, map.call(null, cljs.core.rest, ss__8783)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__8588_SHARP_) {
        return cljs.core.apply.call(null, f, p1__8588_SHARP_)
      }, step__8784.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__8786 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8786__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__8786.cljs$lang$maxFixedArity = 4;
    G__8786.cljs$lang$applyTo = function(arglist__8787) {
      var f = cljs.core.first(arglist__8787);
      var c1 = cljs.core.first(cljs.core.next(arglist__8787));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8787)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8787))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8787))));
      return G__8786__delegate(f, c1, c2, c3, colls)
    };
    G__8786.cljs$lang$arity$variadic = G__8786__delegate;
    return G__8786
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____8790 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8790) {
        var s__8791 = temp__3974__auto____8790;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__8791), take.call(null, n - 1, cljs.core.rest.call(null, s__8791)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__8797 = function(n, coll) {
    while(true) {
      var s__8795 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____8796 = n > 0;
        if(and__3822__auto____8796) {
          return s__8795
        }else {
          return and__3822__auto____8796
        }
      }())) {
        var G__8798 = n - 1;
        var G__8799 = cljs.core.rest.call(null, s__8795);
        n = G__8798;
        coll = G__8799;
        continue
      }else {
        return s__8795
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__8797.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__8802 = cljs.core.seq.call(null, coll);
  var lead__8803 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__8803) {
      var G__8804 = cljs.core.next.call(null, s__8802);
      var G__8805 = cljs.core.next.call(null, lead__8803);
      s__8802 = G__8804;
      lead__8803 = G__8805;
      continue
    }else {
      return s__8802
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__8811 = function(pred, coll) {
    while(true) {
      var s__8809 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____8810 = s__8809;
        if(and__3822__auto____8810) {
          return pred.call(null, cljs.core.first.call(null, s__8809))
        }else {
          return and__3822__auto____8810
        }
      }())) {
        var G__8812 = pred;
        var G__8813 = cljs.core.rest.call(null, s__8809);
        pred = G__8812;
        coll = G__8813;
        continue
      }else {
        return s__8809
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__8811.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8816 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8816) {
      var s__8817 = temp__3974__auto____8816;
      return cljs.core.concat.call(null, s__8817, cycle.call(null, s__8817))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8822 = cljs.core.seq.call(null, c1);
      var s2__8823 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____8824 = s1__8822;
        if(and__3822__auto____8824) {
          return s2__8823
        }else {
          return and__3822__auto____8824
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__8822), cljs.core.cons.call(null, cljs.core.first.call(null, s2__8823), interleave.call(null, cljs.core.rest.call(null, s1__8822), cljs.core.rest.call(null, s2__8823))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__8826__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__8825 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__8825)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__8825), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__8825)))
        }else {
          return null
        }
      }, null)
    };
    var G__8826 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8826__delegate.call(this, c1, c2, colls)
    };
    G__8826.cljs$lang$maxFixedArity = 2;
    G__8826.cljs$lang$applyTo = function(arglist__8827) {
      var c1 = cljs.core.first(arglist__8827);
      var c2 = cljs.core.first(cljs.core.next(arglist__8827));
      var colls = cljs.core.rest(cljs.core.next(arglist__8827));
      return G__8826__delegate(c1, c2, colls)
    };
    G__8826.cljs$lang$arity$variadic = G__8826__delegate;
    return G__8826
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__8837 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____8835 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____8835) {
        var coll__8836 = temp__3971__auto____8835;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__8836), cat.call(null, cljs.core.rest.call(null, coll__8836), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__8837.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__8838__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__8838 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8838__delegate.call(this, f, coll, colls)
    };
    G__8838.cljs$lang$maxFixedArity = 2;
    G__8838.cljs$lang$applyTo = function(arglist__8839) {
      var f = cljs.core.first(arglist__8839);
      var coll = cljs.core.first(cljs.core.next(arglist__8839));
      var colls = cljs.core.rest(cljs.core.next(arglist__8839));
      return G__8838__delegate(f, coll, colls)
    };
    G__8838.cljs$lang$arity$variadic = G__8838__delegate;
    return G__8838
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8849 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8849) {
      var s__8850 = temp__3974__auto____8849;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8850)) {
        var c__8851 = cljs.core.chunk_first.call(null, s__8850);
        var size__8852 = cljs.core.count.call(null, c__8851);
        var b__8853 = cljs.core.chunk_buffer.call(null, size__8852);
        var n__2527__auto____8854 = size__8852;
        var i__8855 = 0;
        while(true) {
          if(i__8855 < n__2527__auto____8854) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__8851, i__8855)))) {
              cljs.core.chunk_append.call(null, b__8853, cljs.core._nth.call(null, c__8851, i__8855))
            }else {
            }
            var G__8858 = i__8855 + 1;
            i__8855 = G__8858;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8853), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__8850)))
      }else {
        var f__8856 = cljs.core.first.call(null, s__8850);
        var r__8857 = cljs.core.rest.call(null, s__8850);
        if(cljs.core.truth_(pred.call(null, f__8856))) {
          return cljs.core.cons.call(null, f__8856, filter.call(null, pred, r__8857))
        }else {
          return filter.call(null, pred, r__8857)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__8861 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__8861.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__8859_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__8859_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__8865__8866 = to;
    if(G__8865__8866) {
      if(function() {
        var or__3824__auto____8867 = G__8865__8866.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____8867) {
          return or__3824__auto____8867
        }else {
          return G__8865__8866.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__8865__8866.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__8865__8866)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__8865__8866)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__8868__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__8868 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8868__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__8868.cljs$lang$maxFixedArity = 4;
    G__8868.cljs$lang$applyTo = function(arglist__8869) {
      var f = cljs.core.first(arglist__8869);
      var c1 = cljs.core.first(cljs.core.next(arglist__8869));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8869)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8869))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8869))));
      return G__8868__delegate(f, c1, c2, c3, colls)
    };
    G__8868.cljs$lang$arity$variadic = G__8868__delegate;
    return G__8868
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8876 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8876) {
        var s__8877 = temp__3974__auto____8876;
        var p__8878 = cljs.core.take.call(null, n, s__8877);
        if(n === cljs.core.count.call(null, p__8878)) {
          return cljs.core.cons.call(null, p__8878, partition.call(null, n, step, cljs.core.drop.call(null, step, s__8877)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8879 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8879) {
        var s__8880 = temp__3974__auto____8879;
        var p__8881 = cljs.core.take.call(null, n, s__8880);
        if(n === cljs.core.count.call(null, p__8881)) {
          return cljs.core.cons.call(null, p__8881, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__8880)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__8881, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__8886 = cljs.core.lookup_sentinel;
    var m__8887 = m;
    var ks__8888 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__8888) {
        var m__8889 = cljs.core._lookup.call(null, m__8887, cljs.core.first.call(null, ks__8888), sentinel__8886);
        if(sentinel__8886 === m__8889) {
          return not_found
        }else {
          var G__8890 = sentinel__8886;
          var G__8891 = m__8889;
          var G__8892 = cljs.core.next.call(null, ks__8888);
          sentinel__8886 = G__8890;
          m__8887 = G__8891;
          ks__8888 = G__8892;
          continue
        }
      }else {
        return m__8887
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__8893, v) {
  var vec__8898__8899 = p__8893;
  var k__8900 = cljs.core.nth.call(null, vec__8898__8899, 0, null);
  var ks__8901 = cljs.core.nthnext.call(null, vec__8898__8899, 1);
  if(cljs.core.truth_(ks__8901)) {
    return cljs.core.assoc.call(null, m, k__8900, assoc_in.call(null, cljs.core._lookup.call(null, m, k__8900, null), ks__8901, v))
  }else {
    return cljs.core.assoc.call(null, m, k__8900, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__8902, f, args) {
    var vec__8907__8908 = p__8902;
    var k__8909 = cljs.core.nth.call(null, vec__8907__8908, 0, null);
    var ks__8910 = cljs.core.nthnext.call(null, vec__8907__8908, 1);
    if(cljs.core.truth_(ks__8910)) {
      return cljs.core.assoc.call(null, m, k__8909, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__8909, null), ks__8910, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__8909, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__8909, null), args))
    }
  };
  var update_in = function(m, p__8902, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__8902, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__8911) {
    var m = cljs.core.first(arglist__8911);
    var p__8902 = cljs.core.first(cljs.core.next(arglist__8911));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8911)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8911)));
    return update_in__delegate(m, p__8902, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8914 = this;
  var h__2192__auto____8915 = this__8914.__hash;
  if(!(h__2192__auto____8915 == null)) {
    return h__2192__auto____8915
  }else {
    var h__2192__auto____8916 = cljs.core.hash_coll.call(null, coll);
    this__8914.__hash = h__2192__auto____8916;
    return h__2192__auto____8916
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__8917 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__8918 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__8919 = this;
  var new_array__8920 = this__8919.array.slice();
  new_array__8920[k] = v;
  return new cljs.core.Vector(this__8919.meta, new_array__8920, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__8951 = null;
  var G__8951__2 = function(this_sym8921, k) {
    var this__8923 = this;
    var this_sym8921__8924 = this;
    var coll__8925 = this_sym8921__8924;
    return coll__8925.cljs$core$ILookup$_lookup$arity$2(coll__8925, k)
  };
  var G__8951__3 = function(this_sym8922, k, not_found) {
    var this__8923 = this;
    var this_sym8922__8926 = this;
    var coll__8927 = this_sym8922__8926;
    return coll__8927.cljs$core$ILookup$_lookup$arity$3(coll__8927, k, not_found)
  };
  G__8951 = function(this_sym8922, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8951__2.call(this, this_sym8922, k);
      case 3:
        return G__8951__3.call(this, this_sym8922, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8951
}();
cljs.core.Vector.prototype.apply = function(this_sym8912, args8913) {
  var this__8928 = this;
  return this_sym8912.call.apply(this_sym8912, [this_sym8912].concat(args8913.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8929 = this;
  var new_array__8930 = this__8929.array.slice();
  new_array__8930.push(o);
  return new cljs.core.Vector(this__8929.meta, new_array__8930, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__8931 = this;
  var this__8932 = this;
  return cljs.core.pr_str.call(null, this__8932)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__8933 = this;
  return cljs.core.ci_reduce.call(null, this__8933.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__8934 = this;
  return cljs.core.ci_reduce.call(null, this__8934.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8935 = this;
  if(this__8935.array.length > 0) {
    var vector_seq__8936 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__8935.array.length) {
          return cljs.core.cons.call(null, this__8935.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__8936.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8937 = this;
  return this__8937.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8938 = this;
  var count__8939 = this__8938.array.length;
  if(count__8939 > 0) {
    return this__8938.array[count__8939 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8940 = this;
  if(this__8940.array.length > 0) {
    var new_array__8941 = this__8940.array.slice();
    new_array__8941.pop();
    return new cljs.core.Vector(this__8940.meta, new_array__8941, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__8942 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8943 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8944 = this;
  return new cljs.core.Vector(meta, this__8944.array, this__8944.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8945 = this;
  return this__8945.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8946 = this;
  if(function() {
    var and__3822__auto____8947 = 0 <= n;
    if(and__3822__auto____8947) {
      return n < this__8946.array.length
    }else {
      return and__3822__auto____8947
    }
  }()) {
    return this__8946.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8948 = this;
  if(function() {
    var and__3822__auto____8949 = 0 <= n;
    if(and__3822__auto____8949) {
      return n < this__8948.array.length
    }else {
      return and__3822__auto____8949
    }
  }()) {
    return this__8948.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8950 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__8950.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__8953 = pv.cnt;
  if(cnt__8953 < 32) {
    return 0
  }else {
    return cnt__8953 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__8959 = level;
  var ret__8960 = node;
  while(true) {
    if(ll__8959 === 0) {
      return ret__8960
    }else {
      var embed__8961 = ret__8960;
      var r__8962 = cljs.core.pv_fresh_node.call(null, edit);
      var ___8963 = cljs.core.pv_aset.call(null, r__8962, 0, embed__8961);
      var G__8964 = ll__8959 - 5;
      var G__8965 = r__8962;
      ll__8959 = G__8964;
      ret__8960 = G__8965;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__8971 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__8972 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__8971, subidx__8972, tailnode);
    return ret__8971
  }else {
    var child__8973 = cljs.core.pv_aget.call(null, parent, subidx__8972);
    if(!(child__8973 == null)) {
      var node_to_insert__8974 = push_tail.call(null, pv, level - 5, child__8973, tailnode);
      cljs.core.pv_aset.call(null, ret__8971, subidx__8972, node_to_insert__8974);
      return ret__8971
    }else {
      var node_to_insert__8975 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__8971, subidx__8972, node_to_insert__8975);
      return ret__8971
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____8979 = 0 <= i;
    if(and__3822__auto____8979) {
      return i < pv.cnt
    }else {
      return and__3822__auto____8979
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__8980 = pv.root;
      var level__8981 = pv.shift;
      while(true) {
        if(level__8981 > 0) {
          var G__8982 = cljs.core.pv_aget.call(null, node__8980, i >>> level__8981 & 31);
          var G__8983 = level__8981 - 5;
          node__8980 = G__8982;
          level__8981 = G__8983;
          continue
        }else {
          return node__8980.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__8986 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__8986, i & 31, val);
    return ret__8986
  }else {
    var subidx__8987 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__8986, subidx__8987, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__8987), i, val));
    return ret__8986
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__8993 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__8994 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__8993));
    if(function() {
      var and__3822__auto____8995 = new_child__8994 == null;
      if(and__3822__auto____8995) {
        return subidx__8993 === 0
      }else {
        return and__3822__auto____8995
      }
    }()) {
      return null
    }else {
      var ret__8996 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__8996, subidx__8993, new_child__8994);
      return ret__8996
    }
  }else {
    if(subidx__8993 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__8997 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__8997, subidx__8993, null);
        return ret__8997
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9000 = this;
  return new cljs.core.TransientVector(this__9000.cnt, this__9000.shift, cljs.core.tv_editable_root.call(null, this__9000.root), cljs.core.tv_editable_tail.call(null, this__9000.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9001 = this;
  var h__2192__auto____9002 = this__9001.__hash;
  if(!(h__2192__auto____9002 == null)) {
    return h__2192__auto____9002
  }else {
    var h__2192__auto____9003 = cljs.core.hash_coll.call(null, coll);
    this__9001.__hash = h__2192__auto____9003;
    return h__2192__auto____9003
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9004 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9005 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9006 = this;
  if(function() {
    var and__3822__auto____9007 = 0 <= k;
    if(and__3822__auto____9007) {
      return k < this__9006.cnt
    }else {
      return and__3822__auto____9007
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9008 = this__9006.tail.slice();
      new_tail__9008[k & 31] = v;
      return new cljs.core.PersistentVector(this__9006.meta, this__9006.cnt, this__9006.shift, this__9006.root, new_tail__9008, null)
    }else {
      return new cljs.core.PersistentVector(this__9006.meta, this__9006.cnt, this__9006.shift, cljs.core.do_assoc.call(null, coll, this__9006.shift, this__9006.root, k, v), this__9006.tail, null)
    }
  }else {
    if(k === this__9006.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9006.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9056 = null;
  var G__9056__2 = function(this_sym9009, k) {
    var this__9011 = this;
    var this_sym9009__9012 = this;
    var coll__9013 = this_sym9009__9012;
    return coll__9013.cljs$core$ILookup$_lookup$arity$2(coll__9013, k)
  };
  var G__9056__3 = function(this_sym9010, k, not_found) {
    var this__9011 = this;
    var this_sym9010__9014 = this;
    var coll__9015 = this_sym9010__9014;
    return coll__9015.cljs$core$ILookup$_lookup$arity$3(coll__9015, k, not_found)
  };
  G__9056 = function(this_sym9010, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9056__2.call(this, this_sym9010, k);
      case 3:
        return G__9056__3.call(this, this_sym9010, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9056
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym8998, args8999) {
  var this__9016 = this;
  return this_sym8998.call.apply(this_sym8998, [this_sym8998].concat(args8999.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9017 = this;
  var step_init__9018 = [0, init];
  var i__9019 = 0;
  while(true) {
    if(i__9019 < this__9017.cnt) {
      var arr__9020 = cljs.core.array_for.call(null, v, i__9019);
      var len__9021 = arr__9020.length;
      var init__9025 = function() {
        var j__9022 = 0;
        var init__9023 = step_init__9018[1];
        while(true) {
          if(j__9022 < len__9021) {
            var init__9024 = f.call(null, init__9023, j__9022 + i__9019, arr__9020[j__9022]);
            if(cljs.core.reduced_QMARK_.call(null, init__9024)) {
              return init__9024
            }else {
              var G__9057 = j__9022 + 1;
              var G__9058 = init__9024;
              j__9022 = G__9057;
              init__9023 = G__9058;
              continue
            }
          }else {
            step_init__9018[0] = len__9021;
            step_init__9018[1] = init__9023;
            return init__9023
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9025)) {
        return cljs.core.deref.call(null, init__9025)
      }else {
        var G__9059 = i__9019 + step_init__9018[0];
        i__9019 = G__9059;
        continue
      }
    }else {
      return step_init__9018[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9026 = this;
  if(this__9026.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9027 = this__9026.tail.slice();
    new_tail__9027.push(o);
    return new cljs.core.PersistentVector(this__9026.meta, this__9026.cnt + 1, this__9026.shift, this__9026.root, new_tail__9027, null)
  }else {
    var root_overflow_QMARK___9028 = this__9026.cnt >>> 5 > 1 << this__9026.shift;
    var new_shift__9029 = root_overflow_QMARK___9028 ? this__9026.shift + 5 : this__9026.shift;
    var new_root__9031 = root_overflow_QMARK___9028 ? function() {
      var n_r__9030 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9030, 0, this__9026.root);
      cljs.core.pv_aset.call(null, n_r__9030, 1, cljs.core.new_path.call(null, null, this__9026.shift, new cljs.core.VectorNode(null, this__9026.tail)));
      return n_r__9030
    }() : cljs.core.push_tail.call(null, coll, this__9026.shift, this__9026.root, new cljs.core.VectorNode(null, this__9026.tail));
    return new cljs.core.PersistentVector(this__9026.meta, this__9026.cnt + 1, new_shift__9029, new_root__9031, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9032 = this;
  if(this__9032.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9032.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9033 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9034 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9035 = this;
  var this__9036 = this;
  return cljs.core.pr_str.call(null, this__9036)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9037 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9038 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9039 = this;
  if(this__9039.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9040 = this;
  return this__9040.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9041 = this;
  if(this__9041.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9041.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9042 = this;
  if(this__9042.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9042.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9042.meta)
    }else {
      if(1 < this__9042.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9042.meta, this__9042.cnt - 1, this__9042.shift, this__9042.root, this__9042.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9043 = cljs.core.array_for.call(null, coll, this__9042.cnt - 2);
          var nr__9044 = cljs.core.pop_tail.call(null, coll, this__9042.shift, this__9042.root);
          var new_root__9045 = nr__9044 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9044;
          var cnt_1__9046 = this__9042.cnt - 1;
          if(function() {
            var and__3822__auto____9047 = 5 < this__9042.shift;
            if(and__3822__auto____9047) {
              return cljs.core.pv_aget.call(null, new_root__9045, 1) == null
            }else {
              return and__3822__auto____9047
            }
          }()) {
            return new cljs.core.PersistentVector(this__9042.meta, cnt_1__9046, this__9042.shift - 5, cljs.core.pv_aget.call(null, new_root__9045, 0), new_tail__9043, null)
          }else {
            return new cljs.core.PersistentVector(this__9042.meta, cnt_1__9046, this__9042.shift, new_root__9045, new_tail__9043, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9048 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9049 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9050 = this;
  return new cljs.core.PersistentVector(meta, this__9050.cnt, this__9050.shift, this__9050.root, this__9050.tail, this__9050.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9051 = this;
  return this__9051.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9052 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9053 = this;
  if(function() {
    var and__3822__auto____9054 = 0 <= n;
    if(and__3822__auto____9054) {
      return n < this__9053.cnt
    }else {
      return and__3822__auto____9054
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9055 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9055.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9060 = xs.length;
  var xs__9061 = no_clone === true ? xs : xs.slice();
  if(l__9060 < 32) {
    return new cljs.core.PersistentVector(null, l__9060, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9061, null)
  }else {
    var node__9062 = xs__9061.slice(0, 32);
    var v__9063 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9062, null);
    var i__9064 = 32;
    var out__9065 = cljs.core._as_transient.call(null, v__9063);
    while(true) {
      if(i__9064 < l__9060) {
        var G__9066 = i__9064 + 1;
        var G__9067 = cljs.core.conj_BANG_.call(null, out__9065, xs__9061[i__9064]);
        i__9064 = G__9066;
        out__9065 = G__9067;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9065)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9068) {
    var args = cljs.core.seq(arglist__9068);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9069 = this;
  if(this__9069.off + 1 < this__9069.node.length) {
    var s__9070 = cljs.core.chunked_seq.call(null, this__9069.vec, this__9069.node, this__9069.i, this__9069.off + 1);
    if(s__9070 == null) {
      return null
    }else {
      return s__9070
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9071 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9072 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9073 = this;
  return this__9073.node[this__9073.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9074 = this;
  if(this__9074.off + 1 < this__9074.node.length) {
    var s__9075 = cljs.core.chunked_seq.call(null, this__9074.vec, this__9074.node, this__9074.i, this__9074.off + 1);
    if(s__9075 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9075
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9076 = this;
  var l__9077 = this__9076.node.length;
  var s__9078 = this__9076.i + l__9077 < cljs.core._count.call(null, this__9076.vec) ? cljs.core.chunked_seq.call(null, this__9076.vec, this__9076.i + l__9077, 0) : null;
  if(s__9078 == null) {
    return null
  }else {
    return s__9078
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9079 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9080 = this;
  return cljs.core.chunked_seq.call(null, this__9080.vec, this__9080.node, this__9080.i, this__9080.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9081 = this;
  return this__9081.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9082 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9082.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9083 = this;
  return cljs.core.array_chunk.call(null, this__9083.node, this__9083.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9084 = this;
  var l__9085 = this__9084.node.length;
  var s__9086 = this__9084.i + l__9085 < cljs.core._count.call(null, this__9084.vec) ? cljs.core.chunked_seq.call(null, this__9084.vec, this__9084.i + l__9085, 0) : null;
  if(s__9086 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9086
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9089 = this;
  var h__2192__auto____9090 = this__9089.__hash;
  if(!(h__2192__auto____9090 == null)) {
    return h__2192__auto____9090
  }else {
    var h__2192__auto____9091 = cljs.core.hash_coll.call(null, coll);
    this__9089.__hash = h__2192__auto____9091;
    return h__2192__auto____9091
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9092 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9093 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9094 = this;
  var v_pos__9095 = this__9094.start + key;
  return new cljs.core.Subvec(this__9094.meta, cljs.core._assoc.call(null, this__9094.v, v_pos__9095, val), this__9094.start, this__9094.end > v_pos__9095 + 1 ? this__9094.end : v_pos__9095 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9121 = null;
  var G__9121__2 = function(this_sym9096, k) {
    var this__9098 = this;
    var this_sym9096__9099 = this;
    var coll__9100 = this_sym9096__9099;
    return coll__9100.cljs$core$ILookup$_lookup$arity$2(coll__9100, k)
  };
  var G__9121__3 = function(this_sym9097, k, not_found) {
    var this__9098 = this;
    var this_sym9097__9101 = this;
    var coll__9102 = this_sym9097__9101;
    return coll__9102.cljs$core$ILookup$_lookup$arity$3(coll__9102, k, not_found)
  };
  G__9121 = function(this_sym9097, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9121__2.call(this, this_sym9097, k);
      case 3:
        return G__9121__3.call(this, this_sym9097, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9121
}();
cljs.core.Subvec.prototype.apply = function(this_sym9087, args9088) {
  var this__9103 = this;
  return this_sym9087.call.apply(this_sym9087, [this_sym9087].concat(args9088.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9104 = this;
  return new cljs.core.Subvec(this__9104.meta, cljs.core._assoc_n.call(null, this__9104.v, this__9104.end, o), this__9104.start, this__9104.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9105 = this;
  var this__9106 = this;
  return cljs.core.pr_str.call(null, this__9106)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9107 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9108 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9109 = this;
  var subvec_seq__9110 = function subvec_seq(i) {
    if(i === this__9109.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9109.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9110.call(null, this__9109.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9111 = this;
  return this__9111.end - this__9111.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9112 = this;
  return cljs.core._nth.call(null, this__9112.v, this__9112.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9113 = this;
  if(this__9113.start === this__9113.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9113.meta, this__9113.v, this__9113.start, this__9113.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9114 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9115 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9116 = this;
  return new cljs.core.Subvec(meta, this__9116.v, this__9116.start, this__9116.end, this__9116.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9117 = this;
  return this__9117.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9118 = this;
  return cljs.core._nth.call(null, this__9118.v, this__9118.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9119 = this;
  return cljs.core._nth.call(null, this__9119.v, this__9119.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9120 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9120.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9123 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9123, 0, tl.length);
  return ret__9123
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9127 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9128 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9127, subidx__9128, level === 5 ? tail_node : function() {
    var child__9129 = cljs.core.pv_aget.call(null, ret__9127, subidx__9128);
    if(!(child__9129 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9129, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9127
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9134 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9135 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9136 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9134, subidx__9135));
    if(function() {
      var and__3822__auto____9137 = new_child__9136 == null;
      if(and__3822__auto____9137) {
        return subidx__9135 === 0
      }else {
        return and__3822__auto____9137
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9134, subidx__9135, new_child__9136);
      return node__9134
    }
  }else {
    if(subidx__9135 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9134, subidx__9135, null);
        return node__9134
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____9142 = 0 <= i;
    if(and__3822__auto____9142) {
      return i < tv.cnt
    }else {
      return and__3822__auto____9142
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9143 = tv.root;
      var node__9144 = root__9143;
      var level__9145 = tv.shift;
      while(true) {
        if(level__9145 > 0) {
          var G__9146 = cljs.core.tv_ensure_editable.call(null, root__9143.edit, cljs.core.pv_aget.call(null, node__9144, i >>> level__9145 & 31));
          var G__9147 = level__9145 - 5;
          node__9144 = G__9146;
          level__9145 = G__9147;
          continue
        }else {
          return node__9144.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9187 = null;
  var G__9187__2 = function(this_sym9150, k) {
    var this__9152 = this;
    var this_sym9150__9153 = this;
    var coll__9154 = this_sym9150__9153;
    return coll__9154.cljs$core$ILookup$_lookup$arity$2(coll__9154, k)
  };
  var G__9187__3 = function(this_sym9151, k, not_found) {
    var this__9152 = this;
    var this_sym9151__9155 = this;
    var coll__9156 = this_sym9151__9155;
    return coll__9156.cljs$core$ILookup$_lookup$arity$3(coll__9156, k, not_found)
  };
  G__9187 = function(this_sym9151, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9187__2.call(this, this_sym9151, k);
      case 3:
        return G__9187__3.call(this, this_sym9151, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9187
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9148, args9149) {
  var this__9157 = this;
  return this_sym9148.call.apply(this_sym9148, [this_sym9148].concat(args9149.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9158 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9159 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9160 = this;
  if(this__9160.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9161 = this;
  if(function() {
    var and__3822__auto____9162 = 0 <= n;
    if(and__3822__auto____9162) {
      return n < this__9161.cnt
    }else {
      return and__3822__auto____9162
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9163 = this;
  if(this__9163.root.edit) {
    return this__9163.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9164 = this;
  if(this__9164.root.edit) {
    if(function() {
      var and__3822__auto____9165 = 0 <= n;
      if(and__3822__auto____9165) {
        return n < this__9164.cnt
      }else {
        return and__3822__auto____9165
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9164.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9170 = function go(level, node) {
          var node__9168 = cljs.core.tv_ensure_editable.call(null, this__9164.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9168, n & 31, val);
            return node__9168
          }else {
            var subidx__9169 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9168, subidx__9169, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9168, subidx__9169)));
            return node__9168
          }
        }.call(null, this__9164.shift, this__9164.root);
        this__9164.root = new_root__9170;
        return tcoll
      }
    }else {
      if(n === this__9164.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9164.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9171 = this;
  if(this__9171.root.edit) {
    if(this__9171.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9171.cnt) {
        this__9171.cnt = 0;
        return tcoll
      }else {
        if((this__9171.cnt - 1 & 31) > 0) {
          this__9171.cnt = this__9171.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9172 = cljs.core.editable_array_for.call(null, tcoll, this__9171.cnt - 2);
            var new_root__9174 = function() {
              var nr__9173 = cljs.core.tv_pop_tail.call(null, tcoll, this__9171.shift, this__9171.root);
              if(!(nr__9173 == null)) {
                return nr__9173
              }else {
                return new cljs.core.VectorNode(this__9171.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____9175 = 5 < this__9171.shift;
              if(and__3822__auto____9175) {
                return cljs.core.pv_aget.call(null, new_root__9174, 1) == null
              }else {
                return and__3822__auto____9175
              }
            }()) {
              var new_root__9176 = cljs.core.tv_ensure_editable.call(null, this__9171.root.edit, cljs.core.pv_aget.call(null, new_root__9174, 0));
              this__9171.root = new_root__9176;
              this__9171.shift = this__9171.shift - 5;
              this__9171.cnt = this__9171.cnt - 1;
              this__9171.tail = new_tail__9172;
              return tcoll
            }else {
              this__9171.root = new_root__9174;
              this__9171.cnt = this__9171.cnt - 1;
              this__9171.tail = new_tail__9172;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9177 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9178 = this;
  if(this__9178.root.edit) {
    if(this__9178.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9178.tail[this__9178.cnt & 31] = o;
      this__9178.cnt = this__9178.cnt + 1;
      return tcoll
    }else {
      var tail_node__9179 = new cljs.core.VectorNode(this__9178.root.edit, this__9178.tail);
      var new_tail__9180 = cljs.core.make_array.call(null, 32);
      new_tail__9180[0] = o;
      this__9178.tail = new_tail__9180;
      if(this__9178.cnt >>> 5 > 1 << this__9178.shift) {
        var new_root_array__9181 = cljs.core.make_array.call(null, 32);
        var new_shift__9182 = this__9178.shift + 5;
        new_root_array__9181[0] = this__9178.root;
        new_root_array__9181[1] = cljs.core.new_path.call(null, this__9178.root.edit, this__9178.shift, tail_node__9179);
        this__9178.root = new cljs.core.VectorNode(this__9178.root.edit, new_root_array__9181);
        this__9178.shift = new_shift__9182;
        this__9178.cnt = this__9178.cnt + 1;
        return tcoll
      }else {
        var new_root__9183 = cljs.core.tv_push_tail.call(null, tcoll, this__9178.shift, this__9178.root, tail_node__9179);
        this__9178.root = new_root__9183;
        this__9178.cnt = this__9178.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9184 = this;
  if(this__9184.root.edit) {
    this__9184.root.edit = null;
    var len__9185 = this__9184.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9186 = cljs.core.make_array.call(null, len__9185);
    cljs.core.array_copy.call(null, this__9184.tail, 0, trimmed_tail__9186, 0, len__9185);
    return new cljs.core.PersistentVector(null, this__9184.cnt, this__9184.shift, this__9184.root, trimmed_tail__9186, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9188 = this;
  var h__2192__auto____9189 = this__9188.__hash;
  if(!(h__2192__auto____9189 == null)) {
    return h__2192__auto____9189
  }else {
    var h__2192__auto____9190 = cljs.core.hash_coll.call(null, coll);
    this__9188.__hash = h__2192__auto____9190;
    return h__2192__auto____9190
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9191 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9192 = this;
  var this__9193 = this;
  return cljs.core.pr_str.call(null, this__9193)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9194 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9195 = this;
  return cljs.core._first.call(null, this__9195.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9196 = this;
  var temp__3971__auto____9197 = cljs.core.next.call(null, this__9196.front);
  if(temp__3971__auto____9197) {
    var f1__9198 = temp__3971__auto____9197;
    return new cljs.core.PersistentQueueSeq(this__9196.meta, f1__9198, this__9196.rear, null)
  }else {
    if(this__9196.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9196.meta, this__9196.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9199 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9200 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9200.front, this__9200.rear, this__9200.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9201 = this;
  return this__9201.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9202 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9202.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9203 = this;
  var h__2192__auto____9204 = this__9203.__hash;
  if(!(h__2192__auto____9204 == null)) {
    return h__2192__auto____9204
  }else {
    var h__2192__auto____9205 = cljs.core.hash_coll.call(null, coll);
    this__9203.__hash = h__2192__auto____9205;
    return h__2192__auto____9205
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9206 = this;
  if(cljs.core.truth_(this__9206.front)) {
    return new cljs.core.PersistentQueue(this__9206.meta, this__9206.count + 1, this__9206.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____9207 = this__9206.rear;
      if(cljs.core.truth_(or__3824__auto____9207)) {
        return or__3824__auto____9207
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9206.meta, this__9206.count + 1, cljs.core.conj.call(null, this__9206.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9208 = this;
  var this__9209 = this;
  return cljs.core.pr_str.call(null, this__9209)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9210 = this;
  var rear__9211 = cljs.core.seq.call(null, this__9210.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____9212 = this__9210.front;
    if(cljs.core.truth_(or__3824__auto____9212)) {
      return or__3824__auto____9212
    }else {
      return rear__9211
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9210.front, cljs.core.seq.call(null, rear__9211), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9213 = this;
  return this__9213.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9214 = this;
  return cljs.core._first.call(null, this__9214.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9215 = this;
  if(cljs.core.truth_(this__9215.front)) {
    var temp__3971__auto____9216 = cljs.core.next.call(null, this__9215.front);
    if(temp__3971__auto____9216) {
      var f1__9217 = temp__3971__auto____9216;
      return new cljs.core.PersistentQueue(this__9215.meta, this__9215.count - 1, f1__9217, this__9215.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9215.meta, this__9215.count - 1, cljs.core.seq.call(null, this__9215.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9218 = this;
  return cljs.core.first.call(null, this__9218.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9219 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9220 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9221 = this;
  return new cljs.core.PersistentQueue(meta, this__9221.count, this__9221.front, this__9221.rear, this__9221.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9222 = this;
  return this__9222.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9223 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9224 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__9227 = array.length;
  var i__9228 = 0;
  while(true) {
    if(i__9228 < len__9227) {
      if(k === array[i__9228]) {
        return i__9228
      }else {
        var G__9229 = i__9228 + incr;
        i__9228 = G__9229;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__9232 = cljs.core.hash.call(null, a);
  var b__9233 = cljs.core.hash.call(null, b);
  if(a__9232 < b__9233) {
    return-1
  }else {
    if(a__9232 > b__9233) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__9241 = m.keys;
  var len__9242 = ks__9241.length;
  var so__9243 = m.strobj;
  var out__9244 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__9245 = 0;
  var out__9246 = cljs.core.transient$.call(null, out__9244);
  while(true) {
    if(i__9245 < len__9242) {
      var k__9247 = ks__9241[i__9245];
      var G__9248 = i__9245 + 1;
      var G__9249 = cljs.core.assoc_BANG_.call(null, out__9246, k__9247, so__9243[k__9247]);
      i__9245 = G__9248;
      out__9246 = G__9249;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__9246, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__9255 = {};
  var l__9256 = ks.length;
  var i__9257 = 0;
  while(true) {
    if(i__9257 < l__9256) {
      var k__9258 = ks[i__9257];
      new_obj__9255[k__9258] = obj[k__9258];
      var G__9259 = i__9257 + 1;
      i__9257 = G__9259;
      continue
    }else {
    }
    break
  }
  return new_obj__9255
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9262 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9263 = this;
  var h__2192__auto____9264 = this__9263.__hash;
  if(!(h__2192__auto____9264 == null)) {
    return h__2192__auto____9264
  }else {
    var h__2192__auto____9265 = cljs.core.hash_imap.call(null, coll);
    this__9263.__hash = h__2192__auto____9265;
    return h__2192__auto____9265
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9266 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9267 = this;
  if(function() {
    var and__3822__auto____9268 = goog.isString(k);
    if(and__3822__auto____9268) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9267.keys) == null)
    }else {
      return and__3822__auto____9268
    }
  }()) {
    return this__9267.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9269 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____9270 = this__9269.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____9270) {
        return or__3824__auto____9270
      }else {
        return this__9269.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__9269.keys) == null)) {
        var new_strobj__9271 = cljs.core.obj_clone.call(null, this__9269.strobj, this__9269.keys);
        new_strobj__9271[k] = v;
        return new cljs.core.ObjMap(this__9269.meta, this__9269.keys, new_strobj__9271, this__9269.update_count + 1, null)
      }else {
        var new_strobj__9272 = cljs.core.obj_clone.call(null, this__9269.strobj, this__9269.keys);
        var new_keys__9273 = this__9269.keys.slice();
        new_strobj__9272[k] = v;
        new_keys__9273.push(k);
        return new cljs.core.ObjMap(this__9269.meta, new_keys__9273, new_strobj__9272, this__9269.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9274 = this;
  if(function() {
    var and__3822__auto____9275 = goog.isString(k);
    if(and__3822__auto____9275) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9274.keys) == null)
    }else {
      return and__3822__auto____9275
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9297 = null;
  var G__9297__2 = function(this_sym9276, k) {
    var this__9278 = this;
    var this_sym9276__9279 = this;
    var coll__9280 = this_sym9276__9279;
    return coll__9280.cljs$core$ILookup$_lookup$arity$2(coll__9280, k)
  };
  var G__9297__3 = function(this_sym9277, k, not_found) {
    var this__9278 = this;
    var this_sym9277__9281 = this;
    var coll__9282 = this_sym9277__9281;
    return coll__9282.cljs$core$ILookup$_lookup$arity$3(coll__9282, k, not_found)
  };
  G__9297 = function(this_sym9277, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9297__2.call(this, this_sym9277, k);
      case 3:
        return G__9297__3.call(this, this_sym9277, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9297
}();
cljs.core.ObjMap.prototype.apply = function(this_sym9260, args9261) {
  var this__9283 = this;
  return this_sym9260.call.apply(this_sym9260, [this_sym9260].concat(args9261.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9284 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__9285 = this;
  var this__9286 = this;
  return cljs.core.pr_str.call(null, this__9286)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9287 = this;
  if(this__9287.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9250_SHARP_) {
      return cljs.core.vector.call(null, p1__9250_SHARP_, this__9287.strobj[p1__9250_SHARP_])
    }, this__9287.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9288 = this;
  return this__9288.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9289 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9290 = this;
  return new cljs.core.ObjMap(meta, this__9290.keys, this__9290.strobj, this__9290.update_count, this__9290.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9291 = this;
  return this__9291.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9292 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__9292.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9293 = this;
  if(function() {
    var and__3822__auto____9294 = goog.isString(k);
    if(and__3822__auto____9294) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9293.keys) == null)
    }else {
      return and__3822__auto____9294
    }
  }()) {
    var new_keys__9295 = this__9293.keys.slice();
    var new_strobj__9296 = cljs.core.obj_clone.call(null, this__9293.strobj, this__9293.keys);
    new_keys__9295.splice(cljs.core.scan_array.call(null, 1, k, new_keys__9295), 1);
    cljs.core.js_delete.call(null, new_strobj__9296, k);
    return new cljs.core.ObjMap(this__9293.meta, new_keys__9295, new_strobj__9296, this__9293.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9301 = this;
  var h__2192__auto____9302 = this__9301.__hash;
  if(!(h__2192__auto____9302 == null)) {
    return h__2192__auto____9302
  }else {
    var h__2192__auto____9303 = cljs.core.hash_imap.call(null, coll);
    this__9301.__hash = h__2192__auto____9303;
    return h__2192__auto____9303
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9304 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9305 = this;
  var bucket__9306 = this__9305.hashobj[cljs.core.hash.call(null, k)];
  var i__9307 = cljs.core.truth_(bucket__9306) ? cljs.core.scan_array.call(null, 2, k, bucket__9306) : null;
  if(cljs.core.truth_(i__9307)) {
    return bucket__9306[i__9307 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9308 = this;
  var h__9309 = cljs.core.hash.call(null, k);
  var bucket__9310 = this__9308.hashobj[h__9309];
  if(cljs.core.truth_(bucket__9310)) {
    var new_bucket__9311 = bucket__9310.slice();
    var new_hashobj__9312 = goog.object.clone(this__9308.hashobj);
    new_hashobj__9312[h__9309] = new_bucket__9311;
    var temp__3971__auto____9313 = cljs.core.scan_array.call(null, 2, k, new_bucket__9311);
    if(cljs.core.truth_(temp__3971__auto____9313)) {
      var i__9314 = temp__3971__auto____9313;
      new_bucket__9311[i__9314 + 1] = v;
      return new cljs.core.HashMap(this__9308.meta, this__9308.count, new_hashobj__9312, null)
    }else {
      new_bucket__9311.push(k, v);
      return new cljs.core.HashMap(this__9308.meta, this__9308.count + 1, new_hashobj__9312, null)
    }
  }else {
    var new_hashobj__9315 = goog.object.clone(this__9308.hashobj);
    new_hashobj__9315[h__9309] = [k, v];
    return new cljs.core.HashMap(this__9308.meta, this__9308.count + 1, new_hashobj__9315, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9316 = this;
  var bucket__9317 = this__9316.hashobj[cljs.core.hash.call(null, k)];
  var i__9318 = cljs.core.truth_(bucket__9317) ? cljs.core.scan_array.call(null, 2, k, bucket__9317) : null;
  if(cljs.core.truth_(i__9318)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__9343 = null;
  var G__9343__2 = function(this_sym9319, k) {
    var this__9321 = this;
    var this_sym9319__9322 = this;
    var coll__9323 = this_sym9319__9322;
    return coll__9323.cljs$core$ILookup$_lookup$arity$2(coll__9323, k)
  };
  var G__9343__3 = function(this_sym9320, k, not_found) {
    var this__9321 = this;
    var this_sym9320__9324 = this;
    var coll__9325 = this_sym9320__9324;
    return coll__9325.cljs$core$ILookup$_lookup$arity$3(coll__9325, k, not_found)
  };
  G__9343 = function(this_sym9320, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9343__2.call(this, this_sym9320, k);
      case 3:
        return G__9343__3.call(this, this_sym9320, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9343
}();
cljs.core.HashMap.prototype.apply = function(this_sym9299, args9300) {
  var this__9326 = this;
  return this_sym9299.call.apply(this_sym9299, [this_sym9299].concat(args9300.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9327 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__9328 = this;
  var this__9329 = this;
  return cljs.core.pr_str.call(null, this__9329)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9330 = this;
  if(this__9330.count > 0) {
    var hashes__9331 = cljs.core.js_keys.call(null, this__9330.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__9298_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__9330.hashobj[p1__9298_SHARP_]))
    }, hashes__9331)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9332 = this;
  return this__9332.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9333 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9334 = this;
  return new cljs.core.HashMap(meta, this__9334.count, this__9334.hashobj, this__9334.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9335 = this;
  return this__9335.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9336 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__9336.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9337 = this;
  var h__9338 = cljs.core.hash.call(null, k);
  var bucket__9339 = this__9337.hashobj[h__9338];
  var i__9340 = cljs.core.truth_(bucket__9339) ? cljs.core.scan_array.call(null, 2, k, bucket__9339) : null;
  if(cljs.core.not.call(null, i__9340)) {
    return coll
  }else {
    var new_hashobj__9341 = goog.object.clone(this__9337.hashobj);
    if(3 > bucket__9339.length) {
      cljs.core.js_delete.call(null, new_hashobj__9341, h__9338)
    }else {
      var new_bucket__9342 = bucket__9339.slice();
      new_bucket__9342.splice(i__9340, 2);
      new_hashobj__9341[h__9338] = new_bucket__9342
    }
    return new cljs.core.HashMap(this__9337.meta, this__9337.count - 1, new_hashobj__9341, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__9344 = ks.length;
  var i__9345 = 0;
  var out__9346 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__9345 < len__9344) {
      var G__9347 = i__9345 + 1;
      var G__9348 = cljs.core.assoc.call(null, out__9346, ks[i__9345], vs[i__9345]);
      i__9345 = G__9347;
      out__9346 = G__9348;
      continue
    }else {
      return out__9346
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__9352 = m.arr;
  var len__9353 = arr__9352.length;
  var i__9354 = 0;
  while(true) {
    if(len__9353 <= i__9354) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__9352[i__9354], k)) {
        return i__9354
      }else {
        if("\ufdd0'else") {
          var G__9355 = i__9354 + 2;
          i__9354 = G__9355;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9358 = this;
  return new cljs.core.TransientArrayMap({}, this__9358.arr.length, this__9358.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9359 = this;
  var h__2192__auto____9360 = this__9359.__hash;
  if(!(h__2192__auto____9360 == null)) {
    return h__2192__auto____9360
  }else {
    var h__2192__auto____9361 = cljs.core.hash_imap.call(null, coll);
    this__9359.__hash = h__2192__auto____9361;
    return h__2192__auto____9361
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9362 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9363 = this;
  var idx__9364 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9364 === -1) {
    return not_found
  }else {
    return this__9363.arr[idx__9364 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9365 = this;
  var idx__9366 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9366 === -1) {
    if(this__9365.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__9365.meta, this__9365.cnt + 1, function() {
        var G__9367__9368 = this__9365.arr.slice();
        G__9367__9368.push(k);
        G__9367__9368.push(v);
        return G__9367__9368
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__9365.arr[idx__9366 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__9365.meta, this__9365.cnt, function() {
          var G__9369__9370 = this__9365.arr.slice();
          G__9369__9370[idx__9366 + 1] = v;
          return G__9369__9370
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9371 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9403 = null;
  var G__9403__2 = function(this_sym9372, k) {
    var this__9374 = this;
    var this_sym9372__9375 = this;
    var coll__9376 = this_sym9372__9375;
    return coll__9376.cljs$core$ILookup$_lookup$arity$2(coll__9376, k)
  };
  var G__9403__3 = function(this_sym9373, k, not_found) {
    var this__9374 = this;
    var this_sym9373__9377 = this;
    var coll__9378 = this_sym9373__9377;
    return coll__9378.cljs$core$ILookup$_lookup$arity$3(coll__9378, k, not_found)
  };
  G__9403 = function(this_sym9373, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9403__2.call(this, this_sym9373, k);
      case 3:
        return G__9403__3.call(this, this_sym9373, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9403
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym9356, args9357) {
  var this__9379 = this;
  return this_sym9356.call.apply(this_sym9356, [this_sym9356].concat(args9357.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9380 = this;
  var len__9381 = this__9380.arr.length;
  var i__9382 = 0;
  var init__9383 = init;
  while(true) {
    if(i__9382 < len__9381) {
      var init__9384 = f.call(null, init__9383, this__9380.arr[i__9382], this__9380.arr[i__9382 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__9384)) {
        return cljs.core.deref.call(null, init__9384)
      }else {
        var G__9404 = i__9382 + 2;
        var G__9405 = init__9384;
        i__9382 = G__9404;
        init__9383 = G__9405;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9385 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__9386 = this;
  var this__9387 = this;
  return cljs.core.pr_str.call(null, this__9387)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9388 = this;
  if(this__9388.cnt > 0) {
    var len__9389 = this__9388.arr.length;
    var array_map_seq__9390 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__9389) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__9388.arr[i], this__9388.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__9390.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9391 = this;
  return this__9391.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9392 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9393 = this;
  return new cljs.core.PersistentArrayMap(meta, this__9393.cnt, this__9393.arr, this__9393.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9394 = this;
  return this__9394.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9395 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9395.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9396 = this;
  var idx__9397 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9397 >= 0) {
    var len__9398 = this__9396.arr.length;
    var new_len__9399 = len__9398 - 2;
    if(new_len__9399 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__9400 = cljs.core.make_array.call(null, new_len__9399);
      var s__9401 = 0;
      var d__9402 = 0;
      while(true) {
        if(s__9401 >= len__9398) {
          return new cljs.core.PersistentArrayMap(this__9396.meta, this__9396.cnt - 1, new_arr__9400, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__9396.arr[s__9401])) {
            var G__9406 = s__9401 + 2;
            var G__9407 = d__9402;
            s__9401 = G__9406;
            d__9402 = G__9407;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__9400[d__9402] = this__9396.arr[s__9401];
              new_arr__9400[d__9402 + 1] = this__9396.arr[s__9401 + 1];
              var G__9408 = s__9401 + 2;
              var G__9409 = d__9402 + 2;
              s__9401 = G__9408;
              d__9402 = G__9409;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__9410 = cljs.core.count.call(null, ks);
  var i__9411 = 0;
  var out__9412 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__9411 < len__9410) {
      var G__9413 = i__9411 + 1;
      var G__9414 = cljs.core.assoc_BANG_.call(null, out__9412, ks[i__9411], vs[i__9411]);
      i__9411 = G__9413;
      out__9412 = G__9414;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9412)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9415 = this;
  if(cljs.core.truth_(this__9415.editable_QMARK_)) {
    var idx__9416 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9416 >= 0) {
      this__9415.arr[idx__9416] = this__9415.arr[this__9415.len - 2];
      this__9415.arr[idx__9416 + 1] = this__9415.arr[this__9415.len - 1];
      var G__9417__9418 = this__9415.arr;
      G__9417__9418.pop();
      G__9417__9418.pop();
      G__9417__9418;
      this__9415.len = this__9415.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9419 = this;
  if(cljs.core.truth_(this__9419.editable_QMARK_)) {
    var idx__9420 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9420 === -1) {
      if(this__9419.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__9419.len = this__9419.len + 2;
        this__9419.arr.push(key);
        this__9419.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__9419.len, this__9419.arr), key, val)
      }
    }else {
      if(val === this__9419.arr[idx__9420 + 1]) {
        return tcoll
      }else {
        this__9419.arr[idx__9420 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9421 = this;
  if(cljs.core.truth_(this__9421.editable_QMARK_)) {
    if(function() {
      var G__9422__9423 = o;
      if(G__9422__9423) {
        if(function() {
          var or__3824__auto____9424 = G__9422__9423.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____9424) {
            return or__3824__auto____9424
          }else {
            return G__9422__9423.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9422__9423.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9422__9423)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9422__9423)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9425 = cljs.core.seq.call(null, o);
      var tcoll__9426 = tcoll;
      while(true) {
        var temp__3971__auto____9427 = cljs.core.first.call(null, es__9425);
        if(cljs.core.truth_(temp__3971__auto____9427)) {
          var e__9428 = temp__3971__auto____9427;
          var G__9434 = cljs.core.next.call(null, es__9425);
          var G__9435 = tcoll__9426.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__9426, cljs.core.key.call(null, e__9428), cljs.core.val.call(null, e__9428));
          es__9425 = G__9434;
          tcoll__9426 = G__9435;
          continue
        }else {
          return tcoll__9426
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9429 = this;
  if(cljs.core.truth_(this__9429.editable_QMARK_)) {
    this__9429.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__9429.len, 2), this__9429.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9430 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9431 = this;
  if(cljs.core.truth_(this__9431.editable_QMARK_)) {
    var idx__9432 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__9432 === -1) {
      return not_found
    }else {
      return this__9431.arr[idx__9432 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__9433 = this;
  if(cljs.core.truth_(this__9433.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__9433.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__9438 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__9439 = 0;
  while(true) {
    if(i__9439 < len) {
      var G__9440 = cljs.core.assoc_BANG_.call(null, out__9438, arr[i__9439], arr[i__9439 + 1]);
      var G__9441 = i__9439 + 2;
      out__9438 = G__9440;
      i__9439 = G__9441;
      continue
    }else {
      return out__9438
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9446__9447 = arr.slice();
    G__9446__9447[i] = a;
    return G__9446__9447
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9448__9449 = arr.slice();
    G__9448__9449[i] = a;
    G__9448__9449[j] = b;
    return G__9448__9449
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__9451 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__9451, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__9451, 2 * i, new_arr__9451.length - 2 * i);
  return new_arr__9451
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__9454 = inode.ensure_editable(edit);
    editable__9454.arr[i] = a;
    return editable__9454
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__9455 = inode.ensure_editable(edit);
    editable__9455.arr[i] = a;
    editable__9455.arr[j] = b;
    return editable__9455
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__9462 = arr.length;
  var i__9463 = 0;
  var init__9464 = init;
  while(true) {
    if(i__9463 < len__9462) {
      var init__9467 = function() {
        var k__9465 = arr[i__9463];
        if(!(k__9465 == null)) {
          return f.call(null, init__9464, k__9465, arr[i__9463 + 1])
        }else {
          var node__9466 = arr[i__9463 + 1];
          if(!(node__9466 == null)) {
            return node__9466.kv_reduce(f, init__9464)
          }else {
            return init__9464
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9467)) {
        return cljs.core.deref.call(null, init__9467)
      }else {
        var G__9468 = i__9463 + 2;
        var G__9469 = init__9467;
        i__9463 = G__9468;
        init__9464 = G__9469;
        continue
      }
    }else {
      return init__9464
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__9470 = this;
  var inode__9471 = this;
  if(this__9470.bitmap === bit) {
    return null
  }else {
    var editable__9472 = inode__9471.ensure_editable(e);
    var earr__9473 = editable__9472.arr;
    var len__9474 = earr__9473.length;
    editable__9472.bitmap = bit ^ editable__9472.bitmap;
    cljs.core.array_copy.call(null, earr__9473, 2 * (i + 1), earr__9473, 2 * i, len__9474 - 2 * (i + 1));
    earr__9473[len__9474 - 2] = null;
    earr__9473[len__9474 - 1] = null;
    return editable__9472
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9475 = this;
  var inode__9476 = this;
  var bit__9477 = 1 << (hash >>> shift & 31);
  var idx__9478 = cljs.core.bitmap_indexed_node_index.call(null, this__9475.bitmap, bit__9477);
  if((this__9475.bitmap & bit__9477) === 0) {
    var n__9479 = cljs.core.bit_count.call(null, this__9475.bitmap);
    if(2 * n__9479 < this__9475.arr.length) {
      var editable__9480 = inode__9476.ensure_editable(edit);
      var earr__9481 = editable__9480.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__9481, 2 * idx__9478, earr__9481, 2 * (idx__9478 + 1), 2 * (n__9479 - idx__9478));
      earr__9481[2 * idx__9478] = key;
      earr__9481[2 * idx__9478 + 1] = val;
      editable__9480.bitmap = editable__9480.bitmap | bit__9477;
      return editable__9480
    }else {
      if(n__9479 >= 16) {
        var nodes__9482 = cljs.core.make_array.call(null, 32);
        var jdx__9483 = hash >>> shift & 31;
        nodes__9482[jdx__9483] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__9484 = 0;
        var j__9485 = 0;
        while(true) {
          if(i__9484 < 32) {
            if((this__9475.bitmap >>> i__9484 & 1) === 0) {
              var G__9538 = i__9484 + 1;
              var G__9539 = j__9485;
              i__9484 = G__9538;
              j__9485 = G__9539;
              continue
            }else {
              nodes__9482[i__9484] = !(this__9475.arr[j__9485] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__9475.arr[j__9485]), this__9475.arr[j__9485], this__9475.arr[j__9485 + 1], added_leaf_QMARK_) : this__9475.arr[j__9485 + 1];
              var G__9540 = i__9484 + 1;
              var G__9541 = j__9485 + 2;
              i__9484 = G__9540;
              j__9485 = G__9541;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__9479 + 1, nodes__9482)
      }else {
        if("\ufdd0'else") {
          var new_arr__9486 = cljs.core.make_array.call(null, 2 * (n__9479 + 4));
          cljs.core.array_copy.call(null, this__9475.arr, 0, new_arr__9486, 0, 2 * idx__9478);
          new_arr__9486[2 * idx__9478] = key;
          new_arr__9486[2 * idx__9478 + 1] = val;
          cljs.core.array_copy.call(null, this__9475.arr, 2 * idx__9478, new_arr__9486, 2 * (idx__9478 + 1), 2 * (n__9479 - idx__9478));
          added_leaf_QMARK_.val = true;
          var editable__9487 = inode__9476.ensure_editable(edit);
          editable__9487.arr = new_arr__9486;
          editable__9487.bitmap = editable__9487.bitmap | bit__9477;
          return editable__9487
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__9488 = this__9475.arr[2 * idx__9478];
    var val_or_node__9489 = this__9475.arr[2 * idx__9478 + 1];
    if(key_or_nil__9488 == null) {
      var n__9490 = val_or_node__9489.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9490 === val_or_node__9489) {
        return inode__9476
      }else {
        return cljs.core.edit_and_set.call(null, inode__9476, edit, 2 * idx__9478 + 1, n__9490)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9488)) {
        if(val === val_or_node__9489) {
          return inode__9476
        }else {
          return cljs.core.edit_and_set.call(null, inode__9476, edit, 2 * idx__9478 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__9476, edit, 2 * idx__9478, null, 2 * idx__9478 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__9488, val_or_node__9489, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__9491 = this;
  var inode__9492 = this;
  return cljs.core.create_inode_seq.call(null, this__9491.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9493 = this;
  var inode__9494 = this;
  var bit__9495 = 1 << (hash >>> shift & 31);
  if((this__9493.bitmap & bit__9495) === 0) {
    return inode__9494
  }else {
    var idx__9496 = cljs.core.bitmap_indexed_node_index.call(null, this__9493.bitmap, bit__9495);
    var key_or_nil__9497 = this__9493.arr[2 * idx__9496];
    var val_or_node__9498 = this__9493.arr[2 * idx__9496 + 1];
    if(key_or_nil__9497 == null) {
      var n__9499 = val_or_node__9498.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__9499 === val_or_node__9498) {
        return inode__9494
      }else {
        if(!(n__9499 == null)) {
          return cljs.core.edit_and_set.call(null, inode__9494, edit, 2 * idx__9496 + 1, n__9499)
        }else {
          if(this__9493.bitmap === bit__9495) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__9494.edit_and_remove_pair(edit, bit__9495, idx__9496)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9497)) {
        removed_leaf_QMARK_[0] = true;
        return inode__9494.edit_and_remove_pair(edit, bit__9495, idx__9496)
      }else {
        if("\ufdd0'else") {
          return inode__9494
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__9500 = this;
  var inode__9501 = this;
  if(e === this__9500.edit) {
    return inode__9501
  }else {
    var n__9502 = cljs.core.bit_count.call(null, this__9500.bitmap);
    var new_arr__9503 = cljs.core.make_array.call(null, n__9502 < 0 ? 4 : 2 * (n__9502 + 1));
    cljs.core.array_copy.call(null, this__9500.arr, 0, new_arr__9503, 0, 2 * n__9502);
    return new cljs.core.BitmapIndexedNode(e, this__9500.bitmap, new_arr__9503)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__9504 = this;
  var inode__9505 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9504.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9506 = this;
  var inode__9507 = this;
  var bit__9508 = 1 << (hash >>> shift & 31);
  if((this__9506.bitmap & bit__9508) === 0) {
    return not_found
  }else {
    var idx__9509 = cljs.core.bitmap_indexed_node_index.call(null, this__9506.bitmap, bit__9508);
    var key_or_nil__9510 = this__9506.arr[2 * idx__9509];
    var val_or_node__9511 = this__9506.arr[2 * idx__9509 + 1];
    if(key_or_nil__9510 == null) {
      return val_or_node__9511.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9510)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__9510, val_or_node__9511], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__9512 = this;
  var inode__9513 = this;
  var bit__9514 = 1 << (hash >>> shift & 31);
  if((this__9512.bitmap & bit__9514) === 0) {
    return inode__9513
  }else {
    var idx__9515 = cljs.core.bitmap_indexed_node_index.call(null, this__9512.bitmap, bit__9514);
    var key_or_nil__9516 = this__9512.arr[2 * idx__9515];
    var val_or_node__9517 = this__9512.arr[2 * idx__9515 + 1];
    if(key_or_nil__9516 == null) {
      var n__9518 = val_or_node__9517.inode_without(shift + 5, hash, key);
      if(n__9518 === val_or_node__9517) {
        return inode__9513
      }else {
        if(!(n__9518 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__9512.bitmap, cljs.core.clone_and_set.call(null, this__9512.arr, 2 * idx__9515 + 1, n__9518))
        }else {
          if(this__9512.bitmap === bit__9514) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__9512.bitmap ^ bit__9514, cljs.core.remove_pair.call(null, this__9512.arr, idx__9515))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9516)) {
        return new cljs.core.BitmapIndexedNode(null, this__9512.bitmap ^ bit__9514, cljs.core.remove_pair.call(null, this__9512.arr, idx__9515))
      }else {
        if("\ufdd0'else") {
          return inode__9513
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9519 = this;
  var inode__9520 = this;
  var bit__9521 = 1 << (hash >>> shift & 31);
  var idx__9522 = cljs.core.bitmap_indexed_node_index.call(null, this__9519.bitmap, bit__9521);
  if((this__9519.bitmap & bit__9521) === 0) {
    var n__9523 = cljs.core.bit_count.call(null, this__9519.bitmap);
    if(n__9523 >= 16) {
      var nodes__9524 = cljs.core.make_array.call(null, 32);
      var jdx__9525 = hash >>> shift & 31;
      nodes__9524[jdx__9525] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__9526 = 0;
      var j__9527 = 0;
      while(true) {
        if(i__9526 < 32) {
          if((this__9519.bitmap >>> i__9526 & 1) === 0) {
            var G__9542 = i__9526 + 1;
            var G__9543 = j__9527;
            i__9526 = G__9542;
            j__9527 = G__9543;
            continue
          }else {
            nodes__9524[i__9526] = !(this__9519.arr[j__9527] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__9519.arr[j__9527]), this__9519.arr[j__9527], this__9519.arr[j__9527 + 1], added_leaf_QMARK_) : this__9519.arr[j__9527 + 1];
            var G__9544 = i__9526 + 1;
            var G__9545 = j__9527 + 2;
            i__9526 = G__9544;
            j__9527 = G__9545;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__9523 + 1, nodes__9524)
    }else {
      var new_arr__9528 = cljs.core.make_array.call(null, 2 * (n__9523 + 1));
      cljs.core.array_copy.call(null, this__9519.arr, 0, new_arr__9528, 0, 2 * idx__9522);
      new_arr__9528[2 * idx__9522] = key;
      new_arr__9528[2 * idx__9522 + 1] = val;
      cljs.core.array_copy.call(null, this__9519.arr, 2 * idx__9522, new_arr__9528, 2 * (idx__9522 + 1), 2 * (n__9523 - idx__9522));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__9519.bitmap | bit__9521, new_arr__9528)
    }
  }else {
    var key_or_nil__9529 = this__9519.arr[2 * idx__9522];
    var val_or_node__9530 = this__9519.arr[2 * idx__9522 + 1];
    if(key_or_nil__9529 == null) {
      var n__9531 = val_or_node__9530.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9531 === val_or_node__9530) {
        return inode__9520
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__9519.bitmap, cljs.core.clone_and_set.call(null, this__9519.arr, 2 * idx__9522 + 1, n__9531))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9529)) {
        if(val === val_or_node__9530) {
          return inode__9520
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__9519.bitmap, cljs.core.clone_and_set.call(null, this__9519.arr, 2 * idx__9522 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__9519.bitmap, cljs.core.clone_and_set.call(null, this__9519.arr, 2 * idx__9522, null, 2 * idx__9522 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__9529, val_or_node__9530, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9532 = this;
  var inode__9533 = this;
  var bit__9534 = 1 << (hash >>> shift & 31);
  if((this__9532.bitmap & bit__9534) === 0) {
    return not_found
  }else {
    var idx__9535 = cljs.core.bitmap_indexed_node_index.call(null, this__9532.bitmap, bit__9534);
    var key_or_nil__9536 = this__9532.arr[2 * idx__9535];
    var val_or_node__9537 = this__9532.arr[2 * idx__9535 + 1];
    if(key_or_nil__9536 == null) {
      return val_or_node__9537.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9536)) {
        return val_or_node__9537
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__9553 = array_node.arr;
  var len__9554 = 2 * (array_node.cnt - 1);
  var new_arr__9555 = cljs.core.make_array.call(null, len__9554);
  var i__9556 = 0;
  var j__9557 = 1;
  var bitmap__9558 = 0;
  while(true) {
    if(i__9556 < len__9554) {
      if(function() {
        var and__3822__auto____9559 = !(i__9556 === idx);
        if(and__3822__auto____9559) {
          return!(arr__9553[i__9556] == null)
        }else {
          return and__3822__auto____9559
        }
      }()) {
        new_arr__9555[j__9557] = arr__9553[i__9556];
        var G__9560 = i__9556 + 1;
        var G__9561 = j__9557 + 2;
        var G__9562 = bitmap__9558 | 1 << i__9556;
        i__9556 = G__9560;
        j__9557 = G__9561;
        bitmap__9558 = G__9562;
        continue
      }else {
        var G__9563 = i__9556 + 1;
        var G__9564 = j__9557;
        var G__9565 = bitmap__9558;
        i__9556 = G__9563;
        j__9557 = G__9564;
        bitmap__9558 = G__9565;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__9558, new_arr__9555)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9566 = this;
  var inode__9567 = this;
  var idx__9568 = hash >>> shift & 31;
  var node__9569 = this__9566.arr[idx__9568];
  if(node__9569 == null) {
    var editable__9570 = cljs.core.edit_and_set.call(null, inode__9567, edit, idx__9568, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__9570.cnt = editable__9570.cnt + 1;
    return editable__9570
  }else {
    var n__9571 = node__9569.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__9571 === node__9569) {
      return inode__9567
    }else {
      return cljs.core.edit_and_set.call(null, inode__9567, edit, idx__9568, n__9571)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__9572 = this;
  var inode__9573 = this;
  return cljs.core.create_array_node_seq.call(null, this__9572.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9574 = this;
  var inode__9575 = this;
  var idx__9576 = hash >>> shift & 31;
  var node__9577 = this__9574.arr[idx__9576];
  if(node__9577 == null) {
    return inode__9575
  }else {
    var n__9578 = node__9577.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__9578 === node__9577) {
      return inode__9575
    }else {
      if(n__9578 == null) {
        if(this__9574.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__9575, edit, idx__9576)
        }else {
          var editable__9579 = cljs.core.edit_and_set.call(null, inode__9575, edit, idx__9576, n__9578);
          editable__9579.cnt = editable__9579.cnt - 1;
          return editable__9579
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__9575, edit, idx__9576, n__9578)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__9580 = this;
  var inode__9581 = this;
  if(e === this__9580.edit) {
    return inode__9581
  }else {
    return new cljs.core.ArrayNode(e, this__9580.cnt, this__9580.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__9582 = this;
  var inode__9583 = this;
  var len__9584 = this__9582.arr.length;
  var i__9585 = 0;
  var init__9586 = init;
  while(true) {
    if(i__9585 < len__9584) {
      var node__9587 = this__9582.arr[i__9585];
      if(!(node__9587 == null)) {
        var init__9588 = node__9587.kv_reduce(f, init__9586);
        if(cljs.core.reduced_QMARK_.call(null, init__9588)) {
          return cljs.core.deref.call(null, init__9588)
        }else {
          var G__9607 = i__9585 + 1;
          var G__9608 = init__9588;
          i__9585 = G__9607;
          init__9586 = G__9608;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__9586
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9589 = this;
  var inode__9590 = this;
  var idx__9591 = hash >>> shift & 31;
  var node__9592 = this__9589.arr[idx__9591];
  if(!(node__9592 == null)) {
    return node__9592.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__9593 = this;
  var inode__9594 = this;
  var idx__9595 = hash >>> shift & 31;
  var node__9596 = this__9593.arr[idx__9595];
  if(!(node__9596 == null)) {
    var n__9597 = node__9596.inode_without(shift + 5, hash, key);
    if(n__9597 === node__9596) {
      return inode__9594
    }else {
      if(n__9597 == null) {
        if(this__9593.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__9594, null, idx__9595)
        }else {
          return new cljs.core.ArrayNode(null, this__9593.cnt - 1, cljs.core.clone_and_set.call(null, this__9593.arr, idx__9595, n__9597))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__9593.cnt, cljs.core.clone_and_set.call(null, this__9593.arr, idx__9595, n__9597))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__9594
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9598 = this;
  var inode__9599 = this;
  var idx__9600 = hash >>> shift & 31;
  var node__9601 = this__9598.arr[idx__9600];
  if(node__9601 == null) {
    return new cljs.core.ArrayNode(null, this__9598.cnt + 1, cljs.core.clone_and_set.call(null, this__9598.arr, idx__9600, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__9602 = node__9601.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__9602 === node__9601) {
      return inode__9599
    }else {
      return new cljs.core.ArrayNode(null, this__9598.cnt, cljs.core.clone_and_set.call(null, this__9598.arr, idx__9600, n__9602))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9603 = this;
  var inode__9604 = this;
  var idx__9605 = hash >>> shift & 31;
  var node__9606 = this__9603.arr[idx__9605];
  if(!(node__9606 == null)) {
    return node__9606.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__9611 = 2 * cnt;
  var i__9612 = 0;
  while(true) {
    if(i__9612 < lim__9611) {
      if(cljs.core.key_test.call(null, key, arr[i__9612])) {
        return i__9612
      }else {
        var G__9613 = i__9612 + 2;
        i__9612 = G__9613;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9614 = this;
  var inode__9615 = this;
  if(hash === this__9614.collision_hash) {
    var idx__9616 = cljs.core.hash_collision_node_find_index.call(null, this__9614.arr, this__9614.cnt, key);
    if(idx__9616 === -1) {
      if(this__9614.arr.length > 2 * this__9614.cnt) {
        var editable__9617 = cljs.core.edit_and_set.call(null, inode__9615, edit, 2 * this__9614.cnt, key, 2 * this__9614.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__9617.cnt = editable__9617.cnt + 1;
        return editable__9617
      }else {
        var len__9618 = this__9614.arr.length;
        var new_arr__9619 = cljs.core.make_array.call(null, len__9618 + 2);
        cljs.core.array_copy.call(null, this__9614.arr, 0, new_arr__9619, 0, len__9618);
        new_arr__9619[len__9618] = key;
        new_arr__9619[len__9618 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__9615.ensure_editable_array(edit, this__9614.cnt + 1, new_arr__9619)
      }
    }else {
      if(this__9614.arr[idx__9616 + 1] === val) {
        return inode__9615
      }else {
        return cljs.core.edit_and_set.call(null, inode__9615, edit, idx__9616 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__9614.collision_hash >>> shift & 31), [null, inode__9615, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__9620 = this;
  var inode__9621 = this;
  return cljs.core.create_inode_seq.call(null, this__9620.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9622 = this;
  var inode__9623 = this;
  var idx__9624 = cljs.core.hash_collision_node_find_index.call(null, this__9622.arr, this__9622.cnt, key);
  if(idx__9624 === -1) {
    return inode__9623
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__9622.cnt === 1) {
      return null
    }else {
      var editable__9625 = inode__9623.ensure_editable(edit);
      var earr__9626 = editable__9625.arr;
      earr__9626[idx__9624] = earr__9626[2 * this__9622.cnt - 2];
      earr__9626[idx__9624 + 1] = earr__9626[2 * this__9622.cnt - 1];
      earr__9626[2 * this__9622.cnt - 1] = null;
      earr__9626[2 * this__9622.cnt - 2] = null;
      editable__9625.cnt = editable__9625.cnt - 1;
      return editable__9625
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__9627 = this;
  var inode__9628 = this;
  if(e === this__9627.edit) {
    return inode__9628
  }else {
    var new_arr__9629 = cljs.core.make_array.call(null, 2 * (this__9627.cnt + 1));
    cljs.core.array_copy.call(null, this__9627.arr, 0, new_arr__9629, 0, 2 * this__9627.cnt);
    return new cljs.core.HashCollisionNode(e, this__9627.collision_hash, this__9627.cnt, new_arr__9629)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__9630 = this;
  var inode__9631 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9630.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9632 = this;
  var inode__9633 = this;
  var idx__9634 = cljs.core.hash_collision_node_find_index.call(null, this__9632.arr, this__9632.cnt, key);
  if(idx__9634 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__9632.arr[idx__9634])) {
      return cljs.core.PersistentVector.fromArray([this__9632.arr[idx__9634], this__9632.arr[idx__9634 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__9635 = this;
  var inode__9636 = this;
  var idx__9637 = cljs.core.hash_collision_node_find_index.call(null, this__9635.arr, this__9635.cnt, key);
  if(idx__9637 === -1) {
    return inode__9636
  }else {
    if(this__9635.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__9635.collision_hash, this__9635.cnt - 1, cljs.core.remove_pair.call(null, this__9635.arr, cljs.core.quot.call(null, idx__9637, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9638 = this;
  var inode__9639 = this;
  if(hash === this__9638.collision_hash) {
    var idx__9640 = cljs.core.hash_collision_node_find_index.call(null, this__9638.arr, this__9638.cnt, key);
    if(idx__9640 === -1) {
      var len__9641 = this__9638.arr.length;
      var new_arr__9642 = cljs.core.make_array.call(null, len__9641 + 2);
      cljs.core.array_copy.call(null, this__9638.arr, 0, new_arr__9642, 0, len__9641);
      new_arr__9642[len__9641] = key;
      new_arr__9642[len__9641 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__9638.collision_hash, this__9638.cnt + 1, new_arr__9642)
    }else {
      if(cljs.core._EQ_.call(null, this__9638.arr[idx__9640], val)) {
        return inode__9639
      }else {
        return new cljs.core.HashCollisionNode(null, this__9638.collision_hash, this__9638.cnt, cljs.core.clone_and_set.call(null, this__9638.arr, idx__9640 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__9638.collision_hash >>> shift & 31), [null, inode__9639])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9643 = this;
  var inode__9644 = this;
  var idx__9645 = cljs.core.hash_collision_node_find_index.call(null, this__9643.arr, this__9643.cnt, key);
  if(idx__9645 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__9643.arr[idx__9645])) {
      return this__9643.arr[idx__9645 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__9646 = this;
  var inode__9647 = this;
  if(e === this__9646.edit) {
    this__9646.arr = array;
    this__9646.cnt = count;
    return inode__9647
  }else {
    return new cljs.core.HashCollisionNode(this__9646.edit, this__9646.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__9652 = cljs.core.hash.call(null, key1);
    if(key1hash__9652 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__9652, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___9653 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__9652, key1, val1, added_leaf_QMARK___9653).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___9653)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__9654 = cljs.core.hash.call(null, key1);
    if(key1hash__9654 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__9654, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___9655 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__9654, key1, val1, added_leaf_QMARK___9655).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___9655)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9656 = this;
  var h__2192__auto____9657 = this__9656.__hash;
  if(!(h__2192__auto____9657 == null)) {
    return h__2192__auto____9657
  }else {
    var h__2192__auto____9658 = cljs.core.hash_coll.call(null, coll);
    this__9656.__hash = h__2192__auto____9658;
    return h__2192__auto____9658
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9659 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__9660 = this;
  var this__9661 = this;
  return cljs.core.pr_str.call(null, this__9661)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9662 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9663 = this;
  if(this__9663.s == null) {
    return cljs.core.PersistentVector.fromArray([this__9663.nodes[this__9663.i], this__9663.nodes[this__9663.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__9663.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9664 = this;
  if(this__9664.s == null) {
    return cljs.core.create_inode_seq.call(null, this__9664.nodes, this__9664.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__9664.nodes, this__9664.i, cljs.core.next.call(null, this__9664.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9665 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9666 = this;
  return new cljs.core.NodeSeq(meta, this__9666.nodes, this__9666.i, this__9666.s, this__9666.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9667 = this;
  return this__9667.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9668 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9668.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__9675 = nodes.length;
      var j__9676 = i;
      while(true) {
        if(j__9676 < len__9675) {
          if(!(nodes[j__9676] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__9676, null, null)
          }else {
            var temp__3971__auto____9677 = nodes[j__9676 + 1];
            if(cljs.core.truth_(temp__3971__auto____9677)) {
              var node__9678 = temp__3971__auto____9677;
              var temp__3971__auto____9679 = node__9678.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____9679)) {
                var node_seq__9680 = temp__3971__auto____9679;
                return new cljs.core.NodeSeq(null, nodes, j__9676 + 2, node_seq__9680, null)
              }else {
                var G__9681 = j__9676 + 2;
                j__9676 = G__9681;
                continue
              }
            }else {
              var G__9682 = j__9676 + 2;
              j__9676 = G__9682;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9683 = this;
  var h__2192__auto____9684 = this__9683.__hash;
  if(!(h__2192__auto____9684 == null)) {
    return h__2192__auto____9684
  }else {
    var h__2192__auto____9685 = cljs.core.hash_coll.call(null, coll);
    this__9683.__hash = h__2192__auto____9685;
    return h__2192__auto____9685
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9686 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__9687 = this;
  var this__9688 = this;
  return cljs.core.pr_str.call(null, this__9688)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9689 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9690 = this;
  return cljs.core.first.call(null, this__9690.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9691 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__9691.nodes, this__9691.i, cljs.core.next.call(null, this__9691.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9692 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9693 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__9693.nodes, this__9693.i, this__9693.s, this__9693.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9694 = this;
  return this__9694.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9695 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9695.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__9702 = nodes.length;
      var j__9703 = i;
      while(true) {
        if(j__9703 < len__9702) {
          var temp__3971__auto____9704 = nodes[j__9703];
          if(cljs.core.truth_(temp__3971__auto____9704)) {
            var nj__9705 = temp__3971__auto____9704;
            var temp__3971__auto____9706 = nj__9705.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____9706)) {
              var ns__9707 = temp__3971__auto____9706;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__9703 + 1, ns__9707, null)
            }else {
              var G__9708 = j__9703 + 1;
              j__9703 = G__9708;
              continue
            }
          }else {
            var G__9709 = j__9703 + 1;
            j__9703 = G__9709;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9712 = this;
  return new cljs.core.TransientHashMap({}, this__9712.root, this__9712.cnt, this__9712.has_nil_QMARK_, this__9712.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9713 = this;
  var h__2192__auto____9714 = this__9713.__hash;
  if(!(h__2192__auto____9714 == null)) {
    return h__2192__auto____9714
  }else {
    var h__2192__auto____9715 = cljs.core.hash_imap.call(null, coll);
    this__9713.__hash = h__2192__auto____9715;
    return h__2192__auto____9715
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9716 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9717 = this;
  if(k == null) {
    if(this__9717.has_nil_QMARK_) {
      return this__9717.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__9717.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__9717.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9718 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____9719 = this__9718.has_nil_QMARK_;
      if(and__3822__auto____9719) {
        return v === this__9718.nil_val
      }else {
        return and__3822__auto____9719
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__9718.meta, this__9718.has_nil_QMARK_ ? this__9718.cnt : this__9718.cnt + 1, this__9718.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___9720 = new cljs.core.Box(false);
    var new_root__9721 = (this__9718.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__9718.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___9720);
    if(new_root__9721 === this__9718.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__9718.meta, added_leaf_QMARK___9720.val ? this__9718.cnt + 1 : this__9718.cnt, new_root__9721, this__9718.has_nil_QMARK_, this__9718.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9722 = this;
  if(k == null) {
    return this__9722.has_nil_QMARK_
  }else {
    if(this__9722.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__9722.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9745 = null;
  var G__9745__2 = function(this_sym9723, k) {
    var this__9725 = this;
    var this_sym9723__9726 = this;
    var coll__9727 = this_sym9723__9726;
    return coll__9727.cljs$core$ILookup$_lookup$arity$2(coll__9727, k)
  };
  var G__9745__3 = function(this_sym9724, k, not_found) {
    var this__9725 = this;
    var this_sym9724__9728 = this;
    var coll__9729 = this_sym9724__9728;
    return coll__9729.cljs$core$ILookup$_lookup$arity$3(coll__9729, k, not_found)
  };
  G__9745 = function(this_sym9724, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9745__2.call(this, this_sym9724, k);
      case 3:
        return G__9745__3.call(this, this_sym9724, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9745
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym9710, args9711) {
  var this__9730 = this;
  return this_sym9710.call.apply(this_sym9710, [this_sym9710].concat(args9711.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9731 = this;
  var init__9732 = this__9731.has_nil_QMARK_ ? f.call(null, init, null, this__9731.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__9732)) {
    return cljs.core.deref.call(null, init__9732)
  }else {
    if(!(this__9731.root == null)) {
      return this__9731.root.kv_reduce(f, init__9732)
    }else {
      if("\ufdd0'else") {
        return init__9732
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9733 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__9734 = this;
  var this__9735 = this;
  return cljs.core.pr_str.call(null, this__9735)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9736 = this;
  if(this__9736.cnt > 0) {
    var s__9737 = !(this__9736.root == null) ? this__9736.root.inode_seq() : null;
    if(this__9736.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__9736.nil_val], true), s__9737)
    }else {
      return s__9737
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9738 = this;
  return this__9738.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9739 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9740 = this;
  return new cljs.core.PersistentHashMap(meta, this__9740.cnt, this__9740.root, this__9740.has_nil_QMARK_, this__9740.nil_val, this__9740.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9741 = this;
  return this__9741.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9742 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__9742.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9743 = this;
  if(k == null) {
    if(this__9743.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__9743.meta, this__9743.cnt - 1, this__9743.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__9743.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__9744 = this__9743.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__9744 === this__9743.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__9743.meta, this__9743.cnt - 1, new_root__9744, this__9743.has_nil_QMARK_, this__9743.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__9746 = ks.length;
  var i__9747 = 0;
  var out__9748 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__9747 < len__9746) {
      var G__9749 = i__9747 + 1;
      var G__9750 = cljs.core.assoc_BANG_.call(null, out__9748, ks[i__9747], vs[i__9747]);
      i__9747 = G__9749;
      out__9748 = G__9750;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9748)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9751 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9752 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__9753 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9754 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9755 = this;
  if(k == null) {
    if(this__9755.has_nil_QMARK_) {
      return this__9755.nil_val
    }else {
      return null
    }
  }else {
    if(this__9755.root == null) {
      return null
    }else {
      return this__9755.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9756 = this;
  if(k == null) {
    if(this__9756.has_nil_QMARK_) {
      return this__9756.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__9756.root == null) {
      return not_found
    }else {
      return this__9756.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9757 = this;
  if(this__9757.edit) {
    return this__9757.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__9758 = this;
  var tcoll__9759 = this;
  if(this__9758.edit) {
    if(function() {
      var G__9760__9761 = o;
      if(G__9760__9761) {
        if(function() {
          var or__3824__auto____9762 = G__9760__9761.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____9762) {
            return or__3824__auto____9762
          }else {
            return G__9760__9761.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9760__9761.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9760__9761)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9760__9761)
      }
    }()) {
      return tcoll__9759.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9763 = cljs.core.seq.call(null, o);
      var tcoll__9764 = tcoll__9759;
      while(true) {
        var temp__3971__auto____9765 = cljs.core.first.call(null, es__9763);
        if(cljs.core.truth_(temp__3971__auto____9765)) {
          var e__9766 = temp__3971__auto____9765;
          var G__9777 = cljs.core.next.call(null, es__9763);
          var G__9778 = tcoll__9764.assoc_BANG_(cljs.core.key.call(null, e__9766), cljs.core.val.call(null, e__9766));
          es__9763 = G__9777;
          tcoll__9764 = G__9778;
          continue
        }else {
          return tcoll__9764
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__9767 = this;
  var tcoll__9768 = this;
  if(this__9767.edit) {
    if(k == null) {
      if(this__9767.nil_val === v) {
      }else {
        this__9767.nil_val = v
      }
      if(this__9767.has_nil_QMARK_) {
      }else {
        this__9767.count = this__9767.count + 1;
        this__9767.has_nil_QMARK_ = true
      }
      return tcoll__9768
    }else {
      var added_leaf_QMARK___9769 = new cljs.core.Box(false);
      var node__9770 = (this__9767.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__9767.root).inode_assoc_BANG_(this__9767.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___9769);
      if(node__9770 === this__9767.root) {
      }else {
        this__9767.root = node__9770
      }
      if(added_leaf_QMARK___9769.val) {
        this__9767.count = this__9767.count + 1
      }else {
      }
      return tcoll__9768
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__9771 = this;
  var tcoll__9772 = this;
  if(this__9771.edit) {
    if(k == null) {
      if(this__9771.has_nil_QMARK_) {
        this__9771.has_nil_QMARK_ = false;
        this__9771.nil_val = null;
        this__9771.count = this__9771.count - 1;
        return tcoll__9772
      }else {
        return tcoll__9772
      }
    }else {
      if(this__9771.root == null) {
        return tcoll__9772
      }else {
        var removed_leaf_QMARK___9773 = new cljs.core.Box(false);
        var node__9774 = this__9771.root.inode_without_BANG_(this__9771.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___9773);
        if(node__9774 === this__9771.root) {
        }else {
          this__9771.root = node__9774
        }
        if(cljs.core.truth_(removed_leaf_QMARK___9773[0])) {
          this__9771.count = this__9771.count - 1
        }else {
        }
        return tcoll__9772
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__9775 = this;
  var tcoll__9776 = this;
  if(this__9775.edit) {
    this__9775.edit = null;
    return new cljs.core.PersistentHashMap(null, this__9775.count, this__9775.root, this__9775.has_nil_QMARK_, this__9775.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__9781 = node;
  var stack__9782 = stack;
  while(true) {
    if(!(t__9781 == null)) {
      var G__9783 = ascending_QMARK_ ? t__9781.left : t__9781.right;
      var G__9784 = cljs.core.conj.call(null, stack__9782, t__9781);
      t__9781 = G__9783;
      stack__9782 = G__9784;
      continue
    }else {
      return stack__9782
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9785 = this;
  var h__2192__auto____9786 = this__9785.__hash;
  if(!(h__2192__auto____9786 == null)) {
    return h__2192__auto____9786
  }else {
    var h__2192__auto____9787 = cljs.core.hash_coll.call(null, coll);
    this__9785.__hash = h__2192__auto____9787;
    return h__2192__auto____9787
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9788 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__9789 = this;
  var this__9790 = this;
  return cljs.core.pr_str.call(null, this__9790)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9791 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9792 = this;
  if(this__9792.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__9792.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__9793 = this;
  return cljs.core.peek.call(null, this__9793.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__9794 = this;
  var t__9795 = cljs.core.first.call(null, this__9794.stack);
  var next_stack__9796 = cljs.core.tree_map_seq_push.call(null, this__9794.ascending_QMARK_ ? t__9795.right : t__9795.left, cljs.core.next.call(null, this__9794.stack), this__9794.ascending_QMARK_);
  if(!(next_stack__9796 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__9796, this__9794.ascending_QMARK_, this__9794.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9797 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9798 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__9798.stack, this__9798.ascending_QMARK_, this__9798.cnt, this__9798.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9799 = this;
  return this__9799.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____9801 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____9801) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____9801
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____9803 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____9803) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____9803
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__9807 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__9807)) {
    return cljs.core.deref.call(null, init__9807)
  }else {
    var init__9808 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__9807) : init__9807;
    if(cljs.core.reduced_QMARK_.call(null, init__9808)) {
      return cljs.core.deref.call(null, init__9808)
    }else {
      var init__9809 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__9808) : init__9808;
      if(cljs.core.reduced_QMARK_.call(null, init__9809)) {
        return cljs.core.deref.call(null, init__9809)
      }else {
        return init__9809
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9812 = this;
  var h__2192__auto____9813 = this__9812.__hash;
  if(!(h__2192__auto____9813 == null)) {
    return h__2192__auto____9813
  }else {
    var h__2192__auto____9814 = cljs.core.hash_coll.call(null, coll);
    this__9812.__hash = h__2192__auto____9814;
    return h__2192__auto____9814
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__9815 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__9816 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__9817 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__9817.key, this__9817.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9865 = null;
  var G__9865__2 = function(this_sym9818, k) {
    var this__9820 = this;
    var this_sym9818__9821 = this;
    var node__9822 = this_sym9818__9821;
    return node__9822.cljs$core$ILookup$_lookup$arity$2(node__9822, k)
  };
  var G__9865__3 = function(this_sym9819, k, not_found) {
    var this__9820 = this;
    var this_sym9819__9823 = this;
    var node__9824 = this_sym9819__9823;
    return node__9824.cljs$core$ILookup$_lookup$arity$3(node__9824, k, not_found)
  };
  G__9865 = function(this_sym9819, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9865__2.call(this, this_sym9819, k);
      case 3:
        return G__9865__3.call(this, this_sym9819, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9865
}();
cljs.core.BlackNode.prototype.apply = function(this_sym9810, args9811) {
  var this__9825 = this;
  return this_sym9810.call.apply(this_sym9810, [this_sym9810].concat(args9811.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__9826 = this;
  return cljs.core.PersistentVector.fromArray([this__9826.key, this__9826.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__9827 = this;
  return this__9827.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__9828 = this;
  return this__9828.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__9829 = this;
  var node__9830 = this;
  return ins.balance_right(node__9830)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__9831 = this;
  var node__9832 = this;
  return new cljs.core.RedNode(this__9831.key, this__9831.val, this__9831.left, this__9831.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__9833 = this;
  var node__9834 = this;
  return cljs.core.balance_right_del.call(null, this__9833.key, this__9833.val, this__9833.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__9835 = this;
  var node__9836 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__9837 = this;
  var node__9838 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__9838, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__9839 = this;
  var node__9840 = this;
  return cljs.core.balance_left_del.call(null, this__9839.key, this__9839.val, del, this__9839.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__9841 = this;
  var node__9842 = this;
  return ins.balance_left(node__9842)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__9843 = this;
  var node__9844 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__9844, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__9866 = null;
  var G__9866__0 = function() {
    var this__9845 = this;
    var this__9847 = this;
    return cljs.core.pr_str.call(null, this__9847)
  };
  G__9866 = function() {
    switch(arguments.length) {
      case 0:
        return G__9866__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9866
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__9848 = this;
  var node__9849 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__9849, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__9850 = this;
  var node__9851 = this;
  return node__9851
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__9852 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__9853 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__9854 = this;
  return cljs.core.list.call(null, this__9854.key, this__9854.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__9855 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__9856 = this;
  return this__9856.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__9857 = this;
  return cljs.core.PersistentVector.fromArray([this__9857.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__9858 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__9858.key, this__9858.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9859 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__9860 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__9860.key, this__9860.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__9861 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__9862 = this;
  if(n === 0) {
    return this__9862.key
  }else {
    if(n === 1) {
      return this__9862.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__9863 = this;
  if(n === 0) {
    return this__9863.key
  }else {
    if(n === 1) {
      return this__9863.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__9864 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9869 = this;
  var h__2192__auto____9870 = this__9869.__hash;
  if(!(h__2192__auto____9870 == null)) {
    return h__2192__auto____9870
  }else {
    var h__2192__auto____9871 = cljs.core.hash_coll.call(null, coll);
    this__9869.__hash = h__2192__auto____9871;
    return h__2192__auto____9871
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__9872 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__9873 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__9874 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__9874.key, this__9874.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__9922 = null;
  var G__9922__2 = function(this_sym9875, k) {
    var this__9877 = this;
    var this_sym9875__9878 = this;
    var node__9879 = this_sym9875__9878;
    return node__9879.cljs$core$ILookup$_lookup$arity$2(node__9879, k)
  };
  var G__9922__3 = function(this_sym9876, k, not_found) {
    var this__9877 = this;
    var this_sym9876__9880 = this;
    var node__9881 = this_sym9876__9880;
    return node__9881.cljs$core$ILookup$_lookup$arity$3(node__9881, k, not_found)
  };
  G__9922 = function(this_sym9876, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9922__2.call(this, this_sym9876, k);
      case 3:
        return G__9922__3.call(this, this_sym9876, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9922
}();
cljs.core.RedNode.prototype.apply = function(this_sym9867, args9868) {
  var this__9882 = this;
  return this_sym9867.call.apply(this_sym9867, [this_sym9867].concat(args9868.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__9883 = this;
  return cljs.core.PersistentVector.fromArray([this__9883.key, this__9883.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__9884 = this;
  return this__9884.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__9885 = this;
  return this__9885.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__9886 = this;
  var node__9887 = this;
  return new cljs.core.RedNode(this__9886.key, this__9886.val, this__9886.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__9888 = this;
  var node__9889 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__9890 = this;
  var node__9891 = this;
  return new cljs.core.RedNode(this__9890.key, this__9890.val, this__9890.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__9892 = this;
  var node__9893 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__9894 = this;
  var node__9895 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__9895, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__9896 = this;
  var node__9897 = this;
  return new cljs.core.RedNode(this__9896.key, this__9896.val, del, this__9896.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__9898 = this;
  var node__9899 = this;
  return new cljs.core.RedNode(this__9898.key, this__9898.val, ins, this__9898.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__9900 = this;
  var node__9901 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9900.left)) {
    return new cljs.core.RedNode(this__9900.key, this__9900.val, this__9900.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__9900.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9900.right)) {
      return new cljs.core.RedNode(this__9900.right.key, this__9900.right.val, new cljs.core.BlackNode(this__9900.key, this__9900.val, this__9900.left, this__9900.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__9900.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__9901, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__9923 = null;
  var G__9923__0 = function() {
    var this__9902 = this;
    var this__9904 = this;
    return cljs.core.pr_str.call(null, this__9904)
  };
  G__9923 = function() {
    switch(arguments.length) {
      case 0:
        return G__9923__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9923
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__9905 = this;
  var node__9906 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9905.right)) {
    return new cljs.core.RedNode(this__9905.key, this__9905.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__9905.left, null), this__9905.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9905.left)) {
      return new cljs.core.RedNode(this__9905.left.key, this__9905.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__9905.left.left, null), new cljs.core.BlackNode(this__9905.key, this__9905.val, this__9905.left.right, this__9905.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__9906, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__9907 = this;
  var node__9908 = this;
  return new cljs.core.BlackNode(this__9907.key, this__9907.val, this__9907.left, this__9907.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__9909 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__9910 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__9911 = this;
  return cljs.core.list.call(null, this__9911.key, this__9911.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__9912 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__9913 = this;
  return this__9913.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__9914 = this;
  return cljs.core.PersistentVector.fromArray([this__9914.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__9915 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__9915.key, this__9915.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9916 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__9917 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__9917.key, this__9917.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__9918 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__9919 = this;
  if(n === 0) {
    return this__9919.key
  }else {
    if(n === 1) {
      return this__9919.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__9920 = this;
  if(n === 0) {
    return this__9920.key
  }else {
    if(n === 1) {
      return this__9920.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__9921 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__9927 = comp.call(null, k, tree.key);
    if(c__9927 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__9927 < 0) {
        var ins__9928 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__9928 == null)) {
          return tree.add_left(ins__9928)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__9929 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__9929 == null)) {
            return tree.add_right(ins__9929)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__9932 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__9932)) {
            return new cljs.core.RedNode(app__9932.key, app__9932.val, new cljs.core.RedNode(left.key, left.val, left.left, app__9932.left, null), new cljs.core.RedNode(right.key, right.val, app__9932.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__9932, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__9933 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__9933)) {
              return new cljs.core.RedNode(app__9933.key, app__9933.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__9933.left, null), new cljs.core.BlackNode(right.key, right.val, app__9933.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__9933, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__9939 = comp.call(null, k, tree.key);
    if(c__9939 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__9939 < 0) {
        var del__9940 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____9941 = !(del__9940 == null);
          if(or__3824__auto____9941) {
            return or__3824__auto____9941
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__9940, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__9940, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__9942 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____9943 = !(del__9942 == null);
            if(or__3824__auto____9943) {
              return or__3824__auto____9943
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__9942)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__9942, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__9946 = tree.key;
  var c__9947 = comp.call(null, k, tk__9946);
  if(c__9947 === 0) {
    return tree.replace(tk__9946, v, tree.left, tree.right)
  }else {
    if(c__9947 < 0) {
      return tree.replace(tk__9946, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__9946, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9950 = this;
  var h__2192__auto____9951 = this__9950.__hash;
  if(!(h__2192__auto____9951 == null)) {
    return h__2192__auto____9951
  }else {
    var h__2192__auto____9952 = cljs.core.hash_imap.call(null, coll);
    this__9950.__hash = h__2192__auto____9952;
    return h__2192__auto____9952
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9953 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9954 = this;
  var n__9955 = coll.entry_at(k);
  if(!(n__9955 == null)) {
    return n__9955.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9956 = this;
  var found__9957 = [null];
  var t__9958 = cljs.core.tree_map_add.call(null, this__9956.comp, this__9956.tree, k, v, found__9957);
  if(t__9958 == null) {
    var found_node__9959 = cljs.core.nth.call(null, found__9957, 0);
    if(cljs.core._EQ_.call(null, v, found_node__9959.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__9956.comp, cljs.core.tree_map_replace.call(null, this__9956.comp, this__9956.tree, k, v), this__9956.cnt, this__9956.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__9956.comp, t__9958.blacken(), this__9956.cnt + 1, this__9956.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9960 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__9994 = null;
  var G__9994__2 = function(this_sym9961, k) {
    var this__9963 = this;
    var this_sym9961__9964 = this;
    var coll__9965 = this_sym9961__9964;
    return coll__9965.cljs$core$ILookup$_lookup$arity$2(coll__9965, k)
  };
  var G__9994__3 = function(this_sym9962, k, not_found) {
    var this__9963 = this;
    var this_sym9962__9966 = this;
    var coll__9967 = this_sym9962__9966;
    return coll__9967.cljs$core$ILookup$_lookup$arity$3(coll__9967, k, not_found)
  };
  G__9994 = function(this_sym9962, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9994__2.call(this, this_sym9962, k);
      case 3:
        return G__9994__3.call(this, this_sym9962, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9994
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym9948, args9949) {
  var this__9968 = this;
  return this_sym9948.call.apply(this_sym9948, [this_sym9948].concat(args9949.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9969 = this;
  if(!(this__9969.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__9969.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9970 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9971 = this;
  if(this__9971.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__9971.tree, false, this__9971.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__9972 = this;
  var this__9973 = this;
  return cljs.core.pr_str.call(null, this__9973)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__9974 = this;
  var coll__9975 = this;
  var t__9976 = this__9974.tree;
  while(true) {
    if(!(t__9976 == null)) {
      var c__9977 = this__9974.comp.call(null, k, t__9976.key);
      if(c__9977 === 0) {
        return t__9976
      }else {
        if(c__9977 < 0) {
          var G__9995 = t__9976.left;
          t__9976 = G__9995;
          continue
        }else {
          if("\ufdd0'else") {
            var G__9996 = t__9976.right;
            t__9976 = G__9996;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__9978 = this;
  if(this__9978.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__9978.tree, ascending_QMARK_, this__9978.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__9979 = this;
  if(this__9979.cnt > 0) {
    var stack__9980 = null;
    var t__9981 = this__9979.tree;
    while(true) {
      if(!(t__9981 == null)) {
        var c__9982 = this__9979.comp.call(null, k, t__9981.key);
        if(c__9982 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__9980, t__9981), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__9982 < 0) {
              var G__9997 = cljs.core.conj.call(null, stack__9980, t__9981);
              var G__9998 = t__9981.left;
              stack__9980 = G__9997;
              t__9981 = G__9998;
              continue
            }else {
              var G__9999 = stack__9980;
              var G__10000 = t__9981.right;
              stack__9980 = G__9999;
              t__9981 = G__10000;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__9982 > 0) {
                var G__10001 = cljs.core.conj.call(null, stack__9980, t__9981);
                var G__10002 = t__9981.right;
                stack__9980 = G__10001;
                t__9981 = G__10002;
                continue
              }else {
                var G__10003 = stack__9980;
                var G__10004 = t__9981.left;
                stack__9980 = G__10003;
                t__9981 = G__10004;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__9980 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__9980, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__9983 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__9984 = this;
  return this__9984.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9985 = this;
  if(this__9985.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__9985.tree, true, this__9985.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9986 = this;
  return this__9986.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9987 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9988 = this;
  return new cljs.core.PersistentTreeMap(this__9988.comp, this__9988.tree, this__9988.cnt, meta, this__9988.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9989 = this;
  return this__9989.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9990 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__9990.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9991 = this;
  var found__9992 = [null];
  var t__9993 = cljs.core.tree_map_remove.call(null, this__9991.comp, this__9991.tree, k, found__9992);
  if(t__9993 == null) {
    if(cljs.core.nth.call(null, found__9992, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__9991.comp, null, 0, this__9991.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__9991.comp, t__9993.blacken(), this__9991.cnt - 1, this__9991.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10007 = cljs.core.seq.call(null, keyvals);
    var out__10008 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10007) {
        var G__10009 = cljs.core.nnext.call(null, in__10007);
        var G__10010 = cljs.core.assoc_BANG_.call(null, out__10008, cljs.core.first.call(null, in__10007), cljs.core.second.call(null, in__10007));
        in__10007 = G__10009;
        out__10008 = G__10010;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10008)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10011) {
    var keyvals = cljs.core.seq(arglist__10011);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10012) {
    var keyvals = cljs.core.seq(arglist__10012);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__10016 = [];
    var obj__10017 = {};
    var kvs__10018 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__10018) {
        ks__10016.push(cljs.core.first.call(null, kvs__10018));
        obj__10017[cljs.core.first.call(null, kvs__10018)] = cljs.core.second.call(null, kvs__10018);
        var G__10019 = cljs.core.nnext.call(null, kvs__10018);
        kvs__10018 = G__10019;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__10016, obj__10017)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10020) {
    var keyvals = cljs.core.seq(arglist__10020);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10023 = cljs.core.seq.call(null, keyvals);
    var out__10024 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10023) {
        var G__10025 = cljs.core.nnext.call(null, in__10023);
        var G__10026 = cljs.core.assoc.call(null, out__10024, cljs.core.first.call(null, in__10023), cljs.core.second.call(null, in__10023));
        in__10023 = G__10025;
        out__10024 = G__10026;
        continue
      }else {
        return out__10024
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10027) {
    var keyvals = cljs.core.seq(arglist__10027);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10030 = cljs.core.seq.call(null, keyvals);
    var out__10031 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10030) {
        var G__10032 = cljs.core.nnext.call(null, in__10030);
        var G__10033 = cljs.core.assoc.call(null, out__10031, cljs.core.first.call(null, in__10030), cljs.core.second.call(null, in__10030));
        in__10030 = G__10032;
        out__10031 = G__10033;
        continue
      }else {
        return out__10031
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10034) {
    var comparator = cljs.core.first(arglist__10034);
    var keyvals = cljs.core.rest(arglist__10034);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10035_SHARP_, p2__10036_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____10038 = p1__10035_SHARP_;
          if(cljs.core.truth_(or__3824__auto____10038)) {
            return or__3824__auto____10038
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10036_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10039) {
    var maps = cljs.core.seq(arglist__10039);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10047 = function(m, e) {
        var k__10045 = cljs.core.first.call(null, e);
        var v__10046 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10045)) {
          return cljs.core.assoc.call(null, m, k__10045, f.call(null, cljs.core._lookup.call(null, m, k__10045, null), v__10046))
        }else {
          return cljs.core.assoc.call(null, m, k__10045, v__10046)
        }
      };
      var merge2__10049 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10047, function() {
          var or__3824__auto____10048 = m1;
          if(cljs.core.truth_(or__3824__auto____10048)) {
            return or__3824__auto____10048
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10049, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10050) {
    var f = cljs.core.first(arglist__10050);
    var maps = cljs.core.rest(arglist__10050);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10055 = cljs.core.ObjMap.EMPTY;
  var keys__10056 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10056) {
      var key__10057 = cljs.core.first.call(null, keys__10056);
      var entry__10058 = cljs.core._lookup.call(null, map, key__10057, "\ufdd0'cljs.core/not-found");
      var G__10059 = cljs.core.not_EQ_.call(null, entry__10058, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__10055, key__10057, entry__10058) : ret__10055;
      var G__10060 = cljs.core.next.call(null, keys__10056);
      ret__10055 = G__10059;
      keys__10056 = G__10060;
      continue
    }else {
      return ret__10055
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10064 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10064.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10065 = this;
  var h__2192__auto____10066 = this__10065.__hash;
  if(!(h__2192__auto____10066 == null)) {
    return h__2192__auto____10066
  }else {
    var h__2192__auto____10067 = cljs.core.hash_iset.call(null, coll);
    this__10065.__hash = h__2192__auto____10067;
    return h__2192__auto____10067
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10068 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10069 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10069.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10090 = null;
  var G__10090__2 = function(this_sym10070, k) {
    var this__10072 = this;
    var this_sym10070__10073 = this;
    var coll__10074 = this_sym10070__10073;
    return coll__10074.cljs$core$ILookup$_lookup$arity$2(coll__10074, k)
  };
  var G__10090__3 = function(this_sym10071, k, not_found) {
    var this__10072 = this;
    var this_sym10071__10075 = this;
    var coll__10076 = this_sym10071__10075;
    return coll__10076.cljs$core$ILookup$_lookup$arity$3(coll__10076, k, not_found)
  };
  G__10090 = function(this_sym10071, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10090__2.call(this, this_sym10071, k);
      case 3:
        return G__10090__3.call(this, this_sym10071, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10090
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10062, args10063) {
  var this__10077 = this;
  return this_sym10062.call.apply(this_sym10062, [this_sym10062].concat(args10063.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10078 = this;
  return new cljs.core.PersistentHashSet(this__10078.meta, cljs.core.assoc.call(null, this__10078.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10079 = this;
  var this__10080 = this;
  return cljs.core.pr_str.call(null, this__10080)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10081 = this;
  return cljs.core.keys.call(null, this__10081.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10082 = this;
  return new cljs.core.PersistentHashSet(this__10082.meta, cljs.core.dissoc.call(null, this__10082.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10083 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10084 = this;
  var and__3822__auto____10085 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10085) {
    var and__3822__auto____10086 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10086) {
      return cljs.core.every_QMARK_.call(null, function(p1__10061_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10061_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10086
    }
  }else {
    return and__3822__auto____10085
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10087 = this;
  return new cljs.core.PersistentHashSet(meta, this__10087.hash_map, this__10087.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10088 = this;
  return this__10088.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10089 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10089.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__10091 = cljs.core.count.call(null, items);
  var i__10092 = 0;
  var out__10093 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__10092 < len__10091) {
      var G__10094 = i__10092 + 1;
      var G__10095 = cljs.core.conj_BANG_.call(null, out__10093, items[i__10092]);
      i__10092 = G__10094;
      out__10093 = G__10095;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10093)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10113 = null;
  var G__10113__2 = function(this_sym10099, k) {
    var this__10101 = this;
    var this_sym10099__10102 = this;
    var tcoll__10103 = this_sym10099__10102;
    if(cljs.core._lookup.call(null, this__10101.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10113__3 = function(this_sym10100, k, not_found) {
    var this__10101 = this;
    var this_sym10100__10104 = this;
    var tcoll__10105 = this_sym10100__10104;
    if(cljs.core._lookup.call(null, this__10101.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10113 = function(this_sym10100, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10113__2.call(this, this_sym10100, k);
      case 3:
        return G__10113__3.call(this, this_sym10100, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10113
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10097, args10098) {
  var this__10106 = this;
  return this_sym10097.call.apply(this_sym10097, [this_sym10097].concat(args10098.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10107 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10108 = this;
  if(cljs.core._lookup.call(null, this__10108.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10109 = this;
  return cljs.core.count.call(null, this__10109.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10110 = this;
  this__10110.transient_map = cljs.core.dissoc_BANG_.call(null, this__10110.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10111 = this;
  this__10111.transient_map = cljs.core.assoc_BANG_.call(null, this__10111.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10112 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10112.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10116 = this;
  var h__2192__auto____10117 = this__10116.__hash;
  if(!(h__2192__auto____10117 == null)) {
    return h__2192__auto____10117
  }else {
    var h__2192__auto____10118 = cljs.core.hash_iset.call(null, coll);
    this__10116.__hash = h__2192__auto____10118;
    return h__2192__auto____10118
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10119 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10120 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10120.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10146 = null;
  var G__10146__2 = function(this_sym10121, k) {
    var this__10123 = this;
    var this_sym10121__10124 = this;
    var coll__10125 = this_sym10121__10124;
    return coll__10125.cljs$core$ILookup$_lookup$arity$2(coll__10125, k)
  };
  var G__10146__3 = function(this_sym10122, k, not_found) {
    var this__10123 = this;
    var this_sym10122__10126 = this;
    var coll__10127 = this_sym10122__10126;
    return coll__10127.cljs$core$ILookup$_lookup$arity$3(coll__10127, k, not_found)
  };
  G__10146 = function(this_sym10122, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10146__2.call(this, this_sym10122, k);
      case 3:
        return G__10146__3.call(this, this_sym10122, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10146
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10114, args10115) {
  var this__10128 = this;
  return this_sym10114.call.apply(this_sym10114, [this_sym10114].concat(args10115.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10129 = this;
  return new cljs.core.PersistentTreeSet(this__10129.meta, cljs.core.assoc.call(null, this__10129.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10130 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10130.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10131 = this;
  var this__10132 = this;
  return cljs.core.pr_str.call(null, this__10132)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10133 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10133.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10134 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10134.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10135 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10136 = this;
  return cljs.core._comparator.call(null, this__10136.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10137 = this;
  return cljs.core.keys.call(null, this__10137.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10138 = this;
  return new cljs.core.PersistentTreeSet(this__10138.meta, cljs.core.dissoc.call(null, this__10138.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10139 = this;
  return cljs.core.count.call(null, this__10139.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10140 = this;
  var and__3822__auto____10141 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10141) {
    var and__3822__auto____10142 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10142) {
      return cljs.core.every_QMARK_.call(null, function(p1__10096_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10096_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10142
    }
  }else {
    return and__3822__auto____10141
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10143 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10143.tree_map, this__10143.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10144 = this;
  return this__10144.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10145 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10145.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10151__delegate = function(keys) {
      var in__10149 = cljs.core.seq.call(null, keys);
      var out__10150 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__10149)) {
          var G__10152 = cljs.core.next.call(null, in__10149);
          var G__10153 = cljs.core.conj_BANG_.call(null, out__10150, cljs.core.first.call(null, in__10149));
          in__10149 = G__10152;
          out__10150 = G__10153;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__10150)
        }
        break
      }
    };
    var G__10151 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10151__delegate.call(this, keys)
    };
    G__10151.cljs$lang$maxFixedArity = 0;
    G__10151.cljs$lang$applyTo = function(arglist__10154) {
      var keys = cljs.core.seq(arglist__10154);
      return G__10151__delegate(keys)
    };
    G__10151.cljs$lang$arity$variadic = G__10151__delegate;
    return G__10151
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10155) {
    var keys = cljs.core.seq(arglist__10155);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10157) {
    var comparator = cljs.core.first(arglist__10157);
    var keys = cljs.core.rest(arglist__10157);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10163 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____10164 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____10164)) {
        var e__10165 = temp__3971__auto____10164;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10165))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10163, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10156_SHARP_) {
      var temp__3971__auto____10166 = cljs.core.find.call(null, smap, p1__10156_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____10166)) {
        var e__10167 = temp__3971__auto____10166;
        return cljs.core.second.call(null, e__10167)
      }else {
        return p1__10156_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10197 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10190, seen) {
        while(true) {
          var vec__10191__10192 = p__10190;
          var f__10193 = cljs.core.nth.call(null, vec__10191__10192, 0, null);
          var xs__10194 = vec__10191__10192;
          var temp__3974__auto____10195 = cljs.core.seq.call(null, xs__10194);
          if(temp__3974__auto____10195) {
            var s__10196 = temp__3974__auto____10195;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10193)) {
              var G__10198 = cljs.core.rest.call(null, s__10196);
              var G__10199 = seen;
              p__10190 = G__10198;
              seen = G__10199;
              continue
            }else {
              return cljs.core.cons.call(null, f__10193, step.call(null, cljs.core.rest.call(null, s__10196), cljs.core.conj.call(null, seen, f__10193)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10197.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__10202 = cljs.core.PersistentVector.EMPTY;
  var s__10203 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10203)) {
      var G__10204 = cljs.core.conj.call(null, ret__10202, cljs.core.first.call(null, s__10203));
      var G__10205 = cljs.core.next.call(null, s__10203);
      ret__10202 = G__10204;
      s__10203 = G__10205;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10202)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____10208 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____10208) {
        return or__3824__auto____10208
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10209 = x.lastIndexOf("/");
      if(i__10209 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10209 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____10212 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____10212) {
      return or__3824__auto____10212
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10213 = x.lastIndexOf("/");
    if(i__10213 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10213)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10220 = cljs.core.ObjMap.EMPTY;
  var ks__10221 = cljs.core.seq.call(null, keys);
  var vs__10222 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____10223 = ks__10221;
      if(and__3822__auto____10223) {
        return vs__10222
      }else {
        return and__3822__auto____10223
      }
    }()) {
      var G__10224 = cljs.core.assoc.call(null, map__10220, cljs.core.first.call(null, ks__10221), cljs.core.first.call(null, vs__10222));
      var G__10225 = cljs.core.next.call(null, ks__10221);
      var G__10226 = cljs.core.next.call(null, vs__10222);
      map__10220 = G__10224;
      ks__10221 = G__10225;
      vs__10222 = G__10226;
      continue
    }else {
      return map__10220
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10229__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10214_SHARP_, p2__10215_SHARP_) {
        return max_key.call(null, k, p1__10214_SHARP_, p2__10215_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10229 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10229__delegate.call(this, k, x, y, more)
    };
    G__10229.cljs$lang$maxFixedArity = 3;
    G__10229.cljs$lang$applyTo = function(arglist__10230) {
      var k = cljs.core.first(arglist__10230);
      var x = cljs.core.first(cljs.core.next(arglist__10230));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10230)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10230)));
      return G__10229__delegate(k, x, y, more)
    };
    G__10229.cljs$lang$arity$variadic = G__10229__delegate;
    return G__10229
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10231__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10227_SHARP_, p2__10228_SHARP_) {
        return min_key.call(null, k, p1__10227_SHARP_, p2__10228_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10231 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10231__delegate.call(this, k, x, y, more)
    };
    G__10231.cljs$lang$maxFixedArity = 3;
    G__10231.cljs$lang$applyTo = function(arglist__10232) {
      var k = cljs.core.first(arglist__10232);
      var x = cljs.core.first(cljs.core.next(arglist__10232));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10232)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10232)));
      return G__10231__delegate(k, x, y, more)
    };
    G__10231.cljs$lang$arity$variadic = G__10231__delegate;
    return G__10231
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10235 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10235) {
        var s__10236 = temp__3974__auto____10235;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__10236), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__10236)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10239 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10239) {
      var s__10240 = temp__3974__auto____10239;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__10240)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10240), take_while.call(null, pred, cljs.core.rest.call(null, s__10240)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__10242 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__10242.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__10254 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____10255 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____10255)) {
        var vec__10256__10257 = temp__3974__auto____10255;
        var e__10258 = cljs.core.nth.call(null, vec__10256__10257, 0, null);
        var s__10259 = vec__10256__10257;
        if(cljs.core.truth_(include__10254.call(null, e__10258))) {
          return s__10259
        }else {
          return cljs.core.next.call(null, s__10259)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10254, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10260 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____10260)) {
      var vec__10261__10262 = temp__3974__auto____10260;
      var e__10263 = cljs.core.nth.call(null, vec__10261__10262, 0, null);
      var s__10264 = vec__10261__10262;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__10263)) ? s__10264 : cljs.core.next.call(null, s__10264))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__10276 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____10277 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____10277)) {
        var vec__10278__10279 = temp__3974__auto____10277;
        var e__10280 = cljs.core.nth.call(null, vec__10278__10279, 0, null);
        var s__10281 = vec__10278__10279;
        if(cljs.core.truth_(include__10276.call(null, e__10280))) {
          return s__10281
        }else {
          return cljs.core.next.call(null, s__10281)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10276, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10282 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____10282)) {
      var vec__10283__10284 = temp__3974__auto____10282;
      var e__10285 = cljs.core.nth.call(null, vec__10283__10284, 0, null);
      var s__10286 = vec__10283__10284;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__10285)) ? s__10286 : cljs.core.next.call(null, s__10286))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__10287 = this;
  var h__2192__auto____10288 = this__10287.__hash;
  if(!(h__2192__auto____10288 == null)) {
    return h__2192__auto____10288
  }else {
    var h__2192__auto____10289 = cljs.core.hash_coll.call(null, rng);
    this__10287.__hash = h__2192__auto____10289;
    return h__2192__auto____10289
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__10290 = this;
  if(this__10290.step > 0) {
    if(this__10290.start + this__10290.step < this__10290.end) {
      return new cljs.core.Range(this__10290.meta, this__10290.start + this__10290.step, this__10290.end, this__10290.step, null)
    }else {
      return null
    }
  }else {
    if(this__10290.start + this__10290.step > this__10290.end) {
      return new cljs.core.Range(this__10290.meta, this__10290.start + this__10290.step, this__10290.end, this__10290.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__10291 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__10292 = this;
  var this__10293 = this;
  return cljs.core.pr_str.call(null, this__10293)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__10294 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__10295 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__10296 = this;
  if(this__10296.step > 0) {
    if(this__10296.start < this__10296.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__10296.start > this__10296.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__10297 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__10297.end - this__10297.start) / this__10297.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__10298 = this;
  return this__10298.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__10299 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__10299.meta, this__10299.start + this__10299.step, this__10299.end, this__10299.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__10300 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__10301 = this;
  return new cljs.core.Range(meta, this__10301.start, this__10301.end, this__10301.step, this__10301.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__10302 = this;
  return this__10302.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__10303 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10303.start + n * this__10303.step
  }else {
    if(function() {
      var and__3822__auto____10304 = this__10303.start > this__10303.end;
      if(and__3822__auto____10304) {
        return this__10303.step === 0
      }else {
        return and__3822__auto____10304
      }
    }()) {
      return this__10303.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__10305 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10305.start + n * this__10305.step
  }else {
    if(function() {
      var and__3822__auto____10306 = this__10305.start > this__10305.end;
      if(and__3822__auto____10306) {
        return this__10305.step === 0
      }else {
        return and__3822__auto____10306
      }
    }()) {
      return this__10305.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__10307 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10307.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10310 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10310) {
      var s__10311 = temp__3974__auto____10310;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__10311), take_nth.call(null, n, cljs.core.drop.call(null, n, s__10311)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10318 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10318) {
      var s__10319 = temp__3974__auto____10318;
      var fst__10320 = cljs.core.first.call(null, s__10319);
      var fv__10321 = f.call(null, fst__10320);
      var run__10322 = cljs.core.cons.call(null, fst__10320, cljs.core.take_while.call(null, function(p1__10312_SHARP_) {
        return cljs.core._EQ_.call(null, fv__10321, f.call(null, p1__10312_SHARP_))
      }, cljs.core.next.call(null, s__10319)));
      return cljs.core.cons.call(null, run__10322, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__10322), s__10319))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____10337 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____10337) {
        var s__10338 = temp__3971__auto____10337;
        return reductions.call(null, f, cljs.core.first.call(null, s__10338), cljs.core.rest.call(null, s__10338))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10339 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10339) {
        var s__10340 = temp__3974__auto____10339;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__10340)), cljs.core.rest.call(null, s__10340))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10343 = null;
      var G__10343__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__10343__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__10343__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__10343__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__10343__4 = function() {
        var G__10344__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__10344 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10344__delegate.call(this, x, y, z, args)
        };
        G__10344.cljs$lang$maxFixedArity = 3;
        G__10344.cljs$lang$applyTo = function(arglist__10345) {
          var x = cljs.core.first(arglist__10345);
          var y = cljs.core.first(cljs.core.next(arglist__10345));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10345)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10345)));
          return G__10344__delegate(x, y, z, args)
        };
        G__10344.cljs$lang$arity$variadic = G__10344__delegate;
        return G__10344
      }();
      G__10343 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10343__0.call(this);
          case 1:
            return G__10343__1.call(this, x);
          case 2:
            return G__10343__2.call(this, x, y);
          case 3:
            return G__10343__3.call(this, x, y, z);
          default:
            return G__10343__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10343.cljs$lang$maxFixedArity = 3;
      G__10343.cljs$lang$applyTo = G__10343__4.cljs$lang$applyTo;
      return G__10343
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10346 = null;
      var G__10346__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__10346__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__10346__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__10346__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__10346__4 = function() {
        var G__10347__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10347 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10347__delegate.call(this, x, y, z, args)
        };
        G__10347.cljs$lang$maxFixedArity = 3;
        G__10347.cljs$lang$applyTo = function(arglist__10348) {
          var x = cljs.core.first(arglist__10348);
          var y = cljs.core.first(cljs.core.next(arglist__10348));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10348)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10348)));
          return G__10347__delegate(x, y, z, args)
        };
        G__10347.cljs$lang$arity$variadic = G__10347__delegate;
        return G__10347
      }();
      G__10346 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10346__0.call(this);
          case 1:
            return G__10346__1.call(this, x);
          case 2:
            return G__10346__2.call(this, x, y);
          case 3:
            return G__10346__3.call(this, x, y, z);
          default:
            return G__10346__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10346.cljs$lang$maxFixedArity = 3;
      G__10346.cljs$lang$applyTo = G__10346__4.cljs$lang$applyTo;
      return G__10346
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10349 = null;
      var G__10349__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__10349__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__10349__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__10349__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__10349__4 = function() {
        var G__10350__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__10350 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10350__delegate.call(this, x, y, z, args)
        };
        G__10350.cljs$lang$maxFixedArity = 3;
        G__10350.cljs$lang$applyTo = function(arglist__10351) {
          var x = cljs.core.first(arglist__10351);
          var y = cljs.core.first(cljs.core.next(arglist__10351));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10351)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10351)));
          return G__10350__delegate(x, y, z, args)
        };
        G__10350.cljs$lang$arity$variadic = G__10350__delegate;
        return G__10350
      }();
      G__10349 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10349__0.call(this);
          case 1:
            return G__10349__1.call(this, x);
          case 2:
            return G__10349__2.call(this, x, y);
          case 3:
            return G__10349__3.call(this, x, y, z);
          default:
            return G__10349__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10349.cljs$lang$maxFixedArity = 3;
      G__10349.cljs$lang$applyTo = G__10349__4.cljs$lang$applyTo;
      return G__10349
    }()
  };
  var juxt__4 = function() {
    var G__10352__delegate = function(f, g, h, fs) {
      var fs__10342 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10353 = null;
        var G__10353__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10323_SHARP_, p2__10324_SHARP_) {
            return cljs.core.conj.call(null, p1__10323_SHARP_, p2__10324_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__10342)
        };
        var G__10353__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10325_SHARP_, p2__10326_SHARP_) {
            return cljs.core.conj.call(null, p1__10325_SHARP_, p2__10326_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__10342)
        };
        var G__10353__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10327_SHARP_, p2__10328_SHARP_) {
            return cljs.core.conj.call(null, p1__10327_SHARP_, p2__10328_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__10342)
        };
        var G__10353__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10329_SHARP_, p2__10330_SHARP_) {
            return cljs.core.conj.call(null, p1__10329_SHARP_, p2__10330_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__10342)
        };
        var G__10353__4 = function() {
          var G__10354__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10331_SHARP_, p2__10332_SHARP_) {
              return cljs.core.conj.call(null, p1__10331_SHARP_, cljs.core.apply.call(null, p2__10332_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__10342)
          };
          var G__10354 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10354__delegate.call(this, x, y, z, args)
          };
          G__10354.cljs$lang$maxFixedArity = 3;
          G__10354.cljs$lang$applyTo = function(arglist__10355) {
            var x = cljs.core.first(arglist__10355);
            var y = cljs.core.first(cljs.core.next(arglist__10355));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10355)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10355)));
            return G__10354__delegate(x, y, z, args)
          };
          G__10354.cljs$lang$arity$variadic = G__10354__delegate;
          return G__10354
        }();
        G__10353 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10353__0.call(this);
            case 1:
              return G__10353__1.call(this, x);
            case 2:
              return G__10353__2.call(this, x, y);
            case 3:
              return G__10353__3.call(this, x, y, z);
            default:
              return G__10353__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__10353.cljs$lang$maxFixedArity = 3;
        G__10353.cljs$lang$applyTo = G__10353__4.cljs$lang$applyTo;
        return G__10353
      }()
    };
    var G__10352 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10352__delegate.call(this, f, g, h, fs)
    };
    G__10352.cljs$lang$maxFixedArity = 3;
    G__10352.cljs$lang$applyTo = function(arglist__10356) {
      var f = cljs.core.first(arglist__10356);
      var g = cljs.core.first(cljs.core.next(arglist__10356));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10356)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10356)));
      return G__10352__delegate(f, g, h, fs)
    };
    G__10352.cljs$lang$arity$variadic = G__10352__delegate;
    return G__10352
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__10359 = cljs.core.next.call(null, coll);
        coll = G__10359;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____10358 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____10358) {
          return n > 0
        }else {
          return and__3822__auto____10358
        }
      }())) {
        var G__10360 = n - 1;
        var G__10361 = cljs.core.next.call(null, coll);
        n = G__10360;
        coll = G__10361;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__10363 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__10363), s)) {
    if(cljs.core.count.call(null, matches__10363) === 1) {
      return cljs.core.first.call(null, matches__10363)
    }else {
      return cljs.core.vec.call(null, matches__10363)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__10365 = re.exec(s);
  if(matches__10365 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__10365) === 1) {
      return cljs.core.first.call(null, matches__10365)
    }else {
      return cljs.core.vec.call(null, matches__10365)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__10370 = cljs.core.re_find.call(null, re, s);
  var match_idx__10371 = s.search(re);
  var match_str__10372 = cljs.core.coll_QMARK_.call(null, match_data__10370) ? cljs.core.first.call(null, match_data__10370) : match_data__10370;
  var post_match__10373 = cljs.core.subs.call(null, s, match_idx__10371 + cljs.core.count.call(null, match_str__10372));
  if(cljs.core.truth_(match_data__10370)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__10370, re_seq.call(null, re, post_match__10373))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10380__10381 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___10382 = cljs.core.nth.call(null, vec__10380__10381, 0, null);
  var flags__10383 = cljs.core.nth.call(null, vec__10380__10381, 1, null);
  var pattern__10384 = cljs.core.nth.call(null, vec__10380__10381, 2, null);
  return new RegExp(pattern__10384, flags__10383)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__10374_SHARP_) {
    return print_one.call(null, p1__10374_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____10394 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____10394)) {
            var and__3822__auto____10398 = function() {
              var G__10395__10396 = obj;
              if(G__10395__10396) {
                if(function() {
                  var or__3824__auto____10397 = G__10395__10396.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____10397) {
                    return or__3824__auto____10397
                  }else {
                    return G__10395__10396.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__10395__10396.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10395__10396)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10395__10396)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____10398)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____10398
            }
          }else {
            return and__3822__auto____10394
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____10399 = !(obj == null);
          if(and__3822__auto____10399) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____10399
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__10400__10401 = obj;
          if(G__10400__10401) {
            if(function() {
              var or__3824__auto____10402 = G__10400__10401.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____10402) {
                return or__3824__auto____10402
              }else {
                return G__10400__10401.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__10400__10401.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10400__10401)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10400__10401)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__10422 = new goog.string.StringBuffer;
  var G__10423__10424 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10423__10424) {
    var string__10425 = cljs.core.first.call(null, G__10423__10424);
    var G__10423__10426 = G__10423__10424;
    while(true) {
      sb__10422.append(string__10425);
      var temp__3974__auto____10427 = cljs.core.next.call(null, G__10423__10426);
      if(temp__3974__auto____10427) {
        var G__10423__10428 = temp__3974__auto____10427;
        var G__10441 = cljs.core.first.call(null, G__10423__10428);
        var G__10442 = G__10423__10428;
        string__10425 = G__10441;
        G__10423__10426 = G__10442;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10429__10430 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10429__10430) {
    var obj__10431 = cljs.core.first.call(null, G__10429__10430);
    var G__10429__10432 = G__10429__10430;
    while(true) {
      sb__10422.append(" ");
      var G__10433__10434 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10431, opts));
      if(G__10433__10434) {
        var string__10435 = cljs.core.first.call(null, G__10433__10434);
        var G__10433__10436 = G__10433__10434;
        while(true) {
          sb__10422.append(string__10435);
          var temp__3974__auto____10437 = cljs.core.next.call(null, G__10433__10436);
          if(temp__3974__auto____10437) {
            var G__10433__10438 = temp__3974__auto____10437;
            var G__10443 = cljs.core.first.call(null, G__10433__10438);
            var G__10444 = G__10433__10438;
            string__10435 = G__10443;
            G__10433__10436 = G__10444;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____10439 = cljs.core.next.call(null, G__10429__10432);
      if(temp__3974__auto____10439) {
        var G__10429__10440 = temp__3974__auto____10439;
        var G__10445 = cljs.core.first.call(null, G__10429__10440);
        var G__10446 = G__10429__10440;
        obj__10431 = G__10445;
        G__10429__10432 = G__10446;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__10422
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__10448 = cljs.core.pr_sb.call(null, objs, opts);
  sb__10448.append("\n");
  return[cljs.core.str(sb__10448)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__10467__10468 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10467__10468) {
    var string__10469 = cljs.core.first.call(null, G__10467__10468);
    var G__10467__10470 = G__10467__10468;
    while(true) {
      cljs.core.string_print.call(null, string__10469);
      var temp__3974__auto____10471 = cljs.core.next.call(null, G__10467__10470);
      if(temp__3974__auto____10471) {
        var G__10467__10472 = temp__3974__auto____10471;
        var G__10485 = cljs.core.first.call(null, G__10467__10472);
        var G__10486 = G__10467__10472;
        string__10469 = G__10485;
        G__10467__10470 = G__10486;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10473__10474 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10473__10474) {
    var obj__10475 = cljs.core.first.call(null, G__10473__10474);
    var G__10473__10476 = G__10473__10474;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__10477__10478 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10475, opts));
      if(G__10477__10478) {
        var string__10479 = cljs.core.first.call(null, G__10477__10478);
        var G__10477__10480 = G__10477__10478;
        while(true) {
          cljs.core.string_print.call(null, string__10479);
          var temp__3974__auto____10481 = cljs.core.next.call(null, G__10477__10480);
          if(temp__3974__auto____10481) {
            var G__10477__10482 = temp__3974__auto____10481;
            var G__10487 = cljs.core.first.call(null, G__10477__10482);
            var G__10488 = G__10477__10482;
            string__10479 = G__10487;
            G__10477__10480 = G__10488;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____10483 = cljs.core.next.call(null, G__10473__10476);
      if(temp__3974__auto____10483) {
        var G__10473__10484 = temp__3974__auto____10483;
        var G__10489 = cljs.core.first.call(null, G__10473__10484);
        var G__10490 = G__10473__10484;
        obj__10475 = G__10489;
        G__10473__10476 = G__10490;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10491) {
    var objs = cljs.core.seq(arglist__10491);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10492) {
    var objs = cljs.core.seq(arglist__10492);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10493) {
    var objs = cljs.core.seq(arglist__10493);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10494) {
    var objs = cljs.core.seq(arglist__10494);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10495) {
    var objs = cljs.core.seq(arglist__10495);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10496) {
    var objs = cljs.core.seq(arglist__10496);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10497) {
    var objs = cljs.core.seq(arglist__10497);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10498) {
    var objs = cljs.core.seq(arglist__10498);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__10499) {
    var fmt = cljs.core.first(arglist__10499);
    var args = cljs.core.rest(arglist__10499);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10500 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10500, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10501 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10501, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10502 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10502, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____10503 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____10503)) {
        var nspc__10504 = temp__3974__auto____10503;
        return[cljs.core.str(nspc__10504), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____10505 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____10505)) {
          var nspc__10506 = temp__3974__auto____10505;
          return[cljs.core.str(nspc__10506), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10507 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10507, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__10509 = function(n, len) {
    var ns__10508 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__10508) < len) {
        var G__10511 = [cljs.core.str("0"), cljs.core.str(ns__10508)].join("");
        ns__10508 = G__10511;
        continue
      }else {
        return ns__10508
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__10509.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__10509.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__10509.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10509.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10509.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__10509.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10510 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10510, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10512 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__10513 = this;
  var G__10514__10515 = cljs.core.seq.call(null, this__10513.watches);
  if(G__10514__10515) {
    var G__10517__10519 = cljs.core.first.call(null, G__10514__10515);
    var vec__10518__10520 = G__10517__10519;
    var key__10521 = cljs.core.nth.call(null, vec__10518__10520, 0, null);
    var f__10522 = cljs.core.nth.call(null, vec__10518__10520, 1, null);
    var G__10514__10523 = G__10514__10515;
    var G__10517__10524 = G__10517__10519;
    var G__10514__10525 = G__10514__10523;
    while(true) {
      var vec__10526__10527 = G__10517__10524;
      var key__10528 = cljs.core.nth.call(null, vec__10526__10527, 0, null);
      var f__10529 = cljs.core.nth.call(null, vec__10526__10527, 1, null);
      var G__10514__10530 = G__10514__10525;
      f__10529.call(null, key__10528, this$, oldval, newval);
      var temp__3974__auto____10531 = cljs.core.next.call(null, G__10514__10530);
      if(temp__3974__auto____10531) {
        var G__10514__10532 = temp__3974__auto____10531;
        var G__10539 = cljs.core.first.call(null, G__10514__10532);
        var G__10540 = G__10514__10532;
        G__10517__10524 = G__10539;
        G__10514__10525 = G__10540;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__10533 = this;
  return this$.watches = cljs.core.assoc.call(null, this__10533.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__10534 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__10534.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__10535 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__10535.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__10536 = this;
  return this__10536.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10537 = this;
  return this__10537.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10538 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__10552__delegate = function(x, p__10541) {
      var map__10547__10548 = p__10541;
      var map__10547__10549 = cljs.core.seq_QMARK_.call(null, map__10547__10548) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10547__10548) : map__10547__10548;
      var validator__10550 = cljs.core._lookup.call(null, map__10547__10549, "\ufdd0'validator", null);
      var meta__10551 = cljs.core._lookup.call(null, map__10547__10549, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__10551, validator__10550, null)
    };
    var G__10552 = function(x, var_args) {
      var p__10541 = null;
      if(goog.isDef(var_args)) {
        p__10541 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10552__delegate.call(this, x, p__10541)
    };
    G__10552.cljs$lang$maxFixedArity = 1;
    G__10552.cljs$lang$applyTo = function(arglist__10553) {
      var x = cljs.core.first(arglist__10553);
      var p__10541 = cljs.core.rest(arglist__10553);
      return G__10552__delegate(x, p__10541)
    };
    G__10552.cljs$lang$arity$variadic = G__10552__delegate;
    return G__10552
  }();
  atom = function(x, var_args) {
    var p__10541 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____10557 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____10557)) {
    var validate__10558 = temp__3974__auto____10557;
    if(cljs.core.truth_(validate__10558.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__10559 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__10559, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__10560__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__10560 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__10560__delegate.call(this, a, f, x, y, z, more)
    };
    G__10560.cljs$lang$maxFixedArity = 5;
    G__10560.cljs$lang$applyTo = function(arglist__10561) {
      var a = cljs.core.first(arglist__10561);
      var f = cljs.core.first(cljs.core.next(arglist__10561));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10561)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10561))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10561)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10561)))));
      return G__10560__delegate(a, f, x, y, z, more)
    };
    G__10560.cljs$lang$arity$variadic = G__10560__delegate;
    return G__10560
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10562) {
    var iref = cljs.core.first(arglist__10562);
    var f = cljs.core.first(cljs.core.next(arglist__10562));
    var args = cljs.core.rest(cljs.core.next(arglist__10562));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__10563 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__10563.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10564 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__10564.state, function(p__10565) {
    var map__10566__10567 = p__10565;
    var map__10566__10568 = cljs.core.seq_QMARK_.call(null, map__10566__10567) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10566__10567) : map__10566__10567;
    var curr_state__10569 = map__10566__10568;
    var done__10570 = cljs.core._lookup.call(null, map__10566__10568, "\ufdd0'done", null);
    if(cljs.core.truth_(done__10570)) {
      return curr_state__10569
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__10564.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__10591__10592 = options;
    var map__10591__10593 = cljs.core.seq_QMARK_.call(null, map__10591__10592) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10591__10592) : map__10591__10592;
    var keywordize_keys__10594 = cljs.core._lookup.call(null, map__10591__10593, "\ufdd0'keywordize-keys", null);
    var keyfn__10595 = cljs.core.truth_(keywordize_keys__10594) ? cljs.core.keyword : cljs.core.str;
    var f__10610 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2462__auto____10609 = function iter__10603(s__10604) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__10604__10607 = s__10604;
                    while(true) {
                      if(cljs.core.seq.call(null, s__10604__10607)) {
                        var k__10608 = cljs.core.first.call(null, s__10604__10607);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__10595.call(null, k__10608), thisfn.call(null, x[k__10608])], true), iter__10603.call(null, cljs.core.rest.call(null, s__10604__10607)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2462__auto____10609.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__10610.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__10611) {
    var x = cljs.core.first(arglist__10611);
    var options = cljs.core.rest(arglist__10611);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__10616 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__10620__delegate = function(args) {
      var temp__3971__auto____10617 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__10616), args, null);
      if(cljs.core.truth_(temp__3971__auto____10617)) {
        var v__10618 = temp__3971__auto____10617;
        return v__10618
      }else {
        var ret__10619 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__10616, cljs.core.assoc, args, ret__10619);
        return ret__10619
      }
    };
    var G__10620 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10620__delegate.call(this, args)
    };
    G__10620.cljs$lang$maxFixedArity = 0;
    G__10620.cljs$lang$applyTo = function(arglist__10621) {
      var args = cljs.core.seq(arglist__10621);
      return G__10620__delegate(args)
    };
    G__10620.cljs$lang$arity$variadic = G__10620__delegate;
    return G__10620
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__10623 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__10623)) {
        var G__10624 = ret__10623;
        f = G__10624;
        continue
      }else {
        return ret__10623
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__10625__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__10625 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10625__delegate.call(this, f, args)
    };
    G__10625.cljs$lang$maxFixedArity = 1;
    G__10625.cljs$lang$applyTo = function(arglist__10626) {
      var f = cljs.core.first(arglist__10626);
      var args = cljs.core.rest(arglist__10626);
      return G__10625__delegate(f, args)
    };
    G__10625.cljs$lang$arity$variadic = G__10625__delegate;
    return G__10625
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__10628 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__10628, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__10628, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____10637 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____10637) {
      return or__3824__auto____10637
    }else {
      var or__3824__auto____10638 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____10638) {
        return or__3824__auto____10638
      }else {
        var and__3822__auto____10639 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____10639) {
          var and__3822__auto____10640 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____10640) {
            var and__3822__auto____10641 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____10641) {
              var ret__10642 = true;
              var i__10643 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____10644 = cljs.core.not.call(null, ret__10642);
                  if(or__3824__auto____10644) {
                    return or__3824__auto____10644
                  }else {
                    return i__10643 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__10642
                }else {
                  var G__10645 = isa_QMARK_.call(null, h, child.call(null, i__10643), parent.call(null, i__10643));
                  var G__10646 = i__10643 + 1;
                  ret__10642 = G__10645;
                  i__10643 = G__10646;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____10641
            }
          }else {
            return and__3822__auto____10640
          }
        }else {
          return and__3822__auto____10639
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__10655 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__10656 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__10657 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__10658 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____10659 = cljs.core.contains_QMARK_.call(null, tp__10655.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__10657.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__10657.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__10655, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__10658.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__10656, parent, ta__10657), "\ufdd0'descendants":tf__10658.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__10657, tag, td__10656)})
    }();
    if(cljs.core.truth_(or__3824__auto____10659)) {
      return or__3824__auto____10659
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__10664 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__10665 = cljs.core.truth_(parentMap__10664.call(null, tag)) ? cljs.core.disj.call(null, parentMap__10664.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__10666 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__10665)) ? cljs.core.assoc.call(null, parentMap__10664, tag, childsParents__10665) : cljs.core.dissoc.call(null, parentMap__10664, tag);
    var deriv_seq__10667 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__10647_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__10647_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__10647_SHARP_), cljs.core.second.call(null, p1__10647_SHARP_)))
    }, cljs.core.seq.call(null, newParents__10666)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__10664.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__10648_SHARP_, p2__10649_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__10648_SHARP_, p2__10649_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__10667))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__10675 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____10677 = cljs.core.truth_(function() {
    var and__3822__auto____10676 = xprefs__10675;
    if(cljs.core.truth_(and__3822__auto____10676)) {
      return xprefs__10675.call(null, y)
    }else {
      return and__3822__auto____10676
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____10677)) {
    return or__3824__auto____10677
  }else {
    var or__3824__auto____10679 = function() {
      var ps__10678 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__10678) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__10678), prefer_table))) {
          }else {
          }
          var G__10682 = cljs.core.rest.call(null, ps__10678);
          ps__10678 = G__10682;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____10679)) {
      return or__3824__auto____10679
    }else {
      var or__3824__auto____10681 = function() {
        var ps__10680 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__10680) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__10680), y, prefer_table))) {
            }else {
            }
            var G__10683 = cljs.core.rest.call(null, ps__10680);
            ps__10680 = G__10683;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____10681)) {
        return or__3824__auto____10681
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____10685 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____10685)) {
    return or__3824__auto____10685
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__10703 = cljs.core.reduce.call(null, function(be, p__10695) {
    var vec__10696__10697 = p__10695;
    var k__10698 = cljs.core.nth.call(null, vec__10696__10697, 0, null);
    var ___10699 = cljs.core.nth.call(null, vec__10696__10697, 1, null);
    var e__10700 = vec__10696__10697;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__10698)) {
      var be2__10702 = cljs.core.truth_(function() {
        var or__3824__auto____10701 = be == null;
        if(or__3824__auto____10701) {
          return or__3824__auto____10701
        }else {
          return cljs.core.dominates.call(null, k__10698, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__10700 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__10702), k__10698, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__10698), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__10702)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__10702
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__10703)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__10703));
      return cljs.core.second.call(null, best_entry__10703)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____10708 = mf;
    if(and__3822__auto____10708) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____10708
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2363__auto____10709 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10710 = cljs.core._reset[goog.typeOf(x__2363__auto____10709)];
      if(or__3824__auto____10710) {
        return or__3824__auto____10710
      }else {
        var or__3824__auto____10711 = cljs.core._reset["_"];
        if(or__3824__auto____10711) {
          return or__3824__auto____10711
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____10716 = mf;
    if(and__3822__auto____10716) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____10716
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2363__auto____10717 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10718 = cljs.core._add_method[goog.typeOf(x__2363__auto____10717)];
      if(or__3824__auto____10718) {
        return or__3824__auto____10718
      }else {
        var or__3824__auto____10719 = cljs.core._add_method["_"];
        if(or__3824__auto____10719) {
          return or__3824__auto____10719
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____10724 = mf;
    if(and__3822__auto____10724) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____10724
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____10725 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10726 = cljs.core._remove_method[goog.typeOf(x__2363__auto____10725)];
      if(or__3824__auto____10726) {
        return or__3824__auto____10726
      }else {
        var or__3824__auto____10727 = cljs.core._remove_method["_"];
        if(or__3824__auto____10727) {
          return or__3824__auto____10727
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____10732 = mf;
    if(and__3822__auto____10732) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____10732
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2363__auto____10733 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10734 = cljs.core._prefer_method[goog.typeOf(x__2363__auto____10733)];
      if(or__3824__auto____10734) {
        return or__3824__auto____10734
      }else {
        var or__3824__auto____10735 = cljs.core._prefer_method["_"];
        if(or__3824__auto____10735) {
          return or__3824__auto____10735
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____10740 = mf;
    if(and__3822__auto____10740) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____10740
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____10741 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10742 = cljs.core._get_method[goog.typeOf(x__2363__auto____10741)];
      if(or__3824__auto____10742) {
        return or__3824__auto____10742
      }else {
        var or__3824__auto____10743 = cljs.core._get_method["_"];
        if(or__3824__auto____10743) {
          return or__3824__auto____10743
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____10748 = mf;
    if(and__3822__auto____10748) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____10748
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2363__auto____10749 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10750 = cljs.core._methods[goog.typeOf(x__2363__auto____10749)];
      if(or__3824__auto____10750) {
        return or__3824__auto____10750
      }else {
        var or__3824__auto____10751 = cljs.core._methods["_"];
        if(or__3824__auto____10751) {
          return or__3824__auto____10751
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____10756 = mf;
    if(and__3822__auto____10756) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____10756
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2363__auto____10757 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10758 = cljs.core._prefers[goog.typeOf(x__2363__auto____10757)];
      if(or__3824__auto____10758) {
        return or__3824__auto____10758
      }else {
        var or__3824__auto____10759 = cljs.core._prefers["_"];
        if(or__3824__auto____10759) {
          return or__3824__auto____10759
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____10764 = mf;
    if(and__3822__auto____10764) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____10764
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2363__auto____10765 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____10766 = cljs.core._dispatch[goog.typeOf(x__2363__auto____10765)];
      if(or__3824__auto____10766) {
        return or__3824__auto____10766
      }else {
        var or__3824__auto____10767 = cljs.core._dispatch["_"];
        if(or__3824__auto____10767) {
          return or__3824__auto____10767
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__10770 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__10771 = cljs.core._get_method.call(null, mf, dispatch_val__10770);
  if(cljs.core.truth_(target_fn__10771)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__10770)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__10771, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10772 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__10773 = this;
  cljs.core.swap_BANG_.call(null, this__10773.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10773.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10773.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10773.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__10774 = this;
  cljs.core.swap_BANG_.call(null, this__10774.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__10774.method_cache, this__10774.method_table, this__10774.cached_hierarchy, this__10774.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__10775 = this;
  cljs.core.swap_BANG_.call(null, this__10775.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__10775.method_cache, this__10775.method_table, this__10775.cached_hierarchy, this__10775.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__10776 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__10776.cached_hierarchy), cljs.core.deref.call(null, this__10776.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__10776.method_cache, this__10776.method_table, this__10776.cached_hierarchy, this__10776.hierarchy)
  }
  var temp__3971__auto____10777 = cljs.core.deref.call(null, this__10776.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____10777)) {
    var target_fn__10778 = temp__3971__auto____10777;
    return target_fn__10778
  }else {
    var temp__3971__auto____10779 = cljs.core.find_and_cache_best_method.call(null, this__10776.name, dispatch_val, this__10776.hierarchy, this__10776.method_table, this__10776.prefer_table, this__10776.method_cache, this__10776.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____10779)) {
      var target_fn__10780 = temp__3971__auto____10779;
      return target_fn__10780
    }else {
      return cljs.core.deref.call(null, this__10776.method_table).call(null, this__10776.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__10781 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__10781.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__10781.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__10781.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__10781.method_cache, this__10781.method_table, this__10781.cached_hierarchy, this__10781.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__10782 = this;
  return cljs.core.deref.call(null, this__10782.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__10783 = this;
  return cljs.core.deref.call(null, this__10783.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__10784 = this;
  return cljs.core.do_dispatch.call(null, mf, this__10784.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__10786__delegate = function(_, args) {
    var self__10785 = this;
    return cljs.core._dispatch.call(null, self__10785, args)
  };
  var G__10786 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__10786__delegate.call(this, _, args)
  };
  G__10786.cljs$lang$maxFixedArity = 1;
  G__10786.cljs$lang$applyTo = function(arglist__10787) {
    var _ = cljs.core.first(arglist__10787);
    var args = cljs.core.rest(arglist__10787);
    return G__10786__delegate(_, args)
  };
  G__10786.cljs$lang$arity$variadic = G__10786__delegate;
  return G__10786
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__10788 = this;
  return cljs.core._dispatch.call(null, self__10788, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10789 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_10791, _) {
  var this__10790 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__10790.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__10792 = this;
  var and__3822__auto____10793 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____10793) {
    return this__10792.uuid === other.uuid
  }else {
    return and__3822__auto____10793
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__10794 = this;
  var this__10795 = this;
  return cljs.core.pr_str.call(null, this__10795)
};
cljs.core.UUID;
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____11464 = this$;
    if(and__3822__auto____11464) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____11464
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2363__auto____11465 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11466 = clojure.browser.event.event_types[goog.typeOf(x__2363__auto____11465)];
      if(or__3824__auto____11466) {
        return or__3824__auto____11466
      }else {
        var or__3824__auto____11467 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____11467) {
          return or__3824__auto____11467
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11468) {
    var vec__11469__11470 = p__11468;
    var k__11471 = cljs.core.nth.call(null, vec__11469__11470, 0, null);
    var v__11472 = cljs.core.nth.call(null, vec__11469__11470, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11471.toLowerCase()), v__11472], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11473) {
    var vec__11474__11475 = p__11473;
    var k__11476 = cljs.core.nth.call(null, vec__11474__11475, 0, null);
    var v__11477 = cljs.core.nth.call(null, vec__11474__11475, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11476.toLowerCase()), v__11477], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, this.path_.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(this.isDisposed()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  delete this.send
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  this.connectDeferred_ = false;
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  this.connectCb_ = null;
  this.connectDeferred_ = false;
  this.deferredDeliveries_.length = 0;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(Boolean(this.peerWindowObject_.closed)) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(this.connectDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  this.deferredDeliveries_.length = 0
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11327) {
  var vec__11328__11329 = p__11327;
  var k__11330 = cljs.core.nth.call(null, vec__11328__11329, 0, null);
  var v__11331 = cljs.core.nth.call(null, vec__11328__11329, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11330.toLowerCase()), v__11331], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____11348 = this$;
      if(and__3822__auto____11348) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____11348
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2363__auto____11349 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11350 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11349)];
        if(or__3824__auto____11350) {
          return or__3824__auto____11350
        }else {
          var or__3824__auto____11351 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11351) {
            return or__3824__auto____11351
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____11352 = this$;
      if(and__3822__auto____11352) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____11352
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2363__auto____11353 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11354 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11353)];
        if(or__3824__auto____11354) {
          return or__3824__auto____11354
        }else {
          var or__3824__auto____11355 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11355) {
            return or__3824__auto____11355
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____11356 = this$;
      if(and__3822__auto____11356) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____11356
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2363__auto____11357 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11358 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11357)];
        if(or__3824__auto____11358) {
          return or__3824__auto____11358
        }else {
          var or__3824__auto____11359 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11359) {
            return or__3824__auto____11359
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____11360 = this$;
      if(and__3822__auto____11360) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____11360
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2363__auto____11361 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11362 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____11361)];
        if(or__3824__auto____11362) {
          return or__3824__auto____11362
        }else {
          var or__3824__auto____11363 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11363) {
            return or__3824__auto____11363
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____11384 = this$;
      if(and__3822__auto____11384) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____11384
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2363__auto____11385 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11386 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11385)];
        if(or__3824__auto____11386) {
          return or__3824__auto____11386
        }else {
          var or__3824__auto____11387 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11387) {
            return or__3824__auto____11387
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____11388 = this$;
      if(and__3822__auto____11388) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____11388
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2363__auto____11389 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11390 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11389)];
        if(or__3824__auto____11390) {
          return or__3824__auto____11390
        }else {
          var or__3824__auto____11391 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11391) {
            return or__3824__auto____11391
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____11392 = this$;
      if(and__3822__auto____11392) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____11392
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2363__auto____11393 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11394 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11393)];
        if(or__3824__auto____11394) {
          return or__3824__auto____11394
        }else {
          var or__3824__auto____11395 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11395) {
            return or__3824__auto____11395
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____11396 = this$;
      if(and__3822__auto____11396) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____11396
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2363__auto____11397 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11398 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11397)];
        if(or__3824__auto____11398) {
          return or__3824__auto____11398
        }else {
          var or__3824__auto____11399 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11399) {
            return or__3824__auto____11399
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____11400 = this$;
      if(and__3822__auto____11400) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____11400
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2363__auto____11401 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11402 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____11401)];
        if(or__3824__auto____11402) {
          return or__3824__auto____11402
        }else {
          var or__3824__auto____11403 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11403) {
            return or__3824__auto____11403
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____11408 = this$;
    if(and__3822__auto____11408) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____11408
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2363__auto____11409 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11410 = clojure.browser.net.close[goog.typeOf(x__2363__auto____11409)];
      if(or__3824__auto____11410) {
        return or__3824__auto____11410
      }else {
        var or__3824__auto____11411 = clojure.browser.net.close["_"];
        if(or__3824__auto____11411) {
          return or__3824__auto____11411
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11412) {
    var vec__11413__11414 = p__11412;
    var k__11415 = cljs.core.nth.call(null, vec__11413__11414, 0, null);
    var v__11416 = cljs.core.nth.call(null, vec__11413__11414, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11415.toLowerCase()), v__11416], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11417) {
  var vec__11418__11419 = p__11417;
  var k__11420 = cljs.core.nth.call(null, vec__11418__11419, 0, null);
  var v__11421 = cljs.core.nth.call(null, vec__11418__11419, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11420.toLowerCase()), v__11421], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____11430 = this$;
      if(and__3822__auto____11430) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____11430
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2363__auto____11431 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11432 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____11431)];
        if(or__3824__auto____11432) {
          return or__3824__auto____11432
        }else {
          var or__3824__auto____11433 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11433) {
            return or__3824__auto____11433
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____11434 = this$;
      if(and__3822__auto____11434) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____11434
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2363__auto____11435 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11436 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____11435)];
        if(or__3824__auto____11436) {
          return or__3824__auto____11436
        }else {
          var or__3824__auto____11437 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11437) {
            return or__3824__auto____11437
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____11449 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____11449)) {
      var config__11450 = temp__3974__auto____11449;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__11450))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__11451) {
      var vec__11452__11453 = p__11451;
      var k__11454 = cljs.core.nth.call(null, vec__11452__11453, 0, null);
      var v__11455 = cljs.core.nth.call(null, vec__11452__11453, 1, null);
      var temp__3971__auto____11456 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__11454, null);
      if(cljs.core.truth_(temp__3971__auto____11456)) {
        var field__11457 = temp__3971__auto____11456;
        var G__11458__11459 = sum;
        G__11458__11459[field__11457] = v__11455;
        return G__11458__11459
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____11309 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____11309)) {
    var conn__11310 = temp__3971__auto____11309;
    return clojure.browser.net.transmit.call(null, conn__11310, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__11316 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e11314) {
      if(cljs.core.instance_QMARK_.call(null, Error, e11314)) {
        var e__11315 = e11314;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__11315), "\ufdd0'stacktrace":cljs.core.truth_(e__11315.hasOwnProperty("stack")) ? e__11315.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e11314;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__11316)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__11318 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__11318, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__11318, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____11322 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____11322)) {
    var repl_connection__11323 = temp__3971__auto____11322;
    var connection__11324 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__11324, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__11323, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11323, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__11324, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11323, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__11323, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__11324, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__11326 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__11326));
  clojure.browser.net.register_service.call(null, repl_connection__11326, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__11326, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__11326, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__11326, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("hlisp.repl");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
goog.provide("jayq.util");
goog.require("cljs.core");
jayq.util.map__GT_js = function map__GT_js(m) {
  var out__64908 = {};
  var G__64909__64910 = cljs.core.seq.call(null, m);
  if(G__64909__64910) {
    var G__64912__64914 = cljs.core.first.call(null, G__64909__64910);
    var vec__64913__64915 = G__64912__64914;
    var k__64916 = cljs.core.nth.call(null, vec__64913__64915, 0, null);
    var v__64917 = cljs.core.nth.call(null, vec__64913__64915, 1, null);
    var G__64909__64918 = G__64909__64910;
    var G__64912__64919 = G__64912__64914;
    var G__64909__64920 = G__64909__64918;
    while(true) {
      var vec__64921__64922 = G__64912__64919;
      var k__64923 = cljs.core.nth.call(null, vec__64921__64922, 0, null);
      var v__64924 = cljs.core.nth.call(null, vec__64921__64922, 1, null);
      var G__64909__64925 = G__64909__64920;
      out__64908[cljs.core.name.call(null, k__64923)] = v__64924;
      var temp__3974__auto____64926 = cljs.core.next.call(null, G__64909__64925);
      if(temp__3974__auto____64926) {
        var G__64909__64927 = temp__3974__auto____64926;
        var G__64928 = cljs.core.first.call(null, G__64909__64927);
        var G__64929 = G__64909__64927;
        G__64912__64919 = G__64928;
        G__64909__64920 = G__64929;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return out__64908
};
jayq.util.wait = function wait(ms, func) {
  return setTimeout(func, ms)
};
jayq.util.log = function() {
  var log__delegate = function(v, text) {
    var vs__64931 = cljs.core.string_QMARK_.call(null, v) ? cljs.core.apply.call(null, cljs.core.str, v, text) : v;
    return console.log(vs__64931)
  };
  var log = function(v, var_args) {
    var text = null;
    if(goog.isDef(var_args)) {
      text = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return log__delegate.call(this, v, text)
  };
  log.cljs$lang$maxFixedArity = 1;
  log.cljs$lang$applyTo = function(arglist__64932) {
    var v = cljs.core.first(arglist__64932);
    var text = cljs.core.rest(arglist__64932);
    return log__delegate(v, text)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
jayq.util.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.symbol_QMARK_.call(null, x)) {
        return cljs.core.name.call(null, cljs.core.name.call(null, x))
      }else {
        if(cljs.core.map_QMARK_.call(null, x)) {
          return cljs.core.reduce.call(null, function(m, p__64938) {
            var vec__64939__64940 = p__64938;
            var k__64941 = cljs.core.nth.call(null, vec__64939__64940, 0, null);
            var v__64942 = cljs.core.nth.call(null, vec__64939__64940, 1, null);
            return cljs.core.assoc.call(null, m, clj__GT_js.call(null, k__64941), clj__GT_js.call(null, v__64942))
          }, cljs.core.ObjMap.EMPTY, x).strobj
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
goog.provide("hlisp.hexp");
goog.require("cljs.core");
hlisp.hexp.make_hexp = function make_hexp(tag) {
  return cljs.core.ObjMap.fromObject(["\ufdd0'children", "\ufdd0'text", "\ufdd0'data", "\ufdd0'attr-params", "\ufdd0'proc", "\ufdd0'env", "\ufdd0'params", "\ufdd0'attrs", "\ufdd0'tag"], {"\ufdd0'children":cljs.core.PersistentVector.EMPTY, "\ufdd0'text":"", "\ufdd0'data":null, "\ufdd0'attr-params":cljs.core.ObjMap.EMPTY, "\ufdd0'proc":null, "\ufdd0'env":cljs.core.ObjMap.EMPTY, "\ufdd0'params":cljs.core.PersistentVector.EMPTY, "\ufdd0'attrs":cljs.core.ObjMap.EMPTY, "\ufdd0'tag":tag})
};
hlisp.hexp.make_node_hexp = function make_node_hexp(tag, attrs, children) {
  return cljs.core.assoc.call(null, hlisp.hexp.make_hexp.call(null, tag), "\ufdd0'attrs", attrs, "\ufdd0'children", children)
};
hlisp.hexp.make_seq_hexp = function make_seq_hexp(items) {
  return hlisp.hexp.make_node_hexp.call(null, "val:seq", cljs.core.ObjMap.EMPTY, cljs.core.vec.call(null, items))
};
hlisp.hexp.make_text_hexp = function make_text_hexp(tag, text) {
  return cljs.core.assoc.call(null, hlisp.hexp.make_hexp.call(null, tag), "\ufdd0'text", [cljs.core.str(text)].join(""))
};
hlisp.hexp.make_prim_hexp = function make_prim_hexp(proc) {
  return cljs.core.assoc.call(null, hlisp.hexp.make_hexp.call(null, "\ufdd0'prim"), "\ufdd0'proc", proc)
};
hlisp.hexp.make_proc_hexp = function make_proc_hexp(attr_params, params, env, proc) {
  return cljs.core.assoc.call(null, hlisp.hexp.make_hexp.call(null, "\ufdd0'proc"), "\ufdd0'attr-params", attr_params, "\ufdd0'params", params, "\ufdd0'env", env, "\ufdd0'proc", proc)
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____10801 = reader;
    if(and__3822__auto____10801) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____10801
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2363__auto____10802 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____10803 = cljs.reader.read_char[goog.typeOf(x__2363__auto____10802)];
      if(or__3824__auto____10803) {
        return or__3824__auto____10803
      }else {
        var or__3824__auto____10804 = cljs.reader.read_char["_"];
        if(or__3824__auto____10804) {
          return or__3824__auto____10804
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____10809 = reader;
    if(and__3822__auto____10809) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____10809
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2363__auto____10810 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____10811 = cljs.reader.unread[goog.typeOf(x__2363__auto____10810)];
      if(or__3824__auto____10811) {
        return or__3824__auto____10811
      }else {
        var or__3824__auto____10812 = cljs.reader.unread["_"];
        if(or__3824__auto____10812) {
          return or__3824__auto____10812
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__10813 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__10813.buffer_atom))) {
    var idx__10814 = cljs.core.deref.call(null, this__10813.index_atom);
    cljs.core.swap_BANG_.call(null, this__10813.index_atom, cljs.core.inc);
    return this__10813.s[idx__10814]
  }else {
    var buf__10815 = cljs.core.deref.call(null, this__10813.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__10813.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__10815)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__10816 = this;
  return cljs.core.swap_BANG_.call(null, this__10816.buffer_atom, function(p1__10796_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__10796_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____10818 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____10818)) {
    return or__3824__auto____10818
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____10823 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____10823) {
    return or__3824__auto____10823
  }else {
    var and__3822__auto____10825 = function() {
      var or__3824__auto____10824 = "+" === initch;
      if(or__3824__auto____10824) {
        return or__3824__auto____10824
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____10825)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__10826 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__10826);
        return next_ch__10826
      }())
    }else {
      return and__3822__auto____10825
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__10827) {
    var rdr = cljs.core.first(arglist__10827);
    var msg = cljs.core.rest(arglist__10827);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____10831 = !(ch === "#");
  if(and__3822__auto____10831) {
    var and__3822__auto____10832 = !(ch === "'");
    if(and__3822__auto____10832) {
      var and__3822__auto____10833 = !(ch === ":");
      if(and__3822__auto____10833) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____10833
      }
    }else {
      return and__3822__auto____10832
    }
  }else {
    return and__3822__auto____10831
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__10838 = new goog.string.StringBuffer(initch);
  var ch__10839 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____10840 = ch__10839 == null;
      if(or__3824__auto____10840) {
        return or__3824__auto____10840
      }else {
        var or__3824__auto____10841 = cljs.reader.whitespace_QMARK_.call(null, ch__10839);
        if(or__3824__auto____10841) {
          return or__3824__auto____10841
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__10839)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__10839);
      return sb__10838.toString()
    }else {
      var G__10842 = function() {
        sb__10838.append(ch__10839);
        return sb__10838
      }();
      var G__10843 = cljs.reader.read_char.call(null, rdr);
      sb__10838 = G__10842;
      ch__10839 = G__10843;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__10847 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____10848 = ch__10847 === "n";
      if(or__3824__auto____10848) {
        return or__3824__auto____10848
      }else {
        var or__3824__auto____10849 = ch__10847 === "r";
        if(or__3824__auto____10849) {
          return or__3824__auto____10849
        }else {
          return ch__10847 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__10851 = re.exec(s);
  if(matches__10851 == null) {
    return null
  }else {
    if(matches__10851.length === 1) {
      return matches__10851[0]
    }else {
      return matches__10851
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__10859 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__10860 = groups__10859[2];
  if(!function() {
    var or__3824__auto____10861 = group3__10860 == null;
    if(or__3824__auto____10861) {
      return or__3824__auto____10861
    }else {
      return group3__10860.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__10862 = "-" === groups__10859[1] ? -1 : 1;
    var a__10863 = cljs.core.truth_(groups__10859[3]) ? [groups__10859[3], 10] : cljs.core.truth_(groups__10859[4]) ? [groups__10859[4], 16] : cljs.core.truth_(groups__10859[5]) ? [groups__10859[5], 8] : cljs.core.truth_(groups__10859[7]) ? [groups__10859[7], parseInt(groups__10859[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__10864 = a__10863[0];
    var radix__10865 = a__10863[1];
    if(n__10864 == null) {
      return null
    }else {
      return negate__10862 * parseInt(n__10864, radix__10865)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__10869 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__10870 = groups__10869[1];
  var denominator__10871 = groups__10869[2];
  return parseInt(numinator__10870) / parseInt(denominator__10871)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__10874 = re.exec(s);
  if(function() {
    var and__3822__auto____10875 = !(matches__10874 == null);
    if(and__3822__auto____10875) {
      return matches__10874[0] === s
    }else {
      return and__3822__auto____10875
    }
  }()) {
    if(matches__10874.length === 1) {
      return matches__10874[0]
    }else {
      return matches__10874
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__10877 = parseInt(code_str, 16);
  return String.fromCharCode(code__10877)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__10880 = cljs.reader.read_char.call(null, reader);
  var mapresult__10881 = cljs.reader.escape_char_map.call(null, ch__10880);
  if(cljs.core.truth_(mapresult__10881)) {
    return mapresult__10881
  }else {
    if(ch__10880 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__10880, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__10880 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__10880, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__10880)) {
          return String.fromCharCode(ch__10880)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__10880)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__10883 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__10883))) {
      var G__10884 = cljs.reader.read_char.call(null, rdr);
      ch__10883 = G__10884;
      continue
    }else {
      return ch__10883
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__10891 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__10892 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__10892)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__10892) {
      return cljs.core.persistent_BANG_.call(null, a__10891)
    }else {
      var temp__3971__auto____10893 = cljs.reader.macros.call(null, ch__10892);
      if(cljs.core.truth_(temp__3971__auto____10893)) {
        var macrofn__10894 = temp__3971__auto____10893;
        var mret__10895 = macrofn__10894.call(null, rdr, ch__10892);
        var G__10897 = mret__10895 === rdr ? a__10891 : cljs.core.conj_BANG_.call(null, a__10891, mret__10895);
        a__10891 = G__10897;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__10892);
        var o__10896 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__10898 = o__10896 === rdr ? a__10891 : cljs.core.conj_BANG_.call(null, a__10891, o__10896);
        a__10891 = G__10898;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__10903 = cljs.reader.read_char.call(null, rdr);
  var dm__10904 = cljs.reader.dispatch_macros.call(null, ch__10903);
  if(cljs.core.truth_(dm__10904)) {
    return dm__10904.call(null, rdr, _)
  }else {
    var temp__3971__auto____10905 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__10903);
    if(cljs.core.truth_(temp__3971__auto____10905)) {
      var obj__10906 = temp__3971__auto____10905;
      return obj__10906
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__10903)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__10908 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__10908))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__10908)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__10915 = new goog.string.StringBuffer(initch);
  var ch__10916 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____10917 = ch__10916 == null;
      if(or__3824__auto____10917) {
        return or__3824__auto____10917
      }else {
        var or__3824__auto____10918 = cljs.reader.whitespace_QMARK_.call(null, ch__10916);
        if(or__3824__auto____10918) {
          return or__3824__auto____10918
        }else {
          return cljs.reader.macros.call(null, ch__10916)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__10916);
      var s__10919 = buffer__10915.toString();
      var or__3824__auto____10920 = cljs.reader.match_number.call(null, s__10919);
      if(cljs.core.truth_(or__3824__auto____10920)) {
        return or__3824__auto____10920
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__10919, "]")
      }
    }else {
      var G__10921 = function() {
        buffer__10915.append(ch__10916);
        return buffer__10915
      }();
      var G__10922 = cljs.reader.read_char.call(null, reader);
      buffer__10915 = G__10921;
      ch__10916 = G__10922;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__10925 = new goog.string.StringBuffer;
  var ch__10926 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__10926 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__10926) {
        var G__10927 = function() {
          buffer__10925.append(cljs.reader.escape_char.call(null, buffer__10925, reader));
          return buffer__10925
        }();
        var G__10928 = cljs.reader.read_char.call(null, reader);
        buffer__10925 = G__10927;
        ch__10926 = G__10928;
        continue
      }else {
        if('"' === ch__10926) {
          return buffer__10925.toString()
        }else {
          if("\ufdd0'default") {
            var G__10929 = function() {
              buffer__10925.append(ch__10926);
              return buffer__10925
            }();
            var G__10930 = cljs.reader.read_char.call(null, reader);
            buffer__10925 = G__10929;
            ch__10926 = G__10930;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__10932 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__10932, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__10932, 0, token__10932.indexOf("/")), cljs.core.subs.call(null, token__10932, token__10932.indexOf("/") + 1, token__10932.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__10932, cljs.core.symbol.call(null, token__10932))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__10942 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__10943 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__10942);
  var token__10944 = a__10943[0];
  var ns__10945 = a__10943[1];
  var name__10946 = a__10943[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____10948 = function() {
      var and__3822__auto____10947 = !(void 0 === ns__10945);
      if(and__3822__auto____10947) {
        return ns__10945.substring(ns__10945.length - 2, ns__10945.length) === ":/"
      }else {
        return and__3822__auto____10947
      }
    }();
    if(cljs.core.truth_(or__3824__auto____10948)) {
      return or__3824__auto____10948
    }else {
      var or__3824__auto____10949 = name__10946[name__10946.length - 1] === ":";
      if(or__3824__auto____10949) {
        return or__3824__auto____10949
      }else {
        return!(token__10944.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__10944)
  }else {
    if(function() {
      var and__3822__auto____10950 = !(ns__10945 == null);
      if(and__3822__auto____10950) {
        return ns__10945.length > 0
      }else {
        return and__3822__auto____10950
      }
    }()) {
      return cljs.core.keyword.call(null, ns__10945.substring(0, ns__10945.indexOf("/")), name__10946)
    }else {
      return cljs.core.keyword.call(null, token__10944)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__10956 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__10956)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__10957 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__10958__10959 = o__10957;
    if(G__10958__10959) {
      if(function() {
        var or__3824__auto____10960 = G__10958__10959.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____10960) {
          return or__3824__auto____10960
        }else {
          return G__10958__10959.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__10958__10959.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__10958__10959)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__10958__10959)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__10957, cljs.core.merge.call(null, cljs.core.meta.call(null, o__10957), m__10956))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__10964 = cljs.reader.read_char.call(null, reader);
    if(ch__10964 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__10964)) {
        var G__10967 = reader;
        var G__10968 = eof_is_error;
        var G__10969 = sentinel;
        var G__10970 = is_recursive;
        reader = G__10967;
        eof_is_error = G__10968;
        sentinel = G__10969;
        is_recursive = G__10970;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__10964)) {
          var G__10971 = cljs.reader.read_comment.call(null, reader, ch__10964);
          var G__10972 = eof_is_error;
          var G__10973 = sentinel;
          var G__10974 = is_recursive;
          reader = G__10971;
          eof_is_error = G__10972;
          sentinel = G__10973;
          is_recursive = G__10974;
          continue
        }else {
          if("\ufdd0'else") {
            var f__10965 = cljs.reader.macros.call(null, ch__10964);
            var res__10966 = cljs.core.truth_(f__10965) ? f__10965.call(null, reader, ch__10964) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__10964) ? cljs.reader.read_number.call(null, reader, ch__10964) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__10964) : null;
            if(res__10966 === reader) {
              var G__10975 = reader;
              var G__10976 = eof_is_error;
              var G__10977 = sentinel;
              var G__10978 = is_recursive;
              reader = G__10975;
              eof_is_error = G__10976;
              sentinel = G__10977;
              is_recursive = G__10978;
              continue
            }else {
              return res__10966
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__10980 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__10980, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__10982 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__10982.getLength() < width) {
            var G__10983 = b__10982.append("0");
            b__10982 = G__10983;
            continue
          }else {
            return b__10982.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____10986 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____10986)) {
    var or__3824__auto____10987 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____10987)) {
      return or__3824__auto____10987
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____10986
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__10992 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__10993 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__10993 : dim_norm__10992, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__10994 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__10996 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____10995 = low <= n;
      if(and__3822__auto____10995) {
        return n <= high
      }else {
        return and__3822__auto____10995
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____10997 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__10994, ts)));
    if(cljs.core.truth_(temp__3974__auto____10997)) {
      var vec__10998__11001 = temp__3974__auto____10997;
      var vec__10999__11002 = cljs.core.nth.call(null, vec__10998__11001, 0, null);
      var ___11003 = cljs.core.nth.call(null, vec__10999__11002, 0, null);
      var years__11004 = cljs.core.nth.call(null, vec__10999__11002, 1, null);
      var months__11005 = cljs.core.nth.call(null, vec__10999__11002, 2, null);
      var days__11006 = cljs.core.nth.call(null, vec__10999__11002, 3, null);
      var hours__11007 = cljs.core.nth.call(null, vec__10999__11002, 4, null);
      var minutes__11008 = cljs.core.nth.call(null, vec__10999__11002, 5, null);
      var seconds__11009 = cljs.core.nth.call(null, vec__10999__11002, 6, null);
      var milliseconds__11010 = cljs.core.nth.call(null, vec__10999__11002, 7, null);
      var vec__11000__11011 = cljs.core.nth.call(null, vec__10998__11001, 1, null);
      var ___11012 = cljs.core.nth.call(null, vec__11000__11011, 0, null);
      var ___11013 = cljs.core.nth.call(null, vec__11000__11011, 1, null);
      var ___11014 = cljs.core.nth.call(null, vec__11000__11011, 2, null);
      var V__11015 = vec__10998__11001;
      var vec__11016__11019 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__10991_SHARP_) {
          return parseInt(p1__10991_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__10989_SHARP_, p2__10988_SHARP_) {
        return cljs.core.update_in.call(null, p2__10988_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__10989_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__10990_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__10990_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__11015));
      var vec__11017__11020 = cljs.core.nth.call(null, vec__11016__11019, 0, null);
      var ___11021 = cljs.core.nth.call(null, vec__11017__11020, 0, null);
      var y__11022 = cljs.core.nth.call(null, vec__11017__11020, 1, null);
      var mo__11023 = cljs.core.nth.call(null, vec__11017__11020, 2, null);
      var d__11024 = cljs.core.nth.call(null, vec__11017__11020, 3, null);
      var h__11025 = cljs.core.nth.call(null, vec__11017__11020, 4, null);
      var m__11026 = cljs.core.nth.call(null, vec__11017__11020, 5, null);
      var s__11027 = cljs.core.nth.call(null, vec__11017__11020, 6, null);
      var ms__11028 = cljs.core.nth.call(null, vec__11017__11020, 7, null);
      var vec__11018__11029 = cljs.core.nth.call(null, vec__11016__11019, 1, null);
      var offset_sign__11030 = cljs.core.nth.call(null, vec__11018__11029, 0, null);
      var offset_hours__11031 = cljs.core.nth.call(null, vec__11018__11029, 1, null);
      var offset_minutes__11032 = cljs.core.nth.call(null, vec__11018__11029, 2, null);
      var offset__11033 = offset_sign__11030 * (offset_hours__11031 * 60 + offset_minutes__11032);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__11004) ? 1970 : y__11022, cljs.core.not.call(null, months__11005) ? 1 : check__10996.call(null, 1, mo__11023, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__11006) ? 1 : check__10996.call(null, 1, d__11024, cljs.reader.days_in_month.call(null, mo__11023, cljs.reader.leap_year_QMARK_.call(null, y__11022)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__11007) ? 0 : check__10996.call(null, 0, h__11025, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__11008) ? 0 : check__10996.call(null, 0, m__11026, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__11009) ? 0 : check__10996.call(null, 0, s__11027, cljs.core._EQ_.call(null, m__11026, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__11010) ? 0 : check__10996.call(null, 
      0, ms__11028, 999, "timestamp millisecond field must be in range 0..999"), offset__11033], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____11045 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____11045)) {
    var vec__11046__11047 = temp__3971__auto____11045;
    var years__11048 = cljs.core.nth.call(null, vec__11046__11047, 0, null);
    var months__11049 = cljs.core.nth.call(null, vec__11046__11047, 1, null);
    var days__11050 = cljs.core.nth.call(null, vec__11046__11047, 2, null);
    var hours__11051 = cljs.core.nth.call(null, vec__11046__11047, 3, null);
    var minutes__11052 = cljs.core.nth.call(null, vec__11046__11047, 4, null);
    var seconds__11053 = cljs.core.nth.call(null, vec__11046__11047, 5, null);
    var ms__11054 = cljs.core.nth.call(null, vec__11046__11047, 6, null);
    var offset__11055 = cljs.core.nth.call(null, vec__11046__11047, 7, null);
    return new Date(Date.UTC(years__11048, months__11049 - 1, days__11050, hours__11051, minutes__11052, seconds__11053, ms__11054) - offset__11055 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__11059 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____11060 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__11059), null);
  if(cljs.core.truth_(temp__3971__auto____11060)) {
    var pfn__11061 = temp__3971__auto____11060;
    return pfn__11061.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__11059), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__11064 = cljs.core.name.call(null, tag);
  var old_parser__11065 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__11064, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__11064, f);
  return old_parser__11065
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__11068 = cljs.core.name.call(null, tag);
  var old_parser__11069 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__11068, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__11068);
  return old_parser__11069
};
goog.provide("hlisp.reader");
goog.require("cljs.core");
goog.require("cljs.reader");
hlisp.reader.empty_attrs = cljs.core.with_meta(cljs.core.list(cljs.core.List.EMPTY), cljs.core.hash_map("\ufdd0'line", 7));
hlisp.reader.valid_node_expr_QMARK_ = function valid_node_expr_QMARK_(expr) {
  var and__3822__auto____6742 = cljs.core.seq_QMARK_.call(null, expr);
  if(and__3822__auto____6742) {
    return cljs.core.symbol_QMARK_.call(null, cljs.core.first.call(null, expr))
  }else {
    return and__3822__auto____6742
  }
};
hlisp.reader.valid_attrlist_QMARK_ = function valid_attrlist_QMARK_(attrs) {
  var and__3822__auto____6744 = cljs.core.seq_QMARK_.call(null, attrs);
  if(and__3822__auto____6744) {
    return cljs.core.seq_QMARK_.call(null, cljs.core.first.call(null, attrs))
  }else {
    return and__3822__auto____6744
  }
};
hlisp.reader.text_node = function text_node(txt) {
  return cljs.core.list.call(null, cljs.core.symbol.call(null, "#text"), [cljs.core.str(txt)].join(""))
};
hlisp.reader.parse_symbol = function parse_symbol(expr) {
  if(cljs.core.symbol_QMARK_.call(null, expr)) {
    return cljs.core.list.call(null, expr, hlisp.reader.empty_attrs)
  }else {
    return null
  }
};
hlisp.reader.parse_text_node = function parse_text_node(expr) {
  if(cljs.core.string_QMARK_.call(null, expr)) {
    return hlisp.reader.text_node.call(null, expr)
  }else {
    return null
  }
};
hlisp.reader.parse_seqable_literal = function parse_seqable_literal(pred, valtag) {
  return function(expr) {
    if(cljs.core.truth_(pred.call(null, expr))) {
      var head__6749 = cljs.core.first.call(null, expr);
      var tail__6750 = cljs.core.rest.call(null, expr);
      var attrs__6751 = cljs.core.truth_(hlisp.reader.valid_attrlist_QMARK_.call(null, head__6749)) ? head__6749 : hlisp.reader.empty_attrs;
      var items__6752 = cljs.core._EQ_.call(null, hlisp.reader.empty_attrs, attrs__6751) ? expr : tail__6750;
      return cljs.core.concat.call(null, cljs.core.list.call(null, valtag, attrs__6751), cljs.core.map.call(null, hlisp.reader.read_form, items__6752))
    }else {
      return null
    }
  }
};
hlisp.reader.parse_atomic_literal = function parse_atomic_literal(pred, valtag) {
  return function(expr) {
    if(cljs.core.seq_QMARK_.call(null, expr)) {
      var vec__6760__6761 = expr;
      var tag__6762 = cljs.core.nth.call(null, vec__6760__6761, 0, null);
      var thing__6763 = cljs.core.nth.call(null, vec__6760__6761, 1, null);
      var and__3822__auto____6764 = cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, expr));
      if(and__3822__auto____6764) {
        var and__3822__auto____6765 = cljs.core._EQ_.call(null, "\ufdd1'quote", tag__6762);
        if(and__3822__auto____6765) {
          var and__3822__auto____6766 = pred.call(null, thing__6763);
          if(cljs.core.truth_(and__3822__auto____6766)) {
            return cljs.core.list.call(null, valtag, hlisp.reader.empty_attrs, hlisp.reader.text_node.call(null, [cljs.core.str(thing__6763)].join("")))
          }else {
            return and__3822__auto____6766
          }
        }else {
          return and__3822__auto____6765
        }
      }else {
        return and__3822__auto____6764
      }
    }else {
      return null
    }
  }
};
hlisp.reader.parse_map_literal = function parse_map_literal(expr) {
  var temp__3974__auto____6769 = hlisp.reader.parse_seqable_literal.call(null, cljs.core.map_QMARK_, "\ufdd1'val:map").call(null, expr);
  if(cljs.core.truth_(temp__3974__auto____6769)) {
    var m__6770 = temp__3974__auto____6769;
    return cljs.core.concat.call(null, cljs.core.take.call(null, 2, m__6770), cljs.core.mapcat.call(null, cljs.core.partial.call(null, cljs.core.drop, 2), cljs.core.drop.call(null, 2, m__6770)))
  }else {
    return null
  }
};
hlisp.reader.parse_set_literal = function parse_set_literal(expr) {
  return hlisp.reader.parse_seqable_literal.call(null, cljs.core.set_QMARK_, "\ufdd1'val:set").call(null, expr)
};
hlisp.reader.parse_vector_literal = function parse_vector_literal(expr) {
  return hlisp.reader.parse_seqable_literal.call(null, cljs.core.vector_QMARK_, "\ufdd1'val:vec").call(null, expr)
};
hlisp.reader.parse_string_literal = function parse_string_literal(expr) {
  return hlisp.reader.parse_atomic_literal.call(null, cljs.core.string_QMARK_, "\ufdd1'val:str").call(null, expr)
};
hlisp.reader.parse_number_literal = function parse_number_literal(expr) {
  return hlisp.reader.parse_atomic_literal.call(null, cljs.core.number_QMARK_, "\ufdd1'val:num").call(null, expr)
};
hlisp.reader.parse_node = function parse_node(expr) {
  if(cljs.core.truth_(hlisp.reader.valid_node_expr_QMARK_.call(null, expr))) {
    var vec__6776__6777 = expr;
    var tag__6778 = cljs.core.nth.call(null, vec__6776__6777, 0, null);
    var attrs__6779 = cljs.core.nth.call(null, vec__6776__6777, 1, null);
    var children__6780 = cljs.core.nthnext.call(null, vec__6776__6777, 2);
    if(cljs.core.truth_(hlisp.reader.valid_attrlist_QMARK_.call(null, attrs__6779))) {
      return cljs.core.concat.call(null, cljs.core.list.call(null, tag__6778, attrs__6779), cljs.core.map.call(null, hlisp.reader.read_form, children__6780))
    }else {
      return parse_node.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.concat.call(null, cljs.core.list.call(null, tag__6778, hlisp.reader.empty_attrs, attrs__6779), children__6780)))
    }
  }else {
    return null
  }
};
hlisp.reader.read_form = function read_form(expr) {
  var or__3824__auto____6789 = hlisp.reader.parse_symbol.call(null, expr);
  if(cljs.core.truth_(or__3824__auto____6789)) {
    return or__3824__auto____6789
  }else {
    var or__3824__auto____6790 = hlisp.reader.parse_text_node.call(null, expr);
    if(cljs.core.truth_(or__3824__auto____6790)) {
      return or__3824__auto____6790
    }else {
      var or__3824__auto____6791 = hlisp.reader.parse_map_literal.call(null, expr);
      if(cljs.core.truth_(or__3824__auto____6791)) {
        return or__3824__auto____6791
      }else {
        var or__3824__auto____6792 = hlisp.reader.parse_set_literal.call(null, expr);
        if(cljs.core.truth_(or__3824__auto____6792)) {
          return or__3824__auto____6792
        }else {
          var or__3824__auto____6793 = hlisp.reader.parse_vector_literal.call(null, expr);
          if(cljs.core.truth_(or__3824__auto____6793)) {
            return or__3824__auto____6793
          }else {
            var or__3824__auto____6794 = hlisp.reader.parse_string_literal.call(null, expr);
            if(cljs.core.truth_(or__3824__auto____6794)) {
              return or__3824__auto____6794
            }else {
              var or__3824__auto____6795 = hlisp.reader.parse_number_literal.call(null, expr);
              if(cljs.core.truth_(or__3824__auto____6795)) {
                return or__3824__auto____6795
              }else {
                var or__3824__auto____6796 = hlisp.reader.parse_node.call(null, expr);
                if(cljs.core.truth_(or__3824__auto____6796)) {
                  return or__3824__auto____6796
                }else {
                  if(false) {
                    return null
                  }else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("read-form: "), cljs.core.str(expr), cljs.core.str(" isn't a valid expression")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
hlisp.reader.read_forms = function read_forms(forms) {
  return cljs.core.map.call(null, hlisp.reader.read_form, forms)
};
hlisp.reader.read_string = function read_string(s) {
  return hlisp.reader.read_forms.call(null, cljs.reader.read_string.call(null, [cljs.core.str("("), cljs.core.str(s), cljs.core.str("\n)")].join("")))
};
goog.provide("hlisp.util");
goog.require("cljs.core");
hlisp.util.zipfn = cljs.core.partial.call(null, cljs.core.partial, cljs.core.map, function() {
  var G__234539__delegate = function(p1__234535_SHARP_, rest__234536_SHARP_) {
    return cljs.core.apply.call(null, p1__234535_SHARP_, rest__234536_SHARP_)
  };
  var G__234539 = function(p1__234535_SHARP_, var_args) {
    var rest__234536_SHARP_ = null;
    if(goog.isDef(var_args)) {
      rest__234536_SHARP_ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__234539__delegate.call(this, p1__234535_SHARP_, rest__234536_SHARP_)
  };
  G__234539.cljs$lang$maxFixedArity = 1;
  G__234539.cljs$lang$applyTo = function(arglist__234540) {
    var p1__234535_SHARP_ = cljs.core.first(arglist__234540);
    var rest__234536_SHARP_ = cljs.core.rest(arglist__234540);
    return G__234539__delegate(p1__234535_SHARP_, rest__234536_SHARP_)
  };
  G__234539.cljs$lang$arity$variadic = G__234539__delegate;
  return G__234539
}());
hlisp.util.funroll_body = cljs.core.partial.call(null, cljs.core.reduce, function(p1__234537_SHARP_, p2__234538_SHARP_) {
  return function() {
    var G__234542__delegate = function(args) {
      cljs.core.apply.call(null, p1__234537_SHARP_, args);
      return cljs.core.apply.call(null, p2__234538_SHARP_, args)
    };
    var G__234542 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__234542__delegate.call(this, args)
    };
    G__234542.cljs$lang$maxFixedArity = 0;
    G__234542.cljs$lang$applyTo = function(arglist__234543) {
      var args = cljs.core.seq(arglist__234543);
      return G__234542__delegate(args)
    };
    G__234542.cljs$lang$arity$variadic = G__234542__delegate;
    return G__234542
  }()
});
hlisp.util.funroll_seq = function funroll_seq(procs) {
  return function() {
    var G__234544__delegate = function(args) {
      return cljs.core.map.call(null, function(p1__234541_SHARP_) {
        return cljs.core.apply.call(null, p1__234541_SHARP_, args)
      }, procs)
    };
    var G__234544 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__234544__delegate.call(this, args)
    };
    G__234544.cljs$lang$maxFixedArity = 0;
    G__234544.cljs$lang$applyTo = function(arglist__234545) {
      var args = cljs.core.seq(arglist__234545);
      return G__234544__delegate(args)
    };
    G__234544.cljs$lang$arity$variadic = G__234544__delegate;
    return G__234544
  }()
};
hlisp.util.tee = function tee(arg) {
  console.log(";;", [cljs.core.str(arg)].join(""));
  return arg
};
goog.provide("hlisp.compiler");
goog.require("cljs.core");
goog.require("hlisp.util");
goog.require("hlisp.hexp");
goog.require("hlisp.hexp");
goog.require("hlisp.util");
hlisp.compiler.read_attrs_pairs = function read_attrs_pairs(s) {
  return cljs.core.map.call(null, function(p1__6106_SHARP_) {
    return cljs.core.list.call(null, cljs.core.first.call(null, p1__6106_SHARP_), cljs.core.string_QMARK_.call(null, cljs.core.second.call(null, p1__6106_SHARP_)) ? cljs.core.second.call(null, p1__6106_SHARP_) : "")
  }, cljs.core.filter.call(null, function(p1__6107_SHARP_) {
    return cljs.core.symbol_QMARK_.call(null, cljs.core.first.call(null, p1__6107_SHARP_))
  }, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, s, cljs.core.concat.call(null, cljs.core.rest.call(null, s), cljs.core.list.call(null, cljs.core.last.call(null, s)))))))
};
hlisp.compiler.read_attrs = function read_attrs(s) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.vec, hlisp.compiler.read_attrs_pairs.call(null, s))))
};
hlisp.compiler.compile_text_hexp = function compile_text_hexp(s) {
  var vec__6113__6114 = s;
  var tagsym__6115 = cljs.core.nth.call(null, vec__6113__6114, 0, null);
  var text__6116 = cljs.core.nth.call(null, vec__6113__6114, 1, null);
  var tag__6117 = [cljs.core.str(tagsym__6115)].join("");
  if(cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, tag__6117))) {
    return hlisp.hexp.make_text_hexp.call(null, tag__6117, text__6116)
  }else {
    return null
  }
};
hlisp.compiler.compile_node_hexp = function compile_node_hexp(s) {
  var vec__6128__6131 = s;
  var tagsym__6132 = cljs.core.nth.call(null, vec__6128__6131, 0, null);
  var vec__6129__6133 = cljs.core.nth.call(null, vec__6128__6131, 1, null);
  var vec__6130__6134 = cljs.core.nth.call(null, vec__6129__6133, 0, null);
  var attrlist__6135 = cljs.core.nthnext.call(null, vec__6130__6134, 0);
  var children__6136 = cljs.core.nthnext.call(null, vec__6128__6131, 2);
  var tag__6137 = [cljs.core.str(tagsym__6132)].join("");
  if(cljs.core.not_EQ_.call(null, "#", cljs.core.first.call(null, tag__6137))) {
    return hlisp.hexp.make_node_hexp.call(null, tag__6137, hlisp.compiler.read_attrs.call(null, attrlist__6135), cljs.core.map.call(null, hlisp.compiler.compile_form, children__6136))
  }else {
    return null
  }
};
hlisp.compiler.compile_form = function compile_form(s) {
  var or__3824__auto____6140 = hlisp.compiler.compile_text_hexp.call(null, s);
  if(cljs.core.truth_(or__3824__auto____6140)) {
    return or__3824__auto____6140
  }else {
    var or__3824__auto____6141 = hlisp.compiler.compile_node_hexp.call(null, s);
    if(cljs.core.truth_(or__3824__auto____6141)) {
      return or__3824__auto____6141
    }else {
      if(false) {
        return null
      }else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("compile: "), cljs.core.str(s), cljs.core.str(" is not a valid expression")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
      }
    }
  }
};
hlisp.compiler.compile_forms = function compile_forms(forms) {
  return cljs.core.map.call(null, hlisp.compiler.compile_form, forms)
};
hlisp.compiler.decompile_text_hexp = function decompile_text_hexp(hexp) {
  var map__6147__6148 = hexp;
  var map__6147__6149 = cljs.core.seq_QMARK_.call(null, map__6147__6148) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6147__6148) : map__6147__6148;
  var text__6150 = cljs.core._lookup.call(null, map__6147__6149, "\ufdd0'text", null);
  var tag__6151 = cljs.core._lookup.call(null, map__6147__6149, "\ufdd0'tag", null);
  if(cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, tag__6151))) {
    return cljs.core.list.call(null, cljs.core.symbol.call(null, tag__6151), text__6150)
  }else {
    return null
  }
};
hlisp.compiler.decompile_node_hexp = function decompile_node_hexp(hexp) {
  var map__6158__6159 = hexp;
  var map__6158__6160 = cljs.core.seq_QMARK_.call(null, map__6158__6159) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6158__6159) : map__6158__6159;
  var children__6161 = cljs.core._lookup.call(null, map__6158__6160, "\ufdd0'children", null);
  var attrs__6162 = cljs.core._lookup.call(null, map__6158__6160, "\ufdd0'attrs", null);
  var tag__6163 = cljs.core._lookup.call(null, map__6158__6160, "\ufdd0'tag", null);
  if(cljs.core.string_QMARK_.call(null, tag__6163)) {
    return cljs.core.concat.call(null, cljs.core.list.call(null, cljs.core.symbol.call(null, tag__6163), cljs.core.list.call(null, cljs.core.mapcat.call(null, hlisp.util.zipfn.call(null, cljs.core.PersistentVector.fromArray([cljs.core.symbol, cljs.core.str], true)), attrs__6162))), cljs.core.map.call(null, hlisp.compiler.decompile_hexp, children__6161))
  }else {
    return null
  }
};
hlisp.compiler.decompile_hexp = function decompile_hexp(hexp) {
  var or__3824__auto____6165 = hlisp.compiler.decompile_text_hexp.call(null, hexp);
  if(cljs.core.truth_(or__3824__auto____6165)) {
    return or__3824__auto____6165
  }else {
    return hlisp.compiler.decompile_node_hexp.call(null, hexp)
  }
};
hlisp.compiler.decompile_hexps = function decompile_hexps(hexps) {
  return cljs.core.map.call(null, hlisp.compiler.decompile_hexp, hexps)
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__6636 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__6636, cljs.core.remove.call(null, function(p1__6634_SHARP_) {
    return max__6636 === p1__6634_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__6640__delegate = function(s1, s2, sets) {
      var bubbled_sets__6639 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__6639), cljs.core.rest.call(null, bubbled_sets__6639))
    };
    var G__6640 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6640__delegate.call(this, s1, s2, sets)
    };
    G__6640.cljs$lang$maxFixedArity = 2;
    G__6640.cljs$lang$applyTo = function(arglist__6641) {
      var s1 = cljs.core.first(arglist__6641);
      var s2 = cljs.core.first(cljs.core.next(arglist__6641));
      var sets = cljs.core.rest(cljs.core.next(arglist__6641));
      return G__6640__delegate(s1, s2, sets)
    };
    G__6640.cljs$lang$arity$variadic = G__6640__delegate;
    return G__6640
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__6644 = s2;
        var G__6645 = s1;
        s1 = G__6644;
        s2 = G__6645;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__6646__delegate = function(s1, s2, sets) {
      var bubbled_sets__6643 = clojure.set.bubble_max_key.call(null, function(p1__6637_SHARP_) {
        return-cljs.core.count.call(null, p1__6637_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__6643), cljs.core.rest.call(null, bubbled_sets__6643))
    };
    var G__6646 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6646__delegate.call(this, s1, s2, sets)
    };
    G__6646.cljs$lang$maxFixedArity = 2;
    G__6646.cljs$lang$applyTo = function(arglist__6647) {
      var s1 = cljs.core.first(arglist__6647);
      var s2 = cljs.core.first(cljs.core.next(arglist__6647));
      var sets = cljs.core.rest(cljs.core.next(arglist__6647));
      return G__6646__delegate(s1, s2, sets)
    };
    G__6646.cljs$lang$arity$variadic = G__6646__delegate;
    return G__6646
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__6648__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__6648 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6648__delegate.call(this, s1, s2, sets)
    };
    G__6648.cljs$lang$maxFixedArity = 2;
    G__6648.cljs$lang$applyTo = function(arglist__6649) {
      var s1 = cljs.core.first(arglist__6649);
      var s2 = cljs.core.first(cljs.core.next(arglist__6649));
      var sets = cljs.core.rest(cljs.core.next(arglist__6649));
      return G__6648__delegate(s1, s2, sets)
    };
    G__6648.cljs$lang$arity$variadic = G__6648__delegate;
    return G__6648
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__6650_SHARP_) {
    return cljs.core.select_keys.call(null, p1__6650_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__6658) {
    var vec__6659__6660 = p__6658;
    var old__6661 = cljs.core.nth.call(null, vec__6659__6660, 0, null);
    var new__6662 = cljs.core.nth.call(null, vec__6659__6660, 1, null);
    if(function() {
      var and__3822__auto____6663 = cljs.core.not_EQ_.call(null, old__6661, new__6662);
      if(and__3822__auto____6663) {
        return cljs.core.contains_QMARK_.call(null, m, old__6661)
      }else {
        return and__3822__auto____6663
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new__6662, cljs.core._lookup.call(null, m, old__6661, null)), old__6661)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__6651_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__6651_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__6665 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__6665, cljs.core.conj.call(null, cljs.core._lookup.call(null, m, ik__6665, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__6675) {
    var vec__6676__6677 = p__6675;
    var k__6678 = cljs.core.nth.call(null, vec__6676__6677, 0, null);
    var v__6679 = cljs.core.nth.call(null, vec__6676__6677, 1, null);
    return cljs.core.assoc.call(null, m, v__6679, k__6678)
  }, cljs.core.ObjMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3822__auto____6696 = cljs.core.seq.call(null, xrel);
      if(and__3822__auto____6696) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____6696
      }
    }()) {
      var ks__6698 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__6697__6699 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r__6700 = cljs.core.nth.call(null, vec__6697__6699, 0, null);
      var s__6701 = cljs.core.nth.call(null, vec__6697__6699, 1, null);
      var idx__6702 = clojure.set.index.call(null, r__6700, ks__6698);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__6703 = idx__6702.call(null, cljs.core.select_keys.call(null, x, ks__6698));
        if(cljs.core.truth_(found__6703)) {
          return cljs.core.reduce.call(null, function(p1__6666_SHARP_, p2__6667_SHARP_) {
            return cljs.core.conj.call(null, p1__6666_SHARP_, cljs.core.merge.call(null, p2__6667_SHARP_, x))
          }, ret, found__6703)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s__6701)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__6704__6705 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r__6706 = cljs.core.nth.call(null, vec__6704__6705, 0, null);
    var s__6707 = cljs.core.nth.call(null, vec__6704__6705, 1, null);
    var k__6708 = cljs.core.nth.call(null, vec__6704__6705, 2, null);
    var idx__6709 = clojure.set.index.call(null, r__6706, cljs.core.vals.call(null, k__6708));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__6710 = idx__6709.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__6708)), k__6708));
      if(cljs.core.truth_(found__6710)) {
        return cljs.core.reduce.call(null, function(p1__6668_SHARP_, p2__6669_SHARP_) {
          return cljs.core.conj.call(null, p1__6668_SHARP_, cljs.core.merge.call(null, p2__6669_SHARP_, x))
        }, ret, found__6710)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s__6707)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____6713 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____6713) {
    return cljs.core.every_QMARK_.call(null, function(p1__6680_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__6680_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____6713
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____6715 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____6715) {
    return cljs.core.every_QMARK_.call(null, function(p1__6711_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__6711_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____6715
  }
};
goog.provide("hlisp.interpreter");
goog.require("cljs.core");
goog.require("hlisp.compiler");
goog.require("hlisp.util");
goog.require("hlisp.hexp");
goog.require("hlisp.hexp");
goog.require("hlisp.compiler");
goog.require("hlisp.util");
goog.require("clojure.set");
hlisp.interpreter._STAR_global_env_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
hlisp.interpreter.bind_env = cljs.core.into;
hlisp.interpreter.bind_global_BANG_ = cljs.core.partial.call(null, cljs.core.swap_BANG_, hlisp.interpreter._STAR_global_env_STAR_, cljs.core.into);
hlisp.interpreter.resolve_env = function resolve_env(env, name) {
  var or__3824__auto____64257 = cljs.core._lookup.call(null, env, name, null);
  if(cljs.core.truth_(or__3824__auto____64257)) {
    return or__3824__auto____64257
  }else {
    return cljs.core._lookup.call(null, cljs.core.deref.call(null, hlisp.interpreter._STAR_global_env_STAR_), name, null)
  }
};
hlisp.interpreter.html_tags = cljs.core.PersistentHashSet.fromArray(["dd", "big", "col", "head", "sub", "tt", "basefont", "a", "output", "b", "figcaption", "body", "rt", "details", "tfoot", "nav", "acronym", "pre", "img", "form", "iframe", "figure", "meta", "section", "caption", "summary", "bdi", "small", "noframes", "wbr", "var", "dl", "em", "fieldset", "isindex", "datalist", "i", "h1", "meter", "h2", "hr", "span", "data", "input", "del", "h3", "script", "track", "command", "html", "dfn", "h4", 
"noscript", "optgroup", "legend", "bdo", "dir", "param", "area", "h5", "frame", "kbd", "code", "progress", "header", "mark", "time", "h6", "sup", "table", "ins", "font", "blockquote", "br", "p", "dt", "td", "abbr", "q", "samp", "div", "keygen", "style", "base", "button", "strike", "s", "thead", "th", "label", "address", "center", "u", "option", "eventsource", "frameset", "tbody", "article", "audio", "cite", "ul", "strong", "hgroup", "aside", "canvas", "title", "embed", "applet", "ruby", "textarea", 
"link", "source", "video", "footer", "select", "map", "li", "ol", "rp", "tr", "colgroup", "menu", "object"]);
hlisp.interpreter.html_text_tags = cljs.core.PersistentHashSet.fromArray(["#text", "#comment"]);
hlisp.interpreter.hlisp_boxed_tags = cljs.core.PersistentHashSet.fromArray(["val:map", "val:seq", "val:true", "val:set", "val:false", "val:num", "val:nil", "val:str", "val:vec"]);
hlisp.interpreter.self_evaluating_tags = clojure.set.union.call(null, hlisp.interpreter.html_tags, hlisp.interpreter.html_text_tags, hlisp.interpreter.hlisp_boxed_tags);
hlisp.interpreter.elems = function elems(hexps) {
  return cljs.core.remove.call(null, hlisp.interpreter.text_hexp_QMARK_, hexps)
};
hlisp.interpreter.text_hexp_QMARK_ = function text_hexp_QMARK_(hexp) {
  return cljs.core._EQ_.call(null, "#", cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'tag")).call(null, hexp), 0, null))
};
hlisp.interpreter.self_evaluating_hexp_QMARK_ = function self_evaluating_hexp_QMARK_(hexp) {
  var or__3824__auto____64259 = cljs.core.contains_QMARK_.call(null, hlisp.interpreter.self_evaluating_tags, (new cljs.core.Keyword("\ufdd0'tag")).call(null, hexp));
  if(or__3824__auto____64259) {
    return or__3824__auto____64259
  }else {
    return hlisp.interpreter.text_hexp_QMARK_.call(null, hexp)
  }
};
hlisp.interpreter.has_tag_QMARK_ = function has_tag_QMARK_(tag, hexp) {
  return cljs.core._EQ_.call(null, tag, (new cljs.core.Keyword("\ufdd0'tag")).call(null, hexp))
};
hlisp.interpreter.quoted_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "quote");
hlisp.interpreter.def_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "def");
hlisp.interpreter.fn_hexp_QMARK_ = cljs.core.partial.call(null, hlisp.interpreter.has_tag_QMARK_, "fn");
hlisp.interpreter.analyze_self_evaluating = function analyze_self_evaluating(hexp) {
  if(cljs.core.truth_(hlisp.interpreter.self_evaluating_hexp_QMARK_.call(null, hexp))) {
    var children__64262 = cljs.core.mapv.call(null, hlisp.interpreter.analyze, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp));
    return function(env) {
      return cljs.core.assoc.call(null, hexp, "\ufdd0'children", cljs.core.mapv.call(null, function(p1__64260_SHARP_) {
        return p1__64260_SHARP_.call(null, env)
      }, children__64262))
    }
  }else {
    return null
  }
};
hlisp.interpreter.analyze_quoted = function analyze_quoted(hexp) {
  if(cljs.core.truth_(hlisp.interpreter.quoted_hexp_QMARK_.call(null, hexp))) {
    return function(env) {
      return cljs.core.first.call(null, hlisp.interpreter.elems.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp)))
    }
  }else {
    return null
  }
};
hlisp.interpreter.analyze_def = function analyze_def(hexp) {
  if(cljs.core.truth_(hlisp.interpreter.def_hexp_QMARK_.call(null, hexp))) {
    var children__64270 = hlisp.interpreter.elems.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp));
    var vec__64269__64271 = hlisp.util.zipfn.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'tag", hlisp.interpreter.analyze], true)).call(null, children__64270);
    var name__64272 = cljs.core.nth.call(null, vec__64269__64271, 0, null);
    var proc__64273 = cljs.core.nth.call(null, vec__64269__64271, 1, null);
    return function(env) {
      var val__64274 = proc__64273.call(null, env);
      hlisp.interpreter.bind_global_BANG_.call(null, cljs.core.PersistentArrayMap.fromArrays([name__64272], [val__64274]));
      return null
    }
  }else {
    return null
  }
};
hlisp.interpreter.analyze_fn = function analyze_fn(hexp) {
  if(cljs.core.truth_(hlisp.interpreter.fn_hexp_QMARK_.call(null, hexp))) {
    var vec__64282__64283 = hlisp.interpreter.elems.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp));
    var c_params__64284 = cljs.core.nth.call(null, vec__64282__64283, 0, null);
    var body__64285 = cljs.core.nthnext.call(null, vec__64282__64283, 1);
    var params__64286 = cljs.core.mapv.call(null, "\ufdd0'tag", (new cljs.core.Keyword("\ufdd0'children")).call(null, c_params__64284));
    var attr_params__64287 = (new cljs.core.Keyword("\ufdd0'attrs")).call(null, c_params__64284);
    var proc__64288 = hlisp.interpreter.analyze_body.call(null, body__64285);
    if(cljs.core.seq.call(null, body__64285)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("empty body"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'seq", "\ufdd1'body"), cljs.core.hash_map("\ufdd0'line", 99))))].join(""));
    }
    return function(env) {
      return hlisp.hexp.make_proc_hexp.call(null, attr_params__64287, params__64286, env, proc__64288)
    }
  }else {
    return null
  }
};
hlisp.interpreter.analyze_node = function analyze_node(hexp) {
  var name__64294 = (new cljs.core.Keyword("\ufdd0'tag")).call(null, hexp);
  var attr_args__64295 = (new cljs.core.Keyword("\ufdd0'attrs")).call(null, hexp);
  var args__64296 = hlisp.interpreter.analyze_seq.call(null, hlisp.interpreter.elems.call(null, (new cljs.core.Keyword("\ufdd0'children")).call(null, hexp)));
  return function(env) {
    var proc__64297 = hlisp.interpreter.resolve_env.call(null, env, name__64294);
    var argv__64298 = args__64296.call(null, env);
    if(cljs.core.truth_(proc__64297)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("eval: unbound variable "), cljs.core.str(name__64294)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, "\ufdd1'proc"))].join(""));
    }
    return hlisp.interpreter.apply_STAR_.call(null, proc__64297, attr_args__64295, args__64296.call(null, env))
  }
};
hlisp.interpreter.analyze = function analyze(hexp) {
  var or__3824__auto____64303 = hlisp.interpreter.analyze_self_evaluating.call(null, hexp);
  if(cljs.core.truth_(or__3824__auto____64303)) {
    return or__3824__auto____64303
  }else {
    var or__3824__auto____64304 = hlisp.interpreter.analyze_quoted.call(null, hexp);
    if(cljs.core.truth_(or__3824__auto____64304)) {
      return or__3824__auto____64304
    }else {
      var or__3824__auto____64305 = hlisp.interpreter.analyze_def.call(null, hexp);
      if(cljs.core.truth_(or__3824__auto____64305)) {
        return or__3824__auto____64305
      }else {
        var or__3824__auto____64306 = hlisp.interpreter.analyze_fn.call(null, hexp);
        if(cljs.core.truth_(or__3824__auto____64306)) {
          return or__3824__auto____64306
        }else {
          return hlisp.interpreter.analyze_node.call(null, hexp)
        }
      }
    }
  }
};
hlisp.interpreter.tap = function tap(thing) {
  console.log([cljs.core.str(thing)].join(""));
  return thing
};
hlisp.interpreter.analyze_body = cljs.core.comp.call(null, hlisp.util.funroll_body, cljs.core.partial.call(null, cljs.core.map, hlisp.interpreter.analyze));
hlisp.interpreter.analyze_seq = cljs.core.comp.call(null, hlisp.util.funroll_seq, cljs.core.partial.call(null, cljs.core.map, hlisp.interpreter.analyze));
hlisp.interpreter.analyze_forms = cljs.core.comp.call(null, hlisp.interpreter.analyze_seq, hlisp.compiler.compile_forms);
hlisp.interpreter.eval_STAR_ = function eval_STAR_(forms) {
  return hlisp.compiler.decompile_hexps.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, hlisp.interpreter.analyze_forms.call(null, forms).call(null, cljs.core.ObjMap.EMPTY)))
};
hlisp.interpreter.parse_bindings = function parse_bindings(params, args) {
  var k__64311 = cljs.core.first.call(null, params);
  var v__64312 = cljs.core.first.call(null, args);
  if(cljs.core._EQ_.call(null, "&", k__64311)) {
    return parse_bindings.call(null, cljs.core.rest.call(null, params), cljs.core.list.call(null, hlisp.hexp.make_seq_hexp.call(null, args)))
  }else {
    if(cljs.core.truth_(function() {
      var and__3822__auto____64313 = k__64311;
      if(cljs.core.truth_(and__3822__auto____64313)) {
        return v__64312
      }else {
        return and__3822__auto____64313
      }
    }())) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.fromArrays([k__64311], [v__64312]), parse_bindings.call(null, cljs.core.rest.call(null, params), cljs.core.rest.call(null, args)))
    }else {
      if(cljs.core.truth_(function() {
        var or__3824__auto____64314 = k__64311;
        if(cljs.core.truth_(or__3824__auto____64314)) {
          return or__3824__auto____64314
        }else {
          return v__64312
        }
      }())) {
        if(false) {
          return null
        }else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("arity mismatch"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
        }
      }else {
        return null
      }
    }
  }
};
hlisp.interpreter.apply_fn = function apply_fn(hexp, attr_args, args) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____64320 = cljs.core.seq.call(null, args);
    if(and__3822__auto____64320) {
      return cljs.core._EQ_.call(null, "\ufdd0'proc", (new cljs.core.Keyword("\ufdd0'tag")).call(null, hexp))
    }else {
      return and__3822__auto____64320
    }
  }())) {
    var proc__64321 = (new cljs.core.Keyword("\ufdd0'proc")).call(null, hexp);
    var params__64322 = (new cljs.core.Keyword("\ufdd0'params")).call(null, hexp);
    var attr_params__64323 = (new cljs.core.Keyword("\ufdd0'attr-params")).call(null, hexp);
    var env__64324 = hlisp.interpreter.bind_env.call(null, (new cljs.core.Keyword("\ufdd0'env")).call(null, hexp), hlisp.interpreter.parse_bindings.call(null, params__64322, args));
    return proc__64321.call(null, env__64324)
  }else {
    return null
  }
};
hlisp.interpreter.apply_prim = function apply_prim(hexp, attr_args, args) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____64326 = cljs.core.seq.call(null, args);
    if(and__3822__auto____64326) {
      return cljs.core._EQ_.call(null, "\ufdd0'prim", (new cljs.core.Keyword("\ufdd0'tag")).call(null, hexp))
    }else {
      return and__3822__auto____64326
    }
  }())) {
    return(new cljs.core.Keyword("\ufdd0'proc")).call(null, hexp).call(null, attr_args, args)
  }else {
    return null
  }
};
hlisp.interpreter.apply_node = function apply_node(hexp, attr_args, args) {
  return cljs.core.update_in.call(null, cljs.core.update_in.call(null, hexp, cljs.core.PersistentVector.fromArray(["\ufdd0'children"], true), cljs.core.into, args), cljs.core.PersistentVector.fromArray(["\ufdd0'attrs"], true), cljs.core.into, attr_args)
};
hlisp.interpreter.apply_STAR_ = function apply_STAR_(hexp, attr_args, args) {
  var or__3824__auto____64329 = hlisp.interpreter.apply_fn.call(null, hexp, attr_args, args);
  if(cljs.core.truth_(or__3824__auto____64329)) {
    return or__3824__auto____64329
  }else {
    var or__3824__auto____64330 = hlisp.interpreter.apply_prim.call(null, hexp, attr_args, args);
    if(cljs.core.truth_(or__3824__auto____64330)) {
      return or__3824__auto____64330
    }else {
      return hlisp.interpreter.apply_node.call(null, hexp, attr_args, args)
    }
  }
};
hlisp.interpreter.bind_primitive_BANG_ = function bind_primitive_BANG_(prims) {
  return hlisp.interpreter.bind_global_BANG_.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.mapv.call(null, cljs.core.comp.call(null, cljs.core.vec, hlisp.util.zipfn.call(null, cljs.core.PersistentVector.fromArray([cljs.core.str, hlisp.hexp.make_prim_hexp], true))), cljs.core.partition.call(null, 2, prims))))
};
goog.provide("hlisp.primitives");
goog.require("cljs.core");
goog.require("hlisp.hexp");
goog.require("hlisp.hexp");
hlisp.primitives.prims = cljs.core.PersistentVector.fromArray(["foop", function prims(p__6730, args) {
  var map__6736__6737 = p__6730;
  var map__6736__6738 = cljs.core.seq_QMARK_.call(null, map__6736__6737) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6736__6737) : map__6736__6737;
  var attr__6739 = map__6736__6738;
  var hey__6740 = cljs.core._lookup.call(null, map__6736__6738, "\ufdd1'hey", null);
  return cljs.core.assoc.call(null, hlisp.hexp.make_hexp.call(null, "div"), "\ufdd0'children", cljs.core.vec.call(null, args), "\ufdd0'attrs", cljs.core.into.call(null, cljs.core.PersistentArrayMap.fromArrays(["\ufdd1'asdf"], [hey__6740]), attr__6739))
}], true);
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__64949 = s;
      var limit__64950 = limit;
      var parts__64951 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__64950, 1)) {
          return cljs.core.conj.call(null, parts__64951, s__64949)
        }else {
          var temp__3971__auto____64952 = cljs.core.re_find.call(null, re, s__64949);
          if(cljs.core.truth_(temp__3971__auto____64952)) {
            var m__64953 = temp__3971__auto____64952;
            var index__64954 = s__64949.indexOf(m__64953);
            var G__64955 = s__64949.substring(index__64954 + cljs.core.count.call(null, m__64953));
            var G__64956 = limit__64950 - 1;
            var G__64957 = cljs.core.conj.call(null, parts__64951, s__64949.substring(0, index__64954));
            s__64949 = G__64955;
            limit__64950 = G__64956;
            parts__64951 = G__64957;
            continue
          }else {
            return cljs.core.conj.call(null, parts__64951, s__64949)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__64961 = s.length;
  while(true) {
    if(index__64961 === 0) {
      return""
    }else {
      var ch__64962 = cljs.core._lookup.call(null, s, index__64961 - 1, null);
      if(function() {
        var or__3824__auto____64963 = cljs.core._EQ_.call(null, ch__64962, "\n");
        if(or__3824__auto____64963) {
          return or__3824__auto____64963
        }else {
          return cljs.core._EQ_.call(null, ch__64962, "\r")
        }
      }()) {
        var G__64964 = index__64961 - 1;
        index__64961 = G__64964;
        continue
      }else {
        return s.substring(0, index__64961)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__64968 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____64969 = cljs.core.not.call(null, s__64968);
    if(or__3824__auto____64969) {
      return or__3824__auto____64969
    }else {
      var or__3824__auto____64970 = cljs.core._EQ_.call(null, "", s__64968);
      if(or__3824__auto____64970) {
        return or__3824__auto____64970
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__64968)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__64977 = new goog.string.StringBuffer;
  var length__64978 = s.length;
  var index__64979 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__64978, index__64979)) {
      return buffer__64977.toString()
    }else {
      var ch__64980 = s.charAt(index__64979);
      var temp__3971__auto____64981 = cljs.core._lookup.call(null, cmap, ch__64980, null);
      if(cljs.core.truth_(temp__3971__auto____64981)) {
        var replacement__64982 = temp__3971__auto____64981;
        buffer__64977.append([cljs.core.str(replacement__64982)].join(""))
      }else {
        buffer__64977.append(ch__64980)
      }
      var G__64983 = index__64979 + 1;
      index__64979 = G__64983;
      continue
    }
    break
  }
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("jayq.util");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    if(cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__3971__auto____64709 = jayq.core.crate_meta.call(null, sel);
      if(cljs.core.truth_(temp__3971__auto____64709)) {
        var cm__64710 = temp__3971__auto____64709;
        return[cljs.core.str("[crateGroup="), cljs.core.str(cm__64710), cljs.core.str("]")].join("")
      }else {
        return sel
      }
    }else {
      if(cljs.core.keyword_QMARK_.call(null, sel)) {
        return cljs.core.name.call(null, sel)
      }else {
        if("\ufdd0'else") {
          return sel
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.$ = function() {
  var $__delegate = function(sel, p__64711) {
    var vec__64715__64716 = p__64711;
    var context__64717 = cljs.core.nth.call(null, vec__64715__64716, 0, null);
    if(cljs.core.not.call(null, context__64717)) {
      return jQuery(jayq.core.__GT_selector.call(null, sel))
    }else {
      return jQuery(jayq.core.__GT_selector.call(null, sel), context__64717)
    }
  };
  var $ = function(sel, var_args) {
    var p__64711 = null;
    if(goog.isDef(var_args)) {
      p__64711 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return $__delegate.call(this, sel, p__64711)
  };
  $.cljs$lang$maxFixedArity = 1;
  $.cljs$lang$applyTo = function(arglist__64718) {
    var sel = cljs.core.first(arglist__64718);
    var p__64711 = cljs.core.rest(arglist__64718);
    return $__delegate(sel, p__64711)
  };
  $.cljs$lang$arity$variadic = $__delegate;
  return $
}();
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____64719 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____64719)) {
    return or__3824__auto____64719
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
jQuery.prototype.call = function() {
  var G__64720 = null;
  var G__64720__2 = function(_, k) {
    return cljs.core._lookup.call(null, this, k)
  };
  var G__64720__3 = function(_, k, not_found) {
    return cljs.core._lookup.call(null, this, k, not_found)
  };
  G__64720 = function(_, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__64720__2.call(this, _, k);
      case 3:
        return G__64720__3.call(this, _, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__64720
}();
jayq.core.anim = function anim(elem, props, dur) {
  return elem.animate(jayq.util.clj__GT_js.call(null, props), dur)
};
jayq.core.text = function() {
  var text = null;
  var text__1 = function($elem) {
    return $elem.text()
  };
  var text__2 = function($elem, txt) {
    return $elem.text(txt)
  };
  text = function($elem, txt) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, $elem);
      case 2:
        return text__2.call(this, $elem, txt)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
jayq.core.css = function css($elem, opts) {
  if(cljs.core.keyword_QMARK_.call(null, opts)) {
    return $elem.css(cljs.core.name.call(null, opts))
  }else {
    return $elem.css(jayq.util.clj__GT_js.call(null, opts))
  }
};
jayq.core.attr = function() {
  var attr__delegate = function($elem, a, p__64721) {
    var vec__64726__64727 = p__64721;
    var v__64728 = cljs.core.nth.call(null, vec__64726__64727, 0, null);
    if(cljs.core.map_QMARK_.call(null, a)) {
      return $elem.attr(jayq.util.clj__GT_js.call(null, a))
    }else {
      var a__64729 = cljs.core.name.call(null, a);
      if(cljs.core.not.call(null, v__64728)) {
        return $elem.attr(a__64729)
      }else {
        return $elem.attr(a__64729, v__64728)
      }
    }
  };
  var attr = function($elem, a, var_args) {
    var p__64721 = null;
    if(goog.isDef(var_args)) {
      p__64721 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return attr__delegate.call(this, $elem, a, p__64721)
  };
  attr.cljs$lang$maxFixedArity = 2;
  attr.cljs$lang$applyTo = function(arglist__64730) {
    var $elem = cljs.core.first(arglist__64730);
    var a = cljs.core.first(cljs.core.next(arglist__64730));
    var p__64721 = cljs.core.rest(cljs.core.next(arglist__64730));
    return attr__delegate($elem, a, p__64721)
  };
  attr.cljs$lang$arity$variadic = attr__delegate;
  return attr
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name.call(null, a))
};
jayq.core.data = function() {
  var data__delegate = function($elem, k, p__64731) {
    var vec__64736__64737 = p__64731;
    var v__64738 = cljs.core.nth.call(null, vec__64736__64737, 0, null);
    var k__64739 = cljs.core.name.call(null, k);
    if(cljs.core.not.call(null, v__64738)) {
      return $elem.data(k__64739)
    }else {
      return $elem.data(k__64739, v__64738)
    }
  };
  var data = function($elem, k, var_args) {
    var p__64731 = null;
    if(goog.isDef(var_args)) {
      p__64731 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return data__delegate.call(this, $elem, k, p__64731)
  };
  data.cljs$lang$maxFixedArity = 2;
  data.cljs$lang$applyTo = function(arglist__64740) {
    var $elem = cljs.core.first(arglist__64740);
    var k = cljs.core.first(cljs.core.next(arglist__64740));
    var p__64731 = cljs.core.rest(cljs.core.next(arglist__64740));
    return data__delegate($elem, k, p__64731)
  };
  data.cljs$lang$arity$variadic = data__delegate;
  return data
}();
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), "\ufdd0'keywordize-keys", true)
};
jayq.core.add_class = function add_class($elem, cl) {
  var cl__64742 = cljs.core.name.call(null, cl);
  return $elem.addClass(cl__64742)
};
jayq.core.remove_class = function remove_class($elem, cl) {
  var cl__64744 = cljs.core.name.call(null, cl);
  return $elem.removeClass(cl__64744)
};
jayq.core.toggle_class = function toggle_class($elem, cl) {
  var cl__64746 = cljs.core.name.call(null, cl);
  return $elem.toggleClass(cl__64746)
};
jayq.core.has_class = function has_class($elem, cl) {
  var cl__64748 = cljs.core.name.call(null, cl);
  return $elem.hasClass(cl__64748)
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content)
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content)
};
jayq.core.append = function append($elem, content) {
  if(cljs.core.vector_QMARK_.call(null, content)) {
    return $elem.append(jayq.util.clj__GT_js.call(null, content))
  }else {
    return $elem.append(content)
  }
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content)
};
jayq.core.remove = function remove($elem) {
  return $elem.remove()
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__64749) {
    var vec__64754__64755 = p__64749;
    var speed__64756 = cljs.core.nth.call(null, vec__64754__64755, 0, null);
    var on_finish__64757 = cljs.core.nth.call(null, vec__64754__64755, 1, null);
    return $elem.hide(speed__64756, on_finish__64757)
  };
  var hide = function($elem, var_args) {
    var p__64749 = null;
    if(goog.isDef(var_args)) {
      p__64749 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return hide__delegate.call(this, $elem, p__64749)
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__64758) {
    var $elem = cljs.core.first(arglist__64758);
    var p__64749 = cljs.core.rest(arglist__64758);
    return hide__delegate($elem, p__64749)
  };
  hide.cljs$lang$arity$variadic = hide__delegate;
  return hide
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__64759) {
    var vec__64764__64765 = p__64759;
    var speed__64766 = cljs.core.nth.call(null, vec__64764__64765, 0, null);
    var on_finish__64767 = cljs.core.nth.call(null, vec__64764__64765, 1, null);
    return $elem.show(speed__64766, on_finish__64767)
  };
  var show = function($elem, var_args) {
    var p__64759 = null;
    if(goog.isDef(var_args)) {
      p__64759 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return show__delegate.call(this, $elem, p__64759)
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__64768) {
    var $elem = cljs.core.first(arglist__64768);
    var p__64759 = cljs.core.rest(arglist__64768);
    return show__delegate($elem, p__64759)
  };
  show.cljs$lang$arity$variadic = show__delegate;
  return show
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__64769) {
    var vec__64774__64775 = p__64769;
    var speed__64776 = cljs.core.nth.call(null, vec__64774__64775, 0, null);
    var on_finish__64777 = cljs.core.nth.call(null, vec__64774__64775, 1, null);
    return $elem.toggle(speed__64776, on_finish__64777)
  };
  var toggle = function($elem, var_args) {
    var p__64769 = null;
    if(goog.isDef(var_args)) {
      p__64769 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return toggle__delegate.call(this, $elem, p__64769)
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__64778) {
    var $elem = cljs.core.first(arglist__64778);
    var p__64769 = cljs.core.rest(arglist__64778);
    return toggle__delegate($elem, p__64769)
  };
  toggle.cljs$lang$arity$variadic = toggle__delegate;
  return toggle
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__64779) {
    var vec__64784__64785 = p__64779;
    var speed__64786 = cljs.core.nth.call(null, vec__64784__64785, 0, null);
    var on_finish__64787 = cljs.core.nth.call(null, vec__64784__64785, 1, null);
    return $elem.fadeOut(speed__64786, on_finish__64787)
  };
  var fade_out = function($elem, var_args) {
    var p__64779 = null;
    if(goog.isDef(var_args)) {
      p__64779 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_out__delegate.call(this, $elem, p__64779)
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__64788) {
    var $elem = cljs.core.first(arglist__64788);
    var p__64779 = cljs.core.rest(arglist__64788);
    return fade_out__delegate($elem, p__64779)
  };
  fade_out.cljs$lang$arity$variadic = fade_out__delegate;
  return fade_out
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__64789) {
    var vec__64794__64795 = p__64789;
    var speed__64796 = cljs.core.nth.call(null, vec__64794__64795, 0, null);
    var on_finish__64797 = cljs.core.nth.call(null, vec__64794__64795, 1, null);
    return $elem.fadeIn(speed__64796, on_finish__64797)
  };
  var fade_in = function($elem, var_args) {
    var p__64789 = null;
    if(goog.isDef(var_args)) {
      p__64789 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_in__delegate.call(this, $elem, p__64789)
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__64798) {
    var $elem = cljs.core.first(arglist__64798);
    var p__64789 = cljs.core.rest(arglist__64798);
    return fade_in__delegate($elem, p__64789)
  };
  fade_in.cljs$lang$arity$variadic = fade_in__delegate;
  return fade_in
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__64799) {
    var vec__64804__64805 = p__64799;
    var speed__64806 = cljs.core.nth.call(null, vec__64804__64805, 0, null);
    var on_finish__64807 = cljs.core.nth.call(null, vec__64804__64805, 1, null);
    return $elem.slideUp(speed__64806, on_finish__64807)
  };
  var slide_up = function($elem, var_args) {
    var p__64799 = null;
    if(goog.isDef(var_args)) {
      p__64799 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_up__delegate.call(this, $elem, p__64799)
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__64808) {
    var $elem = cljs.core.first(arglist__64808);
    var p__64799 = cljs.core.rest(arglist__64808);
    return slide_up__delegate($elem, p__64799)
  };
  slide_up.cljs$lang$arity$variadic = slide_up__delegate;
  return slide_up
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__64809) {
    var vec__64814__64815 = p__64809;
    var speed__64816 = cljs.core.nth.call(null, vec__64814__64815, 0, null);
    var on_finish__64817 = cljs.core.nth.call(null, vec__64814__64815, 1, null);
    return $elem.slideDown(speed__64816, on_finish__64817)
  };
  var slide_down = function($elem, var_args) {
    var p__64809 = null;
    if(goog.isDef(var_args)) {
      p__64809 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_down__delegate.call(this, $elem, p__64809)
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__64818) {
    var $elem = cljs.core.first(arglist__64818);
    var p__64809 = cljs.core.rest(arglist__64818);
    return slide_down__delegate($elem, p__64809)
  };
  slide_down.cljs$lang$arity$variadic = slide_down__delegate;
  return slide_down
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent()
};
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector))
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__64819) {
    var vec__64823__64824 = p__64819;
    var context__64825 = cljs.core.nth.call(null, vec__64823__64824, 0, null);
    return $elem.closest(selector, context__64825)
  };
  var closest = function($elem, selector, var_args) {
    var p__64819 = null;
    if(goog.isDef(var_args)) {
      p__64819 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return closest__delegate.call(this, $elem, selector, p__64819)
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__64826) {
    var $elem = cljs.core.first(arglist__64826);
    var selector = cljs.core.first(cljs.core.next(arglist__64826));
    var p__64819 = cljs.core.rest(cljs.core.next(arglist__64826));
    return closest__delegate($elem, selector, p__64819)
  };
  closest.cljs$lang$arity$variadic = closest__delegate;
  return closest
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone()
};
jayq.core.inner = function inner($elem, v) {
  return $elem.html(v)
};
jayq.core.empty = function empty($elem) {
  return $elem.empty()
};
jayq.core.val = function() {
  var val__delegate = function($elem, p__64827) {
    var vec__64831__64832 = p__64827;
    var v__64833 = cljs.core.nth.call(null, vec__64831__64832, 0, null);
    if(cljs.core.truth_(v__64833)) {
      return $elem.val(v__64833)
    }else {
      return $elem.val()
    }
  };
  var val = function($elem, var_args) {
    var p__64827 = null;
    if(goog.isDef(var_args)) {
      p__64827 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return val__delegate.call(this, $elem, p__64827)
  };
  val.cljs$lang$maxFixedArity = 1;
  val.cljs$lang$applyTo = function(arglist__64834) {
    var $elem = cljs.core.first(arglist__64834);
    var p__64827 = cljs.core.rest(arglist__64834);
    return val__delegate($elem, p__64827)
  };
  val.cljs$lang$arity$variadic = val__delegate;
  return val
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize()
};
jayq.core.queue = function queue($elem, callback) {
  return $elem.queue(callback)
};
jayq.core.dequeue = function dequeue(elem) {
  return jayq.core.$.call(null, elem).dequeue()
};
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func)
};
jayq.core.xhr = function xhr(p__64835, content, callback) {
  var vec__64841__64842 = p__64835;
  var method__64843 = cljs.core.nth.call(null, vec__64841__64842, 0, null);
  var uri__64844 = cljs.core.nth.call(null, vec__64841__64842, 1, null);
  var params__64845 = jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'data", "\ufdd0'success"], {"\ufdd0'type":clojure.string.upper_case.call(null, cljs.core.name.call(null, method__64843)), "\ufdd0'data":jayq.util.clj__GT_js.call(null, content), "\ufdd0'success":callback}));
  return jQuery.ajax(uri__64844, params__64845)
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.util.clj__GT_js.call(null, settings))
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.util.clj__GT_js.call(null, settings))
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ajax.cljs$lang$arity$1 = ajax__1;
  ajax.cljs$lang$arity$2 = ajax__2;
  return ajax
}();
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func)
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__64846) {
    var vec__64850__64851 = p__64846;
    var func__64852 = cljs.core.nth.call(null, vec__64850__64851, 0, null);
    return $elem.unbind(cljs.core.name.call(null, ev), func__64852)
  };
  var unbind = function($elem, ev, var_args) {
    var p__64846 = null;
    if(goog.isDef(var_args)) {
      p__64846 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unbind__delegate.call(this, $elem, ev, p__64846)
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__64853) {
    var $elem = cljs.core.first(arglist__64853);
    var ev = cljs.core.first(cljs.core.next(arglist__64853));
    var p__64846 = cljs.core.rest(cljs.core.next(arglist__64853));
    return unbind__delegate($elem, ev, p__64846)
  };
  unbind.cljs$lang$arity$variadic = unbind__delegate;
  return unbind
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev))
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func)
};
jayq.core.__GT_event = function __GT_event(e) {
  if(cljs.core.keyword_QMARK_.call(null, e)) {
    return cljs.core.name.call(null, e)
  }else {
    if(cljs.core.map_QMARK_.call(null, e)) {
      return jayq.util.clj__GT_js.call(null, e)
    }else {
      if(cljs.core.coll_QMARK_.call(null, e)) {
        return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e))
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Unknown event type: "), cljs.core.str(e)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__64854) {
    var vec__64860__64861 = p__64854;
    var sel__64862 = cljs.core.nth.call(null, vec__64860__64861, 0, null);
    var data__64863 = cljs.core.nth.call(null, vec__64860__64861, 1, null);
    var handler__64864 = cljs.core.nth.call(null, vec__64860__64861, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__64862), data__64863, handler__64864)
  };
  var on = function($elem, events, var_args) {
    var p__64854 = null;
    if(goog.isDef(var_args)) {
      p__64854 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return on__delegate.call(this, $elem, events, p__64854)
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__64865) {
    var $elem = cljs.core.first(arglist__64865);
    var events = cljs.core.first(cljs.core.next(arglist__64865));
    var p__64854 = cljs.core.rest(cljs.core.next(arglist__64865));
    return on__delegate($elem, events, p__64854)
  };
  on.cljs$lang$arity$variadic = on__delegate;
  return on
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__64866) {
    var vec__64872__64873 = p__64866;
    var sel__64874 = cljs.core.nth.call(null, vec__64872__64873, 0, null);
    var data__64875 = cljs.core.nth.call(null, vec__64872__64873, 1, null);
    var handler__64876 = cljs.core.nth.call(null, vec__64872__64873, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__64874), data__64875, handler__64876)
  };
  var one = function($elem, events, var_args) {
    var p__64866 = null;
    if(goog.isDef(var_args)) {
      p__64866 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return one__delegate.call(this, $elem, events, p__64866)
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__64877) {
    var $elem = cljs.core.first(arglist__64877);
    var events = cljs.core.first(cljs.core.next(arglist__64877));
    var p__64866 = cljs.core.rest(cljs.core.next(arglist__64877));
    return one__delegate($elem, events, p__64866)
  };
  one.cljs$lang$arity$variadic = one__delegate;
  return one
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__64878) {
    var vec__64883__64884 = p__64878;
    var sel__64885 = cljs.core.nth.call(null, vec__64883__64884, 0, null);
    var handler__64886 = cljs.core.nth.call(null, vec__64883__64884, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__64885), handler__64886)
  };
  var off = function($elem, events, var_args) {
    var p__64878 = null;
    if(goog.isDef(var_args)) {
      p__64878 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return off__delegate.call(this, $elem, events, p__64878)
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__64887) {
    var $elem = cljs.core.first(arglist__64887);
    var events = cljs.core.first(cljs.core.next(arglist__64887));
    var p__64878 = cljs.core.rest(cljs.core.next(arglist__64887));
    return off__delegate($elem, events, p__64878)
  };
  off.cljs$lang$arity$variadic = off__delegate;
  return off
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault()
};
goog.provide("hlisp.dom");
goog.require("cljs.core");
goog.require("hlisp.util");
goog.require("jayq.util");
goog.require("jayq.core");
hlisp.dom.node_types = cljs.core.PersistentArrayMap.fromArrays([1], ["\ufdd0'element"]);
hlisp.dom.branch_QMARK_ = function branch_QMARK_(node) {
  var and__3822__auto____230943 = !(node == null);
  if(and__3822__auto____230943) {
    return cljs.core._EQ_.call(null, "\ufdd0'element", hlisp.dom.node_types.call(null, node.nodeType))
  }else {
    return and__3822__auto____230943
  }
};
hlisp.dom.nodelist_seq = function nodelist_seq(nodelist) {
  if(cljs.core.truth_(nodelist)) {
    var len__230946 = nodelist.length;
    return cljs.core.map.call(null, function(p1__230941_SHARP_) {
      return nodelist.item(p1__230941_SHARP_)
    }, cljs.core.range.call(null, 0, len__230946))
  }else {
    return null
  }
};
hlisp.dom.specified_attr_nodes = function specified_attr_nodes(node) {
  return cljs.core.filter.call(null, function(p1__230944_SHARP_) {
    return p1__230944_SHARP_.specified
  }, hlisp.dom.nodelist_seq.call(null, node.attributes))
};
hlisp.dom.attr_kv = function attr_kv(node, attr_node) {
  var k__230954 = cljs.core.symbol.call(null, attr_node.nodeName.toLowerCase());
  var v__230960 = function() {
    var pred__230955__230958 = cljs.core._EQ_;
    var expr__230956__230959 = k__230954;
    if(pred__230955__230958.call(null, "style", expr__230956__230959)) {
      return node.style.cssText
    }else {
      return attr_node.nodeValue
    }
  }();
  return cljs.core.list.call(null, k__230954, v__230960)
};
hlisp.dom.ie7_value = function ie7_value(node) {
  var temp__3971__auto____230965 = function() {
    var and__3822__auto____230964 = hlisp.dom.branch_QMARK_.call(null, node);
    if(cljs.core.truth_(and__3822__auto____230964)) {
      return node.value
    }else {
      return and__3822__auto____230964
    }
  }();
  if(cljs.core.truth_(temp__3971__auto____230965)) {
    var v__230966 = temp__3971__auto____230965;
    return cljs.core.list.call(null, "\ufdd1'value", node.value)
  }else {
    return cljs.core.List.EMPTY
  }
};
hlisp.dom.build_attrs = function build_attrs(node) {
  return cljs.core.list.call(null, cljs.core.list.call(null, cljs.core.concat.call(null, cljs.core.mapcat.call(null, cljs.core.partial.call(null, hlisp.dom.attr_kv, node), hlisp.dom.specified_attr_nodes.call(null, node)), hlisp.dom.ie7_value.call(null, node))))
};
hlisp.dom.dom__GT_list = function dom__GT_list(node) {
  var tag__230970 = node.nodeName.toLowerCase();
  if(cljs.core.not_EQ_.call(null, "script", tag__230970)) {
    var attrs__230971 = cljs.core.not_EQ_.call(null, "#", cljs.core.first.call(null, tag__230970)) ? hlisp.dom.build_attrs.call(null, node) : cljs.core.List.EMPTY;
    var children__230972 = cljs.core.truth_(hlisp.dom.branch_QMARK_.call(null, node)) ? cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, dom__GT_list, hlisp.dom.nodelist_seq.call(null, node.childNodes))) : cljs.core.list.call(null, node.nodeValue);
    return cljs.core.concat.call(null, cljs.core.list.call(null, cljs.core.symbol.call(null, tag__230970)), attrs__230971, children__230972)
  }else {
    return null
  }
};
hlisp.dom.read_dom = function read_dom(root) {
  return cljs.core.list.call(null, hlisp.dom.dom__GT_list.call(null, root))
};
hlisp.dom.create_elem = function create_elem(p__230973) {
  var vec__230985__230986 = p__230973;
  var tag__230987 = cljs.core.nth.call(null, vec__230985__230986, 0, null);
  var text__230988 = cljs.core.nth.call(null, vec__230985__230986, 1, null);
  var ___230989 = cljs.core.nthnext.call(null, vec__230985__230986, 2);
  var t__230990 = [cljs.core.str(tag__230987)].join("");
  var pred__230991__230994 = cljs.core._EQ_;
  var expr__230992__230995 = t__230990;
  if(pred__230991__230994.call(null, "#text", expr__230992__230995)) {
    return document.createTextNode(text__230988)
  }else {
    if(pred__230991__230994.call(null, "#comment", expr__230992__230995)) {
      return document.createComment(text__230988)
    }else {
      return document.createElement(t__230990)
    }
  }
};
hlisp.dom.write_dom = function write_dom(p__230996) {
  var vec__231004__231005 = p__230996;
  var tag__231006 = cljs.core.nth.call(null, vec__231004__231005, 0, null);
  var attrs__231007 = cljs.core.nth.call(null, vec__231004__231005, 1, null);
  var children__231008 = cljs.core.nthnext.call(null, vec__231004__231005, 2);
  var hexp__231009 = vec__231004__231005;
  var $elem__231010 = jayq.core.$.call(null, hlisp.dom.create_elem.call(null, hexp__231009));
  if(cljs.core.list_QMARK_.call(null, attrs__231007)) {
    return jayq.core.append.call(null, jayq.core.attr.call(null, $elem__231010, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, cljs.core.first.call(null, attrs__231007)))))), cljs.core.mapv.call(null, write_dom, children__231008))
  }else {
    return $elem__231010
  }
};
goog.provide("hlisp.main");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("hlisp.primitives");
goog.require("hlisp.dom");
goog.require("hlisp.reader");
goog.require("hlisp.util");
goog.require("hlisp.interpreter");
goog.require("hlisp.interpreter");
goog.require("hlisp.reader");
goog.require("hlisp.dom");
goog.require("hlisp.util");
goog.require("hlisp.primitives");
goog.require("jayq.util");
goog.require("goog.dom");
goog.require("jayq.core");
hlisp.main.xhr_opts = cljs.core.ObjMap.fromObject(["\ufdd0'async", "\ufdd0'dataType", "\ufdd0'type"], {"\ufdd0'async":false, "\ufdd0'dataType":"text", "\ufdd0'type":"GET"});
hlisp.main.status_ok_QMARK_ = function status_ok_QMARK_(status) {
  var and__3822__auto____215578 = status >= 200;
  if(and__3822__auto____215578) {
    return status < 300
  }else {
    return and__3822__auto____215578
  }
};
hlisp.main.xhr = function() {
  var xhr__delegate = function(uri, p__215580) {
    var map__215589__215590 = p__215580;
    var map__215589__215591 = cljs.core.seq_QMARK_.call(null, map__215589__215590) ? cljs.core.apply.call(null, cljs.core.hash_map, map__215589__215590) : map__215589__215590;
    var opt__215592 = cljs.core._lookup.call(null, map__215589__215591, "\ufdd0'opt", null);
    var ret__215593 = jQuery.ajax([cljs.core.str(uri)].join(""), jayq.util.clj__GT_js.call(null, cljs.core.into.call(null, hlisp.main.xhr_opts, opt__215592)));
    var status__215594 = ret__215593.status;
    var message__215595 = ret__215593.statusText;
    var text__215596 = ret__215593.responseText;
    if(cljs.core.truth_(hlisp.main.status_ok_QMARK_.call(null, status__215594))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(status__215594), cljs.core.str(" "), cljs.core.str(message__215595)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'status-ok?", "\ufdd1'status"), cljs.core.hash_map("\ufdd0'line", 33))))].join(""));
    }
    return text__215596
  };
  var xhr = function(uri, var_args) {
    var p__215580 = null;
    if(goog.isDef(var_args)) {
      p__215580 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return xhr__delegate.call(this, uri, p__215580)
  };
  xhr.cljs$lang$maxFixedArity = 1;
  xhr.cljs$lang$applyTo = function(arglist__215597) {
    var uri = cljs.core.first(arglist__215597);
    var p__215580 = cljs.core.rest(arglist__215597);
    return xhr__delegate(uri, p__215580)
  };
  xhr.cljs$lang$arity$variadic = xhr__delegate;
  return xhr
}();
hlisp.main.load_remote_scripts = function load_remote_scripts() {
  return cljs.core.mapv.call(null, cljs.core.comp.call(null, hlisp.main.xhr, function(p1__215579_SHARP_) {
    return jayq.core.attr.call(null, jayq.core.$.call(null, p1__215579_SHARP_), "src")
  }), jayq.core.find.call(null, jayq.core.$.call(null, "head"), "script[type='text/hlisp'][src]"))
};
hlisp.main.init = function init() {
  console.time("load time");
  hlisp.interpreter.bind_primitive_BANG_.call(null, hlisp.primitives.prims);
  var body__215603 = document.body;
  var $body__215604 = jayq.core.$.call(null, body__215603);
  var scrp_src__215605 = cljs.core.first.call(null, cljs.core.map.call(null, hlisp.reader.read_string, hlisp.main.load_remote_scripts.call(null)));
  var body_src__215606 = cljs.core.drop.call(null, 2, cljs.core.first.call(null, hlisp.dom.read_dom.call(null, body__215603)));
  hlisp.util.tee.call(null, body_src__215606);
  jayq.core.empty.call(null, $body__215604);
  cljs.core.mapv.call(null, function(p1__215598_SHARP_) {
    return jayq.core.append.call(null, $body__215604, p1__215598_SHARP_)
  }, cljs.core.concat.call(null, cljs.core.map.call(null, hlisp.dom.write_dom, hlisp.interpreter.eval_STAR_.call(null, scrp_src__215605)), cljs.core.map.call(null, hlisp.dom.write_dom, hlisp.interpreter.eval_STAR_.call(null, body_src__215606))));
  return console.timeEnd("load time")
};
jayq.core.document_ready.call(null, hlisp.main.init);
